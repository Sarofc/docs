{
  "api/Saro.BT.BBCondition.html": {
    "href": "api/Saro.BT.BBCondition.html",
    "title": "Class BBCondition | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BBCondition Inheritance Object BTNode BTAuxiliary BTDecorator BBCondition Inherited Members BTDecorator.abortType BTDecorator.IsObserving BTDecorator.IsActive BTDecorator.Clone() BTDecorator.OnEnter() BTDecorator.OnExit() BTDecorator.OnParentExit() BTDecorator.ObserverBegin() BTDecorator.ObserverEnd() BTDecorator.OnObserverBegin() BTDecorator.OnObserverEnd() BTDecorator.OnExecute(Single) BTDecorator.Evaluate() BTDecorator.UpdateAborts() BTDecorator.Description(StringBuilder) BTAuxiliary.m_Child BTAuxiliary.RunChild() BTAuxiliary.OnAbort(Int32) BTAuxiliary.GetChildAt(Int32) BTAuxiliary.SetChildAt(BTNode, Int32) BTAuxiliary.ChildCount() BTAuxiliary.MaxChildCount() BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnChildEnter(Int32) BTNode.OnChildExit(Int32, BTNode.EStatus) BTNode.OnValidate() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [BTNode(\"Blackboard_24x\", \"‘黑板条件’节点\\n节点将判断黑板键的值与给定值之间的关系，根据结果（可以是大于、小于、等于，等等）阻止或允许节点的执行。\")] public class BBCondition : BTDecorator, IIterableNode<BTNode> Constructors BBCondition() Declaration public BBCondition() Fields bbKey Declaration public BBKeySelector bbKey Field Value Type Description BBKeySelector compareFloat Declaration public float compareFloat Field Value Type Description Single compareInt Declaration public int compareInt Field Value Type Description Int32 compareText Declaration public string compareText Field Value Type Description String keyOperation Declaration public byte keyOperation Field Value Type Description Byte Methods EvaluateCondition() Declaration protected override bool EvaluateCondition() Returns Type Description Boolean Overrides BTDecorator.EvaluateCondition() OnDecoratorEnter() Declaration protected override void OnDecoratorEnter() Overrides BTDecorator.OnDecoratorEnter() OnDecoratorExit() Declaration protected override void OnDecoratorExit() Overrides BTDecorator.OnDecoratorExit()"
  },
  "api/Saro.BT.Variable_String.html": {
    "href": "api/Saro.BT.Variable_String.html",
    "title": "Class Variable_String | Moon Behavior Tree | 0.0.1",
    "keywords": "Class Variable_String Inheritance Object Variable Variable < String > Variable_String Inherited Members Variable<String>.value Variable<String>.GetValue() Variable<String>.SetValue(String) Variable<String>.Reset() Variable<String>.Compare(Variable) Variable<String>.SetRawValue(Object) Variable<String>.GetRawValue() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Variable_String : Variable<string>"
  },
  "api/Saro.BT.Designer.BTGraphView.html": {
    "href": "api/Saro.BT.Designer.BTGraphView.html",
    "title": "Class BTGraphView | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTGraphView Inheritance Object AbstractGraphView BTGraphView Inherited Members AbstractGraphView.ClearNodesAndEdges() Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BTGraphView : AbstractGraphView Constructors BTGraphView() Declaration public BTGraphView() BTGraphView(BehaviorTree) Declaration public BTGraphView(BehaviorTree tree) Parameters Type Name Description BehaviorTree tree Properties OnNodeChangeRequest Declaration public Action<BTGraphNode, ContextualMenuPopulateEvent> OnNodeChangeRequest { get; set; } Property Value Type Description Action < BTGraphNode , ContextualMenuPopulateEvent > OnNodeDecorateRequest Declaration public Action<BTGraphNode, ContextualMenuPopulateEvent> OnNodeDecorateRequest { get; set; } Property Value Type Description Action < BTGraphNode , ContextualMenuPopulateEvent > OnNodeSelection Declaration public Action<BTGraphNode> OnNodeSelection { get; set; } Property Value Type Description Action < BTGraphNode > Methods BuildContextualMenu(ContextualMenuPopulateEvent) Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt ConnectPorts(Port, Port) Declaration public static Edge ConnectPorts(Port output, Port input) Parameters Type Name Description Port output Port input Returns Type Description Edge DisconnectPorts(Edge) Declaration public static void DisconnectPorts(Edge edge) Parameters Type Name Description Edge edge Format() Declaration public void Format() GetCompatiblePorts(Port, NodeAdapter) Declaration public override List<Port> GetCompatiblePorts(Port startAnchor, NodeAdapter nodeAdapter) Parameters Type Name Description Port startAnchor NodeAdapter nodeAdapter Returns Type Description List < Port > OnBehaviorTreeChanged(BehaviorTree) Declaration public void OnBehaviorTreeChanged(BehaviorTree tree) Parameters Type Name Description BehaviorTree tree Save() Declaration public string Save() Returns Type Description String"
  },
  "api/Saro.BT.Variable-1.html": {
    "href": "api/Saro.BT.Variable-1.html",
    "title": "Class Variable<T> | Moon Behavior Tree | 0.0.1",
    "keywords": "Class Variable<T> Inheritance Object Variable Variable<T> Variable_Bool Variable_EcsEntity Variable_Enum Variable_Float Variable_Int Variable_Object Variable_String Variable_Vector3 Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class Variable<T> : Variable Type Parameters Name Description T Fields value Declaration public T value Field Value Type Description T Methods Compare(Variable) Declaration public override bool Compare(Variable other) Parameters Type Name Description Variable other Returns Type Description Boolean Overrides Variable.Compare(Variable) GetRawValue() Declaration public override object GetRawValue() Returns Type Description Object Overrides Variable.GetRawValue() GetValue() Declaration public T GetValue() Returns Type Description T Reset() Declaration public override void Reset() Overrides Variable.Reset() SetRawValue(Object) Declaration public override void SetRawValue(object val) Parameters Type Name Description Object val Overrides Variable.SetRawValue(Object) SetValue(T) Declaration public void SetValue(T val) Parameters Type Name Description T val"
  },
  "api/Saro.BT.TestService.html": {
    "href": "api/Saro.BT.TestService.html",
    "title": "Class TestService | Moon Behavior Tree | 0.0.1",
    "keywords": "Class TestService Inheritance Object BTNode BTAuxiliary BTService TestService Inherited Members BTService.timer BTService.restartTimerOnEnter BTService.Clone() BTService.OnEnter() BTService.OnExit() BTService.OnExecute(Single) BTService.OnChildEnter(Int32) BTService.OnChildExit(Int32, BTNode.EStatus) BTService.OnParentExit() BTAuxiliary.m_Child BTAuxiliary.RunChild() BTAuxiliary.OnAbort(Int32) BTAuxiliary.GetChildAt(Int32) BTAuxiliary.SetChildAt(BTNode, Int32) BTAuxiliary.ChildCount() BTAuxiliary.MaxChildCount() BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnValidate() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TestService : BTService, IIterableNode<BTNode> Methods Description(StringBuilder) Declaration public override void Description(StringBuilder builder) Parameters Type Name Description StringBuilder builder Overrides BTService.Description(StringBuilder) ServiceTick() Declaration protected override void ServiceTick() Overrides BTService.ServiceTick()"
  },
  "api/Saro.BT.Designer.BTGraphInspector.html": {
    "href": "api/Saro.BT.Designer.BTGraphInspector.html",
    "title": "Class BTGraphInspector | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTGraphInspector Inheritance Object BTGraphInspector Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BTGraphInspector : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Saro.BT.BTBlackboard.html": {
    "href": "api/Saro.BT.BTBlackboard.html",
    "title": "Class BTBlackboard | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTBlackboard Inheritance Object BTBlackboard Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BTBlackboard Constructors BTBlackboard(BlackboardData) Declaration public BTBlackboard(BlackboardData data) Parameters Type Name Description BlackboardData data Properties Data Declaration public BlackboardData Data { get; } Property Value Type Description BlackboardData Variables 与 entries 一一对应 Declaration public List<Variable> Variables { get; } Property Value Type Description List < Variable > Methods GetEnumerator() Declaration public BTBlackboard.Enumerator GetEnumerator() Returns Type Description BTBlackboard.Enumerator GetKeyEntryByName(String) Declaration public BlackboardEntry GetKeyEntryByName(string keyName) Parameters Type Name Description String keyName Returns Type Description BlackboardEntry GetKeyIndexByName(String) Declaration public int GetKeyIndexByName(string keyName) Parameters Type Name Description String keyName Returns Type Description Int32 GetValue<T>(Int32) Declaration public T GetValue<T>(int index) Parameters Type Name Description Int32 index Returns Type Description T Type Parameters Name Description T GetValue<T>(String) Declaration public T GetValue<T>(string keyName) Parameters Type Name Description String keyName Returns Type Description T Type Parameters Name Description T GetVariable(Int32) Declaration public Variable GetVariable(int index) Parameters Type Name Description Int32 index Returns Type Description Variable GetVariable(String) Declaration public Variable GetVariable(string keyName) Parameters Type Name Description String keyName Returns Type Description Variable RegisterChangeEvent(Int32, Action) Declaration public void RegisterChangeEvent(int index, Action callback) Parameters Type Name Description Int32 index Action callback RegisterChangeEvent(String, Action) Declaration public void RegisterChangeEvent(string keyName, Action callback) Parameters Type Name Description String keyName Action callback ResetData() Declaration public void ResetData() SetObjectValue(Int32, Object) Declaration public void SetObjectValue(int index, object value) Parameters Type Name Description Int32 index Object value SetObjectValue(String, Object) Declaration public void SetObjectValue(string keyName, object value) Parameters Type Name Description String keyName Object value SetValue(String, Variable) Declaration public void SetValue(string keyName, Variable value) Parameters Type Name Description String keyName Variable value SetValue<T>(Int32, T) Declaration public void SetValue<T>(int index, T value) where T : IEquatable<T> Parameters Type Name Description Int32 index T value Type Parameters Name Description T SetValue<T>(String, T) Declaration public void SetValue<T>(string keyName, T value) where T : IEquatable<T> Parameters Type Name Description String keyName T value Type Parameters Name Description T UnregisterChangeEvent(Int32, Action) Declaration public void UnregisterChangeEvent(int index, Action callback) Parameters Type Name Description Int32 index Action callback UnregisterChangeEvent(String, Action) Declaration public void UnregisterChangeEvent(string keyName, Action callback) Parameters Type Name Description String keyName Action callback"
  },
  "api/Saro.BT.Designer.BTGraphDropdownMenuAction.html": {
    "href": "api/Saro.BT.Designer.BTGraphDropdownMenuAction.html",
    "title": "Class BTGraphDropdownMenuAction | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTGraphDropdownMenuAction Inheritance Object BTGraphDropdownMenuAction Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BTGraphDropdownMenuAction : DropdownMenuAction Constructors BTGraphDropdownMenuAction(String, Action<DropdownMenuAction>) Declaration public BTGraphDropdownMenuAction(string actionName, Action<DropdownMenuAction> actionCallback) Parameters Type Name Description String actionName Action < DropdownMenuAction > actionCallback BTGraphDropdownMenuAction(String, Action<DropdownMenuAction>, Func<DropdownMenuAction, Status>, Object) Declaration public BTGraphDropdownMenuAction(string actionName, Action<DropdownMenuAction> actionCallback, Func<DropdownMenuAction, Status> actionStatusCallback, object userData = null) Parameters Type Name Description String actionName Action < DropdownMenuAction > actionCallback Func < DropdownMenuAction , Status > actionStatusCallback Object userData"
  },
  "api/Saro.BT.BTNode.html": {
    "href": "api/Saro.BT.BTNode.html",
    "title": "Class BTNode | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTNode Inheritance Object BTNode BTAuxiliary BTComposite BTTask Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public abstract class BTNode : IIterableNode<BTNode> Fields childIndex Declaration protected int childIndex Field Value Type Description Int32 k_InvalidPreOrder Declaration public const int k_InvalidPreOrder = -1 Field Value Type Description Int32 Properties Actor Declaration protected EcsEntity Actor { get; } Property Value Type Description EcsEntity Blackboard Declaration protected BTBlackboard Blackboard { get; } Property Value Type Description BTBlackboard ChildOrder Declaration public int ChildOrder { get; } Property Value Type Description Int32 Iterator Declaration public BTBehaviorIterator Iterator { get; } Property Value Type Description BTBehaviorIterator Parent Declaration public BTNode Parent { get; set; } Property Value Type Description BTNode Tree Declaration public BehaviorTree Tree { get; } Property Value Type Description BehaviorTree Methods ChildCount() Declaration public abstract int ChildCount() Returns Type Description Int32 Implements IIterableNode<T>.ChildCount() Clone() Declaration public abstract BTNode Clone() Returns Type Description BTNode Description(StringBuilder) Declaration public virtual void Description(StringBuilder builder) Parameters Type Name Description StringBuilder builder GetChildAt(Int32) Declaration public abstract BTNode GetChildAt(int childIndex) Parameters Type Name Description Int32 childIndex Returns Type Description BTNode Implements IIterableNode<T>.GetChildAt(Int32) IsAuxiliary() Declaration public bool IsAuxiliary() Returns Type Description Boolean IsComposite() Declaration public bool IsComposite() Returns Type Description Boolean IsTask() Declaration public bool IsTask() Returns Type Description Boolean MaxChildCount() Declaration public abstract int MaxChildCount() Returns Type Description Int32 OnAbort(Int32) 此节点被打断时调用，目前仅 Composite 节点调用 Declaration public virtual void OnAbort(int childIndex) Parameters Type Name Description Int32 childIndex OnChildEnter(Int32) 此节点的孩子节点开始执行时调用 Declaration public virtual void OnChildEnter(int childIndex) Parameters Type Name Description Int32 childIndex OnChildExit(Int32, BTNode.EStatus) 此节点的孩子节点结束执行时调用 Declaration public virtual void OnChildExit(int childIndex, BTNode.EStatus status) Parameters Type Name Description Int32 childIndex BTNode.EStatus status OnEnter() 此节点开始执行时调用 Declaration public virtual void OnEnter() OnExecute(Single) 执行节点 Declaration public abstract BTNode.EStatus OnExecute(float deltaTime) Parameters Type Name Description Single deltaTime Returns Type Description BTNode.EStatus OnExit() 此节点结束执行时调用 Declaration public virtual void OnExit() OnInitialize() 行为树启动时调用，用于初始化节点数据 Declaration public virtual void OnInitialize() OnParentExit() 此节点的父节点， BTComposite / BTAuxiliary 结束执行时调用 Declaration public virtual void OnParentExit() OnReset() 行为树停止时调用，用于清理节点数据 Declaration public virtual void OnReset() OnValidate() 校验此节点的状态是否合法 Declaration protected virtual void OnValidate() SetChildAt(BTNode, Int32) Declaration public abstract void SetChildAt(BTNode node, int childIndex) Parameters Type Name Description BTNode node Int32 childIndex Implements IIterableNode<T>.SetChildAt(T, Int32)"
  },
  "api/Saro.BT.BTTask.html": {
    "href": "api/Saro.BT.BTTask.html",
    "title": "Class BTTask | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTTask Inheritance Object BTNode BTTask PrintLog RunBehaviour SetBBValue Wait Inherited Members BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnExecute(Single) BTNode.OnEnter() BTNode.OnExit() BTNode.OnParentExit() BTNode.OnValidate() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() BTNode.Description(StringBuilder) Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [BTNode(\"Task_24x\", null)] public abstract class BTTask : BTNode, IIterableNode<BTNode> Methods ChildCount() Declaration public override sealed int ChildCount() Returns Type Description Int32 Overrides BTNode.ChildCount() Clone() Declaration public override BTNode Clone() Returns Type Description BTNode Overrides BTNode.Clone() GetChildAt(Int32) Declaration public override sealed BTNode GetChildAt(int childIndex) Parameters Type Name Description Int32 childIndex Returns Type Description BTNode Overrides BTNode.GetChildAt(Int32) MaxChildCount() Declaration public override sealed int MaxChildCount() Returns Type Description Int32 Overrides BTNode.MaxChildCount() OnAbort(Int32) Declaration public override sealed void OnAbort(int childIndex) Parameters Type Name Description Int32 childIndex Overrides BTNode.OnAbort(Int32) OnChildEnter(Int32) Declaration public override sealed void OnChildEnter(int childIndex) Parameters Type Name Description Int32 childIndex Overrides BTNode.OnChildEnter(Int32) OnChildExit(Int32, BTNode.EStatus) Declaration public override sealed void OnChildExit(int childIndex, BTNode.EStatus status) Parameters Type Name Description Int32 childIndex BTNode.EStatus status Overrides BTNode.OnChildExit(Int32, BTNode.EStatus) SetChildAt(BTNode, Int32) Declaration public override sealed void SetChildAt(BTNode node, int childIndex) Parameters Type Name Description BTNode node Int32 childIndex Overrides BTNode.SetChildAt(BTNode, Int32)"
  },
  "api/Saro.BT.BlackboardEntry.html": {
    "href": "api/Saro.BT.BlackboardEntry.html",
    "title": "Class BlackboardEntry | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BlackboardEntry Inheritance Object BlackboardEntry Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class BlackboardEntry Fields keyName Declaration public string keyName Field Value Type Description String keyType Declaration public BlackboardKeyType keyType Field Value Type Description BlackboardKeyType"
  },
  "api/Saro.BT.Designer.BTCompositeNode.html": {
    "href": "api/Saro.BT.Designer.BTCompositeNode.html",
    "title": "Class BTCompositeNode | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTCompositeNode Inheritance Object BTGraphNode BTCompositeNode BTSimpleParallelNode Inherited Members BTGraphNode.GraphView BTGraphNode.ParentPort BTGraphNode.ParentNode BTGraphNode.AddTitle() BTGraphNode.AddDescription() BTGraphNode.SetBehavior(BTNode) BTGraphNode.RefreshBreakpoint() BTGraphNode.OnSetBehavior() BTGraphNode.AddParent() BTGraphNode.OnSelected() BTGraphNode.OnUnselected() BTGraphNode.Commit(Stack<BTGraphNode>) BTGraphNode.OnCommit(Stack<BTGraphNode>) BTGraphNode.Validate(Stack<BTGraphNode>) BTGraphNode.OnValidate(Stack<BTGraphNode>) BTGraphNode.ClearStyle() BTGraphNode.OnNodeInspectorGUI() BTGraphNode.SetChildAt(BTGraphNode, Int32) BTGraphNode.ToString() Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BTCompositeNode : BTGraphNode, IIterableNode<BTGraphNode> Constructors BTCompositeNode() Declaration public BTCompositeNode() Fields m_Cache Declaration protected List<BTGraphNode> m_Cache Field Value Type Description List < BTGraphNode > Properties ChildPort Declaration public Port ChildPort { get; protected set; } Property Value Type Description Port Methods AddChild() Declaration protected virtual void AddChild() BuildContextualMenu(ContextualMenuPopulateEvent) Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt Overrides BTGraphNode.BuildContextualMenu(ContextualMenuPopulateEvent) ChildCount() Declaration public override int ChildCount() Returns Type Description Int32 Overrides BTGraphNode.ChildCount() CreateChildPort() Declaration protected override Port CreateChildPort() Returns Type Description Port Overrides BTGraphNode.CreateChildPort() GetChildAt(Int32) Declaration public override BTGraphNode GetChildAt(int index) Parameters Type Name Description Int32 index Returns Type Description BTGraphNode Overrides BTGraphNode.GetChildAt(Int32) OnClearStyle() Declaration protected override void OnClearStyle() Overrides BTGraphNode.OnClearStyle() OnCommit(Stack<BTGraphNode>) Declaration protected override void OnCommit(Stack<BTGraphNode> stack) Parameters Type Name Description Stack < BTGraphNode > stack OnValidate(Stack<BTGraphNode>) Declaration protected override string OnValidate(Stack<BTGraphNode> stack) Parameters Type Name Description Stack < BTGraphNode > stack Returns Type Description String PostInit(BTGraphView) Declaration public override void PostInit(BTGraphView graphView) Parameters Type Name Description BTGraphView graphView Overrides BTGraphNode.PostInit(BTGraphView)"
  },
  "api/Saro.BT.Designer.BTGraphNodeFactory.html": {
    "href": "api/Saro.BT.Designer.BTGraphNodeFactory.html",
    "title": "Class BTGraphNodeFactory | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTGraphNodeFactory Inheritance Object BTGraphNodeFactory Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class BTGraphNodeFactory Methods CreateGraphNode(Type, BTGraphView, BTNode) Declaration public static BTGraphNode CreateGraphNode(Type type, BTGraphView graphView, BTNode nodeBehavior = null) Parameters Type Name Description Type type BTGraphView graphView BTNode nodeBehavior Returns Type Description BTGraphNode"
  },
  "api/Saro.BT.PrintLog.html": {
    "href": "api/Saro.BT.PrintLog.html",
    "title": "Class PrintLog | Moon Behavior Tree | 0.0.1",
    "keywords": "Class PrintLog Inheritance Object BTNode BTTask PrintLog Inherited Members BTTask.Clone() BTTask.OnAbort(Int32) BTTask.OnChildEnter(Int32) BTTask.OnChildExit(Int32, BTNode.EStatus) BTTask.ChildCount() BTTask.GetChildAt(Int32) BTTask.SetChildAt(BTNode, Int32) BTTask.MaxChildCount() BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnEnter() BTNode.OnExit() BTNode.OnParentExit() BTNode.OnValidate() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [BTNode(\"Task_24x\", \"“打印日志”\")] public class PrintLog : BTTask, IIterableNode<BTNode> Fields logType Declaration public PrintLog.ELogType logType Field Value Type Description PrintLog.ELogType message Declaration public string message Field Value Type Description String Methods Description(StringBuilder) Declaration public override void Description(StringBuilder builder) Parameters Type Name Description StringBuilder builder Overrides BTNode.Description(StringBuilder) OnExecute(Single) Declaration public override BTNode.EStatus OnExecute(float deltaTime) Parameters Type Name Description Single deltaTime Returns Type Description BTNode.EStatus Overrides BTNode.OnExecute(Single)"
  },
  "api/Saro.BT.EAbortType.html": {
    "href": "api/Saro.BT.EAbortType.html",
    "title": "Enum EAbortType | Moon Behavior Tree | 0.0.1",
    "keywords": "Enum EAbortType Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EAbortType Fields Name Description Both LowerPriority None Self"
  },
  "api/Saro.BT.BTNodeAttribute.html": {
    "href": "api/Saro.BT.BTNodeAttribute.html",
    "title": "Class BTNodeAttribute | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTNodeAttribute Inheritance Object Attribute BTNodeAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Conditional(\"UNITY_EDITOR\")] [AttributeUsage(AttributeTargets.Class, Inherited = true)] public class BTNodeAttribute : Attribute, _Attribute Constructors BTNodeAttribute(String, String) Declaration public BTNodeAttribute(string texturePath, string nodeDesc = null) Parameters Type Name Description String texturePath String nodeDesc Fields iconPath Declaration public readonly string iconPath Field Value Type Description String nodeDesc Declaration public readonly string nodeDesc Field Value Type Description String"
  },
  "api/Saro.BT.BTService.html": {
    "href": "api/Saro.BT.BTService.html",
    "title": "Class BTService | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTService Inheritance Object BTNode BTAuxiliary BTService TestService Inherited Members BTAuxiliary.m_Child BTAuxiliary.RunChild() BTAuxiliary.OnAbort(Int32) BTAuxiliary.GetChildAt(Int32) BTAuxiliary.SetChildAt(BTNode, Int32) BTAuxiliary.ChildCount() BTAuxiliary.MaxChildCount() BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnValidate() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [BTNode(\"Service_24x\", \"“服务”节点\\n当子树在运行时，就会间隔调用 ServiceTick，用于代替 传统并行节点。\")] public abstract class BTService : BTAuxiliary, IIterableNode<BTNode> Fields restartTimerOnEnter Declaration public bool restartTimerOnEnter Field Value Type Description Boolean timer Declaration [BTRunTimeValue(null)] public Timer timer Field Value Type Description Timer Methods Clone() Declaration public override BTNode Clone() Returns Type Description BTNode Overrides BTNode.Clone() Description(StringBuilder) Declaration public override void Description(StringBuilder builder) Parameters Type Name Description StringBuilder builder Overrides BTNode.Description(StringBuilder) OnChildEnter(Int32) Declaration public override sealed void OnChildEnter(int childIndex) Parameters Type Name Description Int32 childIndex Overrides BTNode.OnChildEnter(Int32) OnChildExit(Int32, BTNode.EStatus) Declaration public override sealed void OnChildExit(int childIndex, BTNode.EStatus status) Parameters Type Name Description Int32 childIndex BTNode.EStatus status Overrides BTNode.OnChildExit(Int32, BTNode.EStatus) OnEnter() Declaration public override sealed void OnEnter() Overrides BTAuxiliary.OnEnter() OnExecute(Single) Declaration public override sealed BTNode.EStatus OnExecute(float deltaTime) Parameters Type Name Description Single deltaTime Returns Type Description BTNode.EStatus Overrides BTNode.OnExecute(Single) OnExit() Declaration public override sealed void OnExit() Overrides BTNode.OnExit() OnParentExit() Declaration public override sealed void OnParentExit() Overrides BTAuxiliary.OnParentExit() ServiceTick() Declaration protected abstract void ServiceTick()"
  },
  "api/Saro.BT.BTBlackboard.Enumerator.html": {
    "href": "api/Saro.BT.BTBlackboard.Enumerator.html",
    "title": "Struct BTBlackboard.Enumerator | Moon Behavior Tree | 0.0.1",
    "keywords": "Struct BTBlackboard.Enumerator Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct Enumerator : IEnumerator<(BlackboardEntry entry, Variable variable)>, IDisposable, IEnumerator Constructors Enumerator(BTBlackboard) Declaration public Enumerator(BTBlackboard blackboard) Parameters Type Name Description BTBlackboard blackboard Properties Current Declaration public (BlackboardEntry entry, Variable variable)Current { get; } Property Value Type Description ValueTuple < BlackboardEntry , Variable > Implements IEnumerator<T>.Current Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() MoveNext() Declaration public bool MoveNext() Returns Type Description Boolean Implements IEnumerator.MoveNext() Reset() Declaration public void Reset() Implements IEnumerator.Reset() Explicit Interface Implementations IEnumerator.Current Declaration object IEnumerator.Current { get; } Returns Type Description Object Implements IEnumerator.Current"
  },
  "api/Saro.BT.BTRunTimeValueAttribute.html": {
    "href": "api/Saro.BT.BTRunTimeValueAttribute.html",
    "title": "Class BTRunTimeValueAttribute | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTRunTimeValueAttribute Inheritance Object Attribute BTRunTimeValueAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Conditional(\"UNITY_EDITOR\")] [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)] public class BTRunTimeValueAttribute : Attribute, _Attribute Constructors BTRunTimeValueAttribute(String) Declaration public BTRunTimeValueAttribute(string label = null) Parameters Type Name Description String label Fields label Declaration public readonly string label Field Value Type Description String"
  },
  "api/Saro.BT.BTBehaviorIterator.html": {
    "href": "api/Saro.BT.BTBehaviorIterator.html",
    "title": "Class BTBehaviorIterator | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTBehaviorIterator Inheritance Object BTBehaviorIterator Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class BTBehaviorIterator Constructors BTBehaviorIterator(BehaviorTree) Declaration public BTBehaviorIterator(BehaviorTree tree) Parameters Type Name Description BehaviorTree tree Properties CurrentIndex Declaration public int CurrentIndex { get; } Property Value Type Description Int32 IsRunning Declaration public bool IsRunning { get; } Property Value Type Description Boolean LastChildExitStatus Declaration public BTNode.EStatus? LastChildExitStatus { get; } Property Value Type Description Nullable < BTNode.EStatus > LastExecutedStatus Declaration public BTNode.EStatus LastExecutedStatus { get; } Property Value Type Description BTNode.EStatus Methods AbortRunningChildBranch(BTNode, Int32) Declaration public void AbortRunningChildBranch(BTNode parent, int abortBranchIndex) Parameters Type Name Description BTNode parent Int32 abortBranchIndex Tick(Single) Declaration public void Tick(float deltaTime) Parameters Type Name Description Single deltaTime Traverse(BTNode) Declaration public void Traverse(BTNode child) Parameters Type Name Description BTNode child Events OnCompleted Declaration public event Action OnCompleted Event Type Type Description Action"
  },
  "api/Saro.BT.Designer.CreateBTNodeProvider.html": {
    "href": "api/Saro.BT.Designer.CreateBTNodeProvider.html",
    "title": "Class CreateBTNodeProvider | Moon Behavior Tree | 0.0.1",
    "keywords": "Class CreateBTNodeProvider Inheritance Object CreateBTNodeProvider Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CreateBTNodeProvider : ScriptableObject, ISearchWindowProvider Constructors CreateBTNodeProvider(BTGraphView, EditorWindow) Declaration public CreateBTNodeProvider(BTGraphView graphView, EditorWindow graphEditor) Parameters Type Name Description BTGraphView graphView EditorWindow graphEditor Properties ConnectedPort Declaration public Port ConnectedPort { get; } Property Value Type Description Port"
  },
  "api/Saro.BT.JsonDataProvider-1.html": {
    "href": "api/Saro.BT.JsonDataProvider-1.html",
    "title": "Class JsonDataProvider<T> | Moon Behavior Tree | 0.0.1",
    "keywords": "Class JsonDataProvider<T> Inheritance Object JsonDataProvider<T> Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class JsonDataProvider<T> Type Parameters Name Description T Methods Load() Declaration public List<T> Load() Returns Type Description List <T> LoadAsync() Declaration public UniTask<List<T>> LoadAsync() Returns Type Description UniTask < List <T>> Save() Declaration public void Save()"
  },
  "api/Saro.BT.Designer.BTCopyPasteData.html": {
    "href": "api/Saro.BT.Designer.BTCopyPasteData.html",
    "title": "Class BTCopyPasteData | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTCopyPasteData Inheritance Object BTCopyPasteData Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class BTCopyPasteData Fields edges Declaration public List<(int indexA, int indexB)> edges Field Value Type Description List < ValueTuple < Int32 , Int32 >> nodes Declaration public List<BTNode> nodes Field Value Type Description List < BTNode >"
  },
  "api/Saro.BT.BBKey_Int.html": {
    "href": "api/Saro.BT.BBKey_Int.html",
    "title": "Class BBKey_Int | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BBKey_Int Inheritance Object BlackboardKeyType BlackboardKeyType < Int32 > BBKey_Int Inherited Members BlackboardKeyType<Int32>.CreateVariable() BlackboardKeyType<Int32>.GetValueType() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BBKey_Int : BlackboardKeyType<int> Methods TestOperation(Int32, Byte, Int32) Declaration public override bool TestOperation(int valueA, byte op, int valueB) Parameters Type Name Description Int32 valueA Byte op Int32 valueB Returns Type Description Boolean Overrides Saro.BT.BlackboardKeyType<System.Int32>.TestOperation(System.Int32, System.Byte, System.Int32)"
  },
  "api/Saro.BT.Designer.ChangeBTNodeProvider.html": {
    "href": "api/Saro.BT.Designer.ChangeBTNodeProvider.html",
    "title": "Class ChangeBTNodeProvider | Moon Behavior Tree | 0.0.1",
    "keywords": "Class ChangeBTNodeProvider Inheritance Object ChangeBTNodeProvider ChangeBTCompositeProvider ChangeBTDecoratorProvider ChangeBTServiceProvider ChangeBTTaskProvider Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class ChangeBTNodeProvider : ScriptableObject, ISearchWindowProvider Constructors ChangeBTNodeProvider(EditorWindow) Declaration public ChangeBTNodeProvider(EditorWindow graphEditor) Parameters Type Name Description EditorWindow graphEditor Methods Show(BTGraphNode, ContextualMenuPopulateEvent) Declaration public void Show(BTGraphNode node, ContextualMenuPopulateEvent evt) Parameters Type Name Description BTGraphNode node ContextualMenuPopulateEvent evt ValidNodeType(Type) Declaration protected abstract bool ValidNodeType(Type type) Parameters Type Name Description Type type Returns Type Description Boolean"
  },
  "api/Saro.BT.BTComposite.html": {
    "href": "api/Saro.BT.BTComposite.html",
    "title": "Class BTComposite | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTComposite Inheritance Object BTNode BTComposite Selector Sequence SimpleParallel Inherited Members BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnExecute(Single) BTNode.OnExit() BTNode.OnChildEnter(Int32) BTNode.OnParentExit() BTNode.OnValidate() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() BTNode.Description(StringBuilder) Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public abstract class BTComposite : BTNode, IIterableNode<BTNode> Fields m_Children Declaration protected int[] m_Children Field Value Type Description Int32 [] m_LastChildExitStatus Declaration protected BTNode.EStatus m_LastChildExitStatus Field Value Type Description BTNode.EStatus Properties CurrentChildIndex Declaration public int CurrentChildIndex { get; } Property Value Type Description Int32 Methods ChildCount() Declaration public override sealed int ChildCount() Returns Type Description Int32 Overrides BTNode.ChildCount() Clone() Declaration public override BTNode Clone() Returns Type Description BTNode Overrides BTNode.Clone() CurrentChild() Declaration public virtual BTNode CurrentChild() Returns Type Description BTNode GetChildAt(Int32) Declaration public override sealed BTNode GetChildAt(int childIndex) Parameters Type Name Description Int32 childIndex Returns Type Description BTNode Overrides BTNode.GetChildAt(Int32) MaxChildCount() Declaration public override sealed int MaxChildCount() Returns Type Description Int32 Overrides BTNode.MaxChildCount() OnAbort(Int32) Declaration public override sealed void OnAbort(int childIndex) Parameters Type Name Description Int32 childIndex Overrides BTNode.OnAbort(Int32) OnChildExit(Int32, BTNode.EStatus) Declaration public override void OnChildExit(int childIndex, BTNode.EStatus status) Parameters Type Name Description Int32 childIndex BTNode.EStatus status Overrides BTNode.OnChildExit(Int32, BTNode.EStatus) OnEnter() Declaration public override void OnEnter() Overrides BTNode.OnEnter() SetChildAt(BTNode, Int32) Declaration public override sealed void SetChildAt(BTNode node, int childIndex) Parameters Type Name Description BTNode node Int32 childIndex Overrides BTNode.SetChildAt(BTNode, Int32) SetChildren(BTNode[]) Declaration public void SetChildren(BTNode[] nodes) Parameters Type Name Description BTNode [] nodes"
  },
  "api/Saro.BT.html": {
    "href": "api/Saro.BT.html",
    "title": "Namespace Saro.BT | Moon Behavior Tree | 0.0.1",
    "keywords": "Namespace Saro.BT Classes BBCondition BBKey_Int BBKey_Vector3 BBKeySelector BehaviorTree BlackboardData BlackboardEntry BlackboardKeyType BlackboardKeyType<T> BTAuxiliary BTBehaviorIterator BTBlackboard BTComposite BTDecorator BTNode BTNodeAttribute BTRunTimeValueAttribute BTService BTTask CompareBBEntries Cooldown ForceSuccess JsonDataProvider<T> KeyOperationAttribute Loop PrintLog RunBehaviour Selector Sequence SetBBValue SimpleParallel TestService TimeLimit TreeDebugView TreeTraversal UpdateList<T> Variable Variable_Bool Variable_EcsEntity Variable_Enum Variable_Float Variable_Int Variable_Object Variable_String Variable_Vector3 Variable<T> Wait Structs BTBlackboard.ChangedEvent BTBlackboard.Enumerator Interfaces IIterableNode<T> Enums BTNode.EStatus EAbortType EArithmeticKeyOperation EBasicKeyOperation EBlackboardCompare EBlackBoardEntryComparison ETextKeyOperation PrintLog.ELogType SimpleParallel.EFinishMode"
  },
  "api/Saro.BT.Designer.html": {
    "href": "api/Saro.BT.Designer.html",
    "title": "Namespace Saro.BT.Designer | Moon Behavior Tree | 0.0.1",
    "keywords": "Namespace Saro.BT.Designer Classes AbstractGraphView BBEntrySelectorDrawer BTAuxiliaryNode BTCompositeNode BTCopyPasteData BTDecoratorNode BTExecuteLogConsole BTGraphBlackboard BTGraphDropdownMenuAction BTGraphEditor BTGraphFormatter BTGraphView 节点 排版 BTGraphInspector BTGraphMiniMap BTGraphNode BTGraphNodeFactory BTGraphView BTRootNode BTServiceNode BTSimpleParallelNode BTTaskNode ChangeBTCompositeProvider ChangeBTDecoratorProvider ChangeBTNodeProvider ChangeBTServiceProvider ChangeBTTaskProvider CreateBTNodeProvider DecorateBTNodeProvider KeyOperationDrawer TreeComponentEditor"
  },
  "api/Saro.BT.Sequence.html": {
    "href": "api/Saro.BT.Sequence.html",
    "title": "Class Sequence | Moon Behavior Tree | 0.0.1",
    "keywords": "Class Sequence Inheritance Object BTNode BTComposite Sequence Inherited Members BTComposite.m_Children BTComposite.m_LastChildExitStatus BTComposite.CurrentChildIndex BTComposite.Clone() BTComposite.CurrentChild() BTComposite.OnEnter() BTComposite.SetChildren(BTNode[]) BTComposite.OnAbort(Int32) BTComposite.OnChildExit(Int32, BTNode.EStatus) BTComposite.MaxChildCount() BTComposite.ChildCount() BTComposite.GetChildAt(Int32) BTComposite.SetChildAt(BTNode, Int32) BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnExit() BTNode.OnChildEnter(Int32) BTNode.OnParentExit() BTNode.OnValidate() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() BTNode.Description(StringBuilder) Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [BTNode(\"Sequence_24x\", \"“序列”节点\\n从上往下执行子节点，如果一个子节点失败，则此节点失败。\\n所有子节点执行成功，则此节点成功\")] public class Sequence : BTComposite, IIterableNode<BTNode> Methods OnExecute(Single) Declaration public override BTNode.EStatus OnExecute(float deltaTime) Parameters Type Name Description Single deltaTime Returns Type Description BTNode.EStatus Overrides BTNode.OnExecute(Single)"
  },
  "api/Saro.BT.EBlackBoardEntryComparison.html": {
    "href": "api/Saro.BT.EBlackBoardEntryComparison.html",
    "title": "Enum EBlackBoardEntryComparison | Moon Behavior Tree | 0.0.1",
    "keywords": "Enum EBlackBoardEntryComparison Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EBlackBoardEntryComparison Fields Name Description Equal NotEqual"
  },
  "api/Saro.BT.Variable_Float.html": {
    "href": "api/Saro.BT.Variable_Float.html",
    "title": "Class Variable_Float | Moon Behavior Tree | 0.0.1",
    "keywords": "Class Variable_Float Inheritance Object Variable Variable < Single > Variable_Float Inherited Members Variable<Single>.value Variable<Single>.GetValue() Variable<Single>.SetValue(Single) Variable<Single>.Reset() Variable<Single>.Compare(Variable) Variable<Single>.SetRawValue(Object) Variable<Single>.GetRawValue() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Variable_Float : Variable<float>"
  },
  "api/Saro.BT.Designer.DecorateBTNodeProvider.html": {
    "href": "api/Saro.BT.Designer.DecorateBTNodeProvider.html",
    "title": "Class DecorateBTNodeProvider | Moon Behavior Tree | 0.0.1",
    "keywords": "Class DecorateBTNodeProvider Inheritance Object DecorateBTNodeProvider Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DecorateBTNodeProvider : ScriptableObject, ISearchWindowProvider Constructors DecorateBTNodeProvider(EditorWindow) Declaration public DecorateBTNodeProvider(EditorWindow graphEditor) Parameters Type Name Description EditorWindow graphEditor Methods Show(BTGraphNode, ContextualMenuPopulateEvent) Declaration public void Show(BTGraphNode node, ContextualMenuPopulateEvent evt) Parameters Type Name Description BTGraphNode node ContextualMenuPopulateEvent evt"
  },
  "api/Saro.BT.Designer.ChangeBTTaskProvider.html": {
    "href": "api/Saro.BT.Designer.ChangeBTTaskProvider.html",
    "title": "Class ChangeBTTaskProvider | Moon Behavior Tree | 0.0.1",
    "keywords": "Class ChangeBTTaskProvider Inheritance Object ChangeBTNodeProvider ChangeBTTaskProvider Inherited Members ChangeBTNodeProvider.Show(BTGraphNode, ContextualMenuPopulateEvent) Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class ChangeBTTaskProvider : ChangeBTNodeProvider, ISearchWindowProvider Constructors ChangeBTTaskProvider(EditorWindow) Declaration public ChangeBTTaskProvider(EditorWindow graphEditor) Parameters Type Name Description EditorWindow graphEditor Methods ValidNodeType(Type) Declaration protected override bool ValidNodeType(Type type) Parameters Type Name Description Type type Returns Type Description Boolean Overrides ChangeBTNodeProvider.ValidNodeType(Type)"
  },
  "api/Saro.BT.ETextKeyOperation.html": {
    "href": "api/Saro.BT.ETextKeyOperation.html",
    "title": "Enum ETextKeyOperation | Moon Behavior Tree | 0.0.1",
    "keywords": "Enum ETextKeyOperation Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum ETextKeyOperation : byte Fields Name Description Contain Equal NotContain NotEqual"
  },
  "api/Saro.BT.BTBlackboard.ChangedEvent.html": {
    "href": "api/Saro.BT.BTBlackboard.ChangedEvent.html",
    "title": "Struct BTBlackboard.ChangedEvent | Moon Behavior Tree | 0.0.1",
    "keywords": "Struct BTBlackboard.ChangedEvent Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct ChangedEvent : IEquatable<BTBlackboard.ChangedEvent> Fields callback Declaration public Action callback Field Value Type Description Action index Declaration public int index Field Value Type Description Int32 Methods Equals(BTBlackboard.ChangedEvent) Declaration public bool Equals(BTBlackboard.ChangedEvent other) Parameters Type Name Description BTBlackboard.ChangedEvent other Returns Type Description Boolean Implements IEquatable<T>.Equals(T)"
  },
  "api/Saro.BT.BTAuxiliary.html": {
    "href": "api/Saro.BT.BTAuxiliary.html",
    "title": "Class BTAuxiliary | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTAuxiliary Inheritance Object BTNode BTAuxiliary BTDecorator BTService Inherited Members BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnExecute(Single) BTNode.OnExit() BTNode.OnChildEnter(Int32) BTNode.OnChildExit(Int32, BTNode.EStatus) BTNode.OnValidate() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() BTNode.Clone() BTNode.Description(StringBuilder) Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class BTAuxiliary : BTNode, IIterableNode<BTNode> Fields m_Child Declaration protected int m_Child Field Value Type Description Int32 Methods ChildCount() Declaration public override sealed int ChildCount() Returns Type Description Int32 Overrides BTNode.ChildCount() GetChildAt(Int32) Declaration public override sealed BTNode GetChildAt(int _ = 0) Parameters Type Name Description Int32 _ Returns Type Description BTNode Overrides BTNode.GetChildAt(Int32) MaxChildCount() Declaration public override sealed int MaxChildCount() Returns Type Description Int32 Overrides BTNode.MaxChildCount() OnAbort(Int32) Declaration public override sealed void OnAbort(int childIndex) Parameters Type Name Description Int32 childIndex Overrides BTNode.OnAbort(Int32) OnEnter() Declaration public override void OnEnter() Overrides BTNode.OnEnter() OnParentExit() Declaration public override void OnParentExit() Overrides BTNode.OnParentExit() RunChild() Declaration protected void RunChild() SetChildAt(BTNode, Int32) Declaration public override sealed void SetChildAt(BTNode node, int _ = 0) Parameters Type Name Description BTNode node Int32 _ Overrides BTNode.SetChildAt(BTNode, Int32)"
  },
  "api/Saro.BT.BTNode.EStatus.html": {
    "href": "api/Saro.BT.BTNode.EStatus.html",
    "title": "Enum BTNode.EStatus | Moon Behavior Tree | 0.0.1",
    "keywords": "Enum BTNode.EStatus Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EStatus : byte Fields Name Description Failure Running Success"
  },
  "api/Saro.BT.BTDecorator.html": {
    "href": "api/Saro.BT.BTDecorator.html",
    "title": "Class BTDecorator | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTDecorator Inheritance Object BTNode BTAuxiliary BTDecorator BBCondition CompareBBEntries Cooldown ForceSuccess Loop TimeLimit Inherited Members BTAuxiliary.m_Child BTAuxiliary.RunChild() BTAuxiliary.OnAbort(Int32) BTAuxiliary.GetChildAt(Int32) BTAuxiliary.SetChildAt(BTNode, Int32) BTAuxiliary.ChildCount() BTAuxiliary.MaxChildCount() BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnChildEnter(Int32) BTNode.OnChildExit(Int32, BTNode.EStatus) BTNode.OnValidate() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [BTNode(\"Conditional_Decorator_24x\", null)] public abstract class BTDecorator : BTAuxiliary, IIterableNode<BTNode> Fields abortType Declaration public EAbortType abortType Field Value Type Description EAbortType IsActive Declaration protected bool IsActive Field Value Type Description Boolean IsObserving Declaration protected bool IsObserving Field Value Type Description Boolean Methods Clone() Declaration public override BTNode Clone() Returns Type Description BTNode Overrides BTNode.Clone() Description(StringBuilder) Declaration public override void Description(StringBuilder builder) Parameters Type Name Description StringBuilder builder Overrides BTNode.Description(StringBuilder) Evaluate() Declaration protected void Evaluate() EvaluateCondition() false: AbortCurrentBranch true: AbortLowerPriorityBranch Declaration protected virtual bool EvaluateCondition() Returns Type Description Boolean ObserverBegin() Declaration protected void ObserverBegin() ObserverEnd() Declaration protected void ObserverEnd() OnDecoratorEnter() Declaration protected abstract void OnDecoratorEnter() OnDecoratorExit() Declaration protected abstract void OnDecoratorExit() OnEnter() Declaration public override sealed void OnEnter() Overrides BTAuxiliary.OnEnter() OnExecute(Single) Declaration public override BTNode.EStatus OnExecute(float deltaTime) Parameters Type Name Description Single deltaTime Returns Type Description BTNode.EStatus Overrides BTNode.OnExecute(Single) OnExit() Declaration public override sealed void OnExit() Overrides BTNode.OnExit() OnObserverBegin() register event Declaration protected virtual void OnObserverBegin() OnObserverEnd() unregister event Declaration protected virtual void OnObserverEnd() OnParentExit() Declaration public override sealed void OnParentExit() Overrides BTAuxiliary.OnParentExit() UpdateAborts() Declaration protected void UpdateAborts()"
  },
  "api/Saro.BT.Designer.BTGraphFormatter.html": {
    "href": "api/Saro.BT.Designer.BTGraphFormatter.html",
    "title": "Class BTGraphFormatter | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTGraphFormatter BTGraphView 节点 排版 Inheritance Object BTGraphFormatter Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class BTGraphFormatter Methods PositionNodesNicely(BTGraphNode, Vector2) Declaration public static void PositionNodesNicely(BTGraphNode root, Vector2 anchor) Parameters Type Name Description BTGraphNode root Vector2 anchor SetSubtreePosition(BTGraphNode, IEnumerable<BTGraphNode>, Vector2, Vector2) Declaration public static void SetSubtreePosition(BTGraphNode root, IEnumerable<BTGraphNode> otherNodes, Vector2 dragPosition, Vector2 offset) Parameters Type Name Description BTGraphNode root IEnumerable < BTGraphNode > otherNodes Vector2 dragPosition Vector2 offset"
  },
  "api/Saro.BT.Wait.html": {
    "href": "api/Saro.BT.Wait.html",
    "title": "Class Wait | Moon Behavior Tree | 0.0.1",
    "keywords": "Class Wait Inheritance Object BTNode BTTask Wait Inherited Members BTTask.OnAbort(Int32) BTTask.OnChildEnter(Int32) BTTask.OnChildExit(Int32, BTNode.EStatus) BTTask.ChildCount() BTTask.GetChildAt(Int32) BTTask.SetChildAt(BTNode, Int32) BTTask.MaxChildCount() BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnExit() BTNode.OnParentExit() BTNode.OnValidate() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [BTNode(\"Wait_24x\", \"“等待”任务节点\\n执行时，等待指定时间，再返回成功，其余时候处于执行中\")] public sealed class Wait : BTTask, IIterableNode<BTNode> Fields timer Declaration [BTRunTimeValue(null)] public Timer timer Field Value Type Description Timer Methods Clone() Declaration public override BTNode Clone() Returns Type Description BTNode Overrides BTTask.Clone() Description(StringBuilder) Declaration public override void Description(StringBuilder builder) Parameters Type Name Description StringBuilder builder Overrides BTNode.Description(StringBuilder) OnEnter() Declaration public override void OnEnter() Overrides BTNode.OnEnter() OnExecute(Single) Declaration public override BTNode.EStatus OnExecute(float deltaTime) Parameters Type Name Description Single deltaTime Returns Type Description BTNode.EStatus Overrides BTNode.OnExecute(Single)"
  },
  "api/Saro.BT.RunBehaviour.html": {
    "href": "api/Saro.BT.RunBehaviour.html",
    "title": "Class RunBehaviour | Moon Behavior Tree | 0.0.1",
    "keywords": "Class RunBehaviour Inheritance Object BTNode BTTask RunBehaviour Inherited Members BTTask.OnAbort(Int32) BTTask.OnChildEnter(Int32) BTTask.OnChildExit(Int32, BTNode.EStatus) BTTask.ChildCount() BTTask.GetChildAt(Int32) BTTask.SetChildAt(BTNode, Int32) BTTask.MaxChildCount() BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnParentExit() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [BTNode(\"Run_Behaviour_24x\", \"“运行”\")] public sealed class RunBehaviour : BTTask, IIterableNode<BTNode> Fields subtreeAsset Declaration public string subtreeAsset Field Value Type Description String Methods Clone() Declaration public override BTNode Clone() Returns Type Description BTNode Overrides BTTask.Clone() Description(StringBuilder) Declaration public override void Description(StringBuilder builder) Parameters Type Name Description StringBuilder builder Overrides BTNode.Description(StringBuilder) OnEnter() Declaration public override void OnEnter() Overrides BTNode.OnEnter() OnExecute(Single) Declaration public override BTNode.EStatus OnExecute(float deltaTime) Parameters Type Name Description Single deltaTime Returns Type Description BTNode.EStatus Overrides BTNode.OnExecute(Single) OnExit() Declaration public override void OnExit() Overrides BTNode.OnExit() OnInitialize() Declaration public override void OnInitialize() Overrides BTNode.OnInitialize() OnReset() Declaration public override void OnReset() Overrides BTNode.OnReset() OnValidate() Declaration protected override void OnValidate() Overrides BTNode.OnValidate()"
  },
  "api/Saro.BT.EArithmeticKeyOperation.html": {
    "href": "api/Saro.BT.EArithmeticKeyOperation.html",
    "title": "Enum EArithmeticKeyOperation | Moon Behavior Tree | 0.0.1",
    "keywords": "Enum EArithmeticKeyOperation Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EArithmeticKeyOperation : byte Fields Name Description Equal Greater GreaterOrEqual Less LessOrEqual NotEqual"
  },
  "api/Saro.BT.Variable_Bool.html": {
    "href": "api/Saro.BT.Variable_Bool.html",
    "title": "Class Variable_Bool | Moon Behavior Tree | 0.0.1",
    "keywords": "Class Variable_Bool Inheritance Object Variable Variable < Boolean > Variable_Bool Inherited Members Variable<Boolean>.value Variable<Boolean>.GetValue() Variable<Boolean>.SetValue(Boolean) Variable<Boolean>.Reset() Variable<Boolean>.Compare(Variable) Variable<Boolean>.SetRawValue(Object) Variable<Boolean>.GetRawValue() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Variable_Bool : Variable<bool>"
  },
  "api/Saro.BT.SimpleParallel.EFinishMode.html": {
    "href": "api/Saro.BT.SimpleParallel.EFinishMode.html",
    "title": "Enum SimpleParallel.EFinishMode | Moon Behavior Tree | 0.0.1",
    "keywords": "Enum SimpleParallel.EFinishMode Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EFinishMode : byte Fields Name Description Delayed Immediate"
  },
  "api/Saro.BT.Designer.BTGraphEditor.html": {
    "href": "api/Saro.BT.Designer.BTGraphEditor.html",
    "title": "Class BTGraphEditor | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTGraphEditor Inheritance Object BTGraphEditor Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class BTGraphEditor : EditorWindow Properties CurretnTree Declaration public static BehaviorTree CurretnTree { get; set; } Property Value Type Description BehaviorTree Methods CreateGUI() Declaration public void CreateGUI() Init() Declaration public static BTGraphEditor Init() Returns Type Description BTGraphEditor SetBehaviorTree(BehaviorTree) Declaration public void SetBehaviorTree(BehaviorTree tree) Parameters Type Name Description BehaviorTree tree"
  },
  "api/Saro.BT.Designer.ChangeBTDecoratorProvider.html": {
    "href": "api/Saro.BT.Designer.ChangeBTDecoratorProvider.html",
    "title": "Class ChangeBTDecoratorProvider | Moon Behavior Tree | 0.0.1",
    "keywords": "Class ChangeBTDecoratorProvider Inheritance Object ChangeBTNodeProvider ChangeBTDecoratorProvider Inherited Members ChangeBTNodeProvider.Show(BTGraphNode, ContextualMenuPopulateEvent) Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class ChangeBTDecoratorProvider : ChangeBTNodeProvider, ISearchWindowProvider Constructors ChangeBTDecoratorProvider(EditorWindow) Declaration public ChangeBTDecoratorProvider(EditorWindow graphEditor) Parameters Type Name Description EditorWindow graphEditor Methods ValidNodeType(Type) Declaration protected override bool ValidNodeType(Type type) Parameters Type Name Description Type type Returns Type Description Boolean Overrides ChangeBTNodeProvider.ValidNodeType(Type)"
  },
  "api/Saro.BT.SetBBValue.html": {
    "href": "api/Saro.BT.SetBBValue.html",
    "title": "Class SetBBValue | Moon Behavior Tree | 0.0.1",
    "keywords": "Class SetBBValue Inheritance Object BTNode BTTask SetBBValue Inherited Members BTTask.Clone() BTTask.OnAbort(Int32) BTTask.OnChildEnter(Int32) BTTask.OnChildExit(Int32, BTNode.EStatus) BTTask.ChildCount() BTTask.GetChildAt(Int32) BTTask.SetChildAt(BTNode, Int32) BTTask.MaxChildCount() BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnExit() BTNode.OnParentExit() BTNode.OnValidate() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [BTNode(\"Blackboard_24x\", \"设置黑板值\")] public class SetBBValue : BTTask, IIterableNode<BTNode> Fields bbKey Declaration public BBKeySelector bbKey Field Value Type Description BBKeySelector value Declaration public Variable value Field Value Type Description Variable Methods Description(StringBuilder) Declaration public override void Description(StringBuilder builder) Parameters Type Name Description StringBuilder builder Overrides BTNode.Description(StringBuilder) OnEnter() Declaration public override sealed void OnEnter() Overrides BTNode.OnEnter() OnExecute(Single) Declaration public override sealed BTNode.EStatus OnExecute(float deltaTime) Parameters Type Name Description Single deltaTime Returns Type Description BTNode.EStatus Overrides BTNode.OnExecute(Single)"
  },
  "api/Saro.BT.EBasicKeyOperation.html": {
    "href": "api/Saro.BT.EBasicKeyOperation.html",
    "title": "Enum EBasicKeyOperation | Moon Behavior Tree | 0.0.1",
    "keywords": "Enum EBasicKeyOperation Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EBasicKeyOperation : byte Fields Name Description NotSet Set"
  },
  "index.html": {
    "href": "index.html",
    "title": "Home Page. | Moon Behavior Tree | 0.0.1",
    "keywords": "Home Page. This is the home page for this package."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| Moon Behavior Tree | 0.0.1",
    "keywords": "This is the documentation for the Scripting APIs of this package."
  },
  "license/index.html": {
    "href": "license/index.html",
    "title": "| Moon Behavior Tree | 0.0.1",
    "keywords": "window.location.replace('LICENSE.html')"
  },
  "api/Saro.BT.BBKey_Vector3.html": {
    "href": "api/Saro.BT.BBKey_Vector3.html",
    "title": "Class BBKey_Vector3 | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BBKey_Vector3 Inheritance Object BlackboardKeyType BlackboardKeyType < Vector3 > BBKey_Vector3 Inherited Members BlackboardKeyType<Vector3>.CreateVariable() BlackboardKeyType<Vector3>.GetValueType() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BBKey_Vector3 : BlackboardKeyType<Vector3> Methods TestOperation(Vector3, Byte, Vector3) Declaration public override bool TestOperation(Vector3 valueA, byte op, Vector3 _ = null) Parameters Type Name Description Vector3 valueA Byte op Vector3 _ Returns Type Description Boolean Overrides Saro.BT.BlackboardKeyType<Vector3>.TestOperation(Vector3, System.Byte, Vector3)"
  },
  "api/Saro.BT.Designer.BTRootNode.html": {
    "href": "api/Saro.BT.Designer.BTRootNode.html",
    "title": "Class BTRootNode | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTRootNode Inheritance Object BTGraphNode BTRootNode Inherited Members BTGraphNode.GraphView BTGraphNode.ParentPort BTGraphNode.ParentNode BTGraphNode.AddTitle() BTGraphNode.AddDescription() BTGraphNode.SetBehavior(BTNode) BTGraphNode.RefreshBreakpoint() BTGraphNode.CreateChildPort() BTGraphNode.OnSelected() BTGraphNode.OnUnselected() BTGraphNode.Commit(Stack<BTGraphNode>) BTGraphNode.OnCommit(Stack<BTGraphNode>) BTGraphNode.Validate(Stack<BTGraphNode>) BTGraphNode.OnValidate(Stack<BTGraphNode>) BTGraphNode.ClearStyle() BTGraphNode.SetChildAt(BTGraphNode, Int32) BTGraphNode.ToString() Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class BTRootNode : BTGraphNode, IIterableNode<BTGraphNode> Constructors BTRootNode() Declaration public BTRootNode() Fields ChildPort Declaration public readonly Port ChildPort Field Value Type Description Port Methods AddParent() Declaration protected override void AddParent() Overrides BTGraphNode.AddParent() BuildContextualMenu(ContextualMenuPopulateEvent) Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt Overrides BTGraphNode.BuildContextualMenu(ContextualMenuPopulateEvent) ChildCount() Declaration public override int ChildCount() Returns Type Description Int32 Overrides BTGraphNode.ChildCount() GetChildAt(Int32) Declaration public override BTGraphNode GetChildAt(int index) Parameters Type Name Description Int32 index Returns Type Description BTGraphNode Overrides BTGraphNode.GetChildAt(Int32) OnClearStyle() Declaration protected override void OnClearStyle() Overrides BTGraphNode.OnClearStyle() OnCommit(Stack<BTGraphNode>) Declaration protected override void OnCommit(Stack<BTGraphNode> stack) Parameters Type Name Description Stack < BTGraphNode > stack OnNodeInspectorGUI() Declaration public override void OnNodeInspectorGUI() Overrides BTGraphNode.OnNodeInspectorGUI() OnSetBehavior() Declaration protected override void OnSetBehavior() Overrides BTGraphNode.OnSetBehavior() OnValidate(Stack<BTGraphNode>) Declaration protected override string OnValidate(Stack<BTGraphNode> stack) Parameters Type Name Description Stack < BTGraphNode > stack Returns Type Description String PostInit(BTGraphView) Declaration public override void PostInit(BTGraphView graphView) Parameters Type Name Description BTGraphView graphView Overrides BTGraphNode.PostInit(BTGraphView) PreCommit(BehaviorTree) Declaration public void PreCommit(BehaviorTree tree) Parameters Type Name Description BehaviorTree tree"
  },
  "api/Saro.BT.Designer.TreeComponentEditor.html": {
    "href": "api/Saro.BT.Designer.TreeComponentEditor.html",
    "title": "Class TreeComponentEditor | Moon Behavior Tree | 0.0.1",
    "keywords": "Class TreeComponentEditor Inheritance Object TreeComponentEditor Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TreeComponentEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Saro.BT.BlackboardKeyType-1.html": {
    "href": "api/Saro.BT.BlackboardKeyType-1.html",
    "title": "Class BlackboardKeyType<T> | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BlackboardKeyType<T> Inheritance Object BlackboardKeyType BlackboardKeyType<T> BBKey_Int BBKey_Vector3 Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class BlackboardKeyType<T> : BlackboardKeyType Type Parameters Name Description T Methods CreateVariable() Declaration public override sealed Variable CreateVariable() Returns Type Description Variable Overrides BlackboardKeyType.CreateVariable() GetValueType() Declaration public override sealed Type GetValueType() Returns Type Description Type Overrides BlackboardKeyType.GetValueType() TestOperation(T, Byte, T) Declaration public abstract bool TestOperation(T valueA, byte op, T valueB) Parameters Type Name Description T valueA Byte op T valueB Returns Type Description Boolean"
  },
  "api/Saro.BT.Utility.FixedSizeStack-1.html": {
    "href": "api/Saro.BT.Utility.FixedSizeStack-1.html",
    "title": "Class FixedSizeStack<T> | Moon Behavior Tree | 0.0.1",
    "keywords": "Class FixedSizeStack<T> Inheritance Object FixedSizeStack<T> Namespace : Saro.BT.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class FixedSizeStack<T> : IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors FixedSizeStack(Int32) Declaration public FixedSizeStack(int capacity) Parameters Type Name Description Int32 capacity Properties Capacity Declaration public int Capacity { get; } Property Value Type Description Int32 Count Declaration public int Count { get; } Property Value Type Description Int32 Item[Int32] Declaration public T this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description T Methods Clear() Declaration public void Clear() FastClear() Declaration public void FastClear() GetEnumerator() Declaration public FixedSizeStack<T>.Enumerator GetEnumerator() Returns Type Description FixedSizeStack.Enumerator <> GetValueAt(Int32) Declaration public T GetValueAt(int index) Parameters Type Name Description Int32 index Returns Type Description T Peek() Declaration public T Peek() Returns Type Description T Pop() Declaration public T Pop() Returns Type Description T Push(T) Declaration public void Push(T value) Parameters Type Name Description T value Explicit Interface Implementations IEnumerable<T>.GetEnumerator() Declaration IEnumerator<T> IEnumerable<T>.GetEnumerator() Returns Type Description IEnumerator <T> Implements IEnumerable<T>.GetEnumerator() IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements IEnumerable.GetEnumerator()"
  },
  "api/Saro.BT.PrintLog.ELogType.html": {
    "href": "api/Saro.BT.PrintLog.ELogType.html",
    "title": "Enum PrintLog.ELogType | Moon Behavior Tree | 0.0.1",
    "keywords": "Enum PrintLog.ELogType Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum ELogType : byte Fields Name Description Error Info Warning"
  },
  "api/Saro.BT.BlackboardKeyType.html": {
    "href": "api/Saro.BT.BlackboardKeyType.html",
    "title": "Class BlackboardKeyType | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BlackboardKeyType Inheritance Object BlackboardKeyType BlackboardKeyType<T> Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class BlackboardKeyType Methods CreateVariable() Declaration public abstract Variable CreateVariable() Returns Type Description Variable GetValueType() Declaration public abstract Type GetValueType() Returns Type Description Type"
  },
  "api/Saro.BT.Utility.FixedSizeStack-1.Enumerator.html": {
    "href": "api/Saro.BT.Utility.FixedSizeStack-1.Enumerator.html",
    "title": "Struct FixedSizeStack<T>.Enumerator | Moon Behavior Tree | 0.0.1",
    "keywords": "Struct FixedSizeStack<T>.Enumerator Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.BT.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct Enumerator : IEnumerator<T>, IDisposable, IEnumerator Properties Current Declaration public T Current { get; } Property Value Type Description T Implements IEnumerator<T>.Current Methods MoveNext() Declaration public bool MoveNext() Returns Type Description Boolean Implements IEnumerator.MoveNext() Explicit Interface Implementations IEnumerator.Current Declaration object IEnumerator.Current { get; } Returns Type Description Object Implements IEnumerator.Current IEnumerator.Reset() Declaration void IEnumerator.Reset() Implements IEnumerator.Reset() IDisposable.Dispose() Declaration void IDisposable.Dispose() Implements IDisposable.Dispose()"
  },
  "api/Saro.BT.Cooldown.html": {
    "href": "api/Saro.BT.Cooldown.html",
    "title": "Class Cooldown | Moon Behavior Tree | 0.0.1",
    "keywords": "Class Cooldown Inheritance Object BTNode BTAuxiliary BTDecorator Cooldown Inherited Members BTDecorator.abortType BTDecorator.IsObserving BTDecorator.IsActive BTDecorator.OnEnter() BTDecorator.OnExit() BTDecorator.OnParentExit() BTDecorator.ObserverBegin() BTDecorator.ObserverEnd() BTDecorator.Evaluate() BTDecorator.UpdateAborts() BTAuxiliary.m_Child BTAuxiliary.RunChild() BTAuxiliary.OnAbort(Int32) BTAuxiliary.GetChildAt(Int32) BTAuxiliary.SetChildAt(BTNode, Int32) BTAuxiliary.ChildCount() BTAuxiliary.MaxChildCount() BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnChildEnter(Int32) BTNode.OnChildExit(Int32, BTNode.EStatus) BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [BTNode(\"Cooldown_24x\", \"“冷却”装饰节点。\\n自身条件基于Timer是否结束。退出此节点时，即子树执行完毕，才会开始计时！\")] public sealed class Cooldown : BTDecorator, IIterableNode<BTNode> Fields timer Declaration [BTRunTimeValue(null)] public Timer timer Field Value Type Description Timer Methods Clone() Declaration public override BTNode Clone() Returns Type Description BTNode Overrides BTDecorator.Clone() Description(StringBuilder) Declaration public override void Description(StringBuilder builder) Parameters Type Name Description StringBuilder builder Overrides BTDecorator.Description(StringBuilder) EvaluateCondition() Declaration protected override bool EvaluateCondition() Returns Type Description Boolean Overrides BTDecorator.EvaluateCondition() OnDecoratorEnter() Declaration protected override void OnDecoratorEnter() Overrides BTDecorator.OnDecoratorEnter() OnDecoratorExit() Declaration protected override void OnDecoratorExit() Overrides BTDecorator.OnDecoratorExit() OnExecute(Single) Declaration public override BTNode.EStatus OnExecute(float deltaTime) Parameters Type Name Description Single deltaTime Returns Type Description BTNode.EStatus Overrides BTDecorator.OnExecute(Single) OnObserverBegin() Declaration protected override void OnObserverBegin() Overrides BTDecorator.OnObserverBegin() OnObserverEnd() Declaration protected override void OnObserverEnd() Overrides BTDecorator.OnObserverEnd() OnValidate() Declaration protected override void OnValidate() Overrides BTNode.OnValidate()"
  },
  "api/Saro.BT.Loop.html": {
    "href": "api/Saro.BT.Loop.html",
    "title": "Class Loop | Moon Behavior Tree | 0.0.1",
    "keywords": "Class Loop Inheritance Object BTNode BTAuxiliary BTDecorator Loop Inherited Members BTDecorator.abortType BTDecorator.IsObserving BTDecorator.IsActive BTDecorator.Clone() BTDecorator.OnEnter() BTDecorator.OnExit() BTDecorator.OnParentExit() BTDecorator.ObserverBegin() BTDecorator.ObserverEnd() BTDecorator.OnObserverBegin() BTDecorator.OnObserverEnd() BTDecorator.EvaluateCondition() BTDecorator.Evaluate() BTDecorator.UpdateAborts() BTAuxiliary.m_Child BTAuxiliary.RunChild() BTAuxiliary.OnAbort(Int32) BTAuxiliary.GetChildAt(Int32) BTAuxiliary.SetChildAt(BTNode, Int32) BTAuxiliary.ChildCount() BTAuxiliary.MaxChildCount() BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnChildEnter(Int32) BTNode.OnChildExit(Int32, BTNode.EStatus) BTNode.OnValidate() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [BTNode(\"Loop_24x\", \"“循环”装饰节点\\n自身终止条件是 计数器是否耗尽。\\n-1代表无限循环\")] public sealed class Loop : BTDecorator, IIterableNode<BTNode> Fields loopCount Declaration public int loopCount Field Value Type Description Int32 Methods Description(StringBuilder) Declaration public override void Description(StringBuilder builder) Parameters Type Name Description StringBuilder builder Overrides BTDecorator.Description(StringBuilder) OnDecoratorEnter() Declaration protected override void OnDecoratorEnter() Overrides BTDecorator.OnDecoratorEnter() OnDecoratorExit() Declaration protected override void OnDecoratorExit() Overrides BTDecorator.OnDecoratorExit() OnExecute(Single) Declaration public override BTNode.EStatus OnExecute(float deltaTime) Parameters Type Name Description Single deltaTime Returns Type Description BTNode.EStatus Overrides BTDecorator.OnExecute(Single)"
  },
  "api/Saro.BT.Variable_Enum.html": {
    "href": "api/Saro.BT.Variable_Enum.html",
    "title": "Class Variable_Enum | Moon Behavior Tree | 0.0.1",
    "keywords": "Class Variable_Enum Inheritance Object Variable Variable < Int32 > Variable_Enum Inherited Members Variable<Int32>.value Variable<Int32>.GetValue() Variable<Int32>.SetValue(Int32) Variable<Int32>.Reset() Variable<Int32>.Compare(Variable) Variable<Int32>.SetRawValue(Object) Variable<Int32>.GetRawValue() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Variable_Enum : Variable<int>"
  },
  "api/Saro.BT.TimeLimit.html": {
    "href": "api/Saro.BT.TimeLimit.html",
    "title": "Class TimeLimit | Moon Behavior Tree | 0.0.1",
    "keywords": "Class TimeLimit Inheritance Object BTNode BTAuxiliary BTDecorator TimeLimit Inherited Members BTDecorator.abortType BTDecorator.IsObserving BTDecorator.IsActive BTDecorator.OnEnter() BTDecorator.OnExit() BTDecorator.OnParentExit() BTDecorator.ObserverBegin() BTDecorator.ObserverEnd() BTDecorator.OnObserverBegin() BTDecorator.OnObserverEnd() BTDecorator.OnExecute(Single) BTDecorator.Evaluate() BTDecorator.UpdateAborts() BTAuxiliary.m_Child BTAuxiliary.RunChild() BTAuxiliary.OnAbort(Int32) BTAuxiliary.GetChildAt(Int32) BTAuxiliary.SetChildAt(BTNode, Int32) BTAuxiliary.ChildCount() BTAuxiliary.MaxChildCount() BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnChildEnter(Int32) BTNode.OnChildExit(Int32, BTNode.EStatus) BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [BTNode(\"Time_Limit_24x\", \"“时间限制”装饰节点\\n定时器归零后，将失败\")] public class TimeLimit : BTDecorator, IIterableNode<BTNode> Fields timer Declaration [BTRunTimeValue(null)] public Timer timer Field Value Type Description Timer Methods Clone() Declaration public override BTNode Clone() Returns Type Description BTNode Overrides BTDecorator.Clone() Description(StringBuilder) Declaration public override void Description(StringBuilder builder) Parameters Type Name Description StringBuilder builder Overrides BTDecorator.Description(StringBuilder) EvaluateCondition() Declaration protected override bool EvaluateCondition() Returns Type Description Boolean Overrides BTDecorator.EvaluateCondition() OnDecoratorEnter() Declaration protected override void OnDecoratorEnter() Overrides BTDecorator.OnDecoratorEnter() OnDecoratorExit() Declaration protected override void OnDecoratorExit() Overrides BTDecorator.OnDecoratorExit() OnValidate() Declaration protected override void OnValidate() Overrides BTNode.OnValidate()"
  },
  "api/Saro.BT.Designer.AbstractGraphView.html": {
    "href": "api/Saro.BT.Designer.AbstractGraphView.html",
    "title": "Class AbstractGraphView | Moon Behavior Tree | 0.0.1",
    "keywords": "Class AbstractGraphView Inheritance Object AbstractGraphView BTGraphView Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class AbstractGraphView : GraphView Constructors AbstractGraphView() Declaration public AbstractGraphView() Methods ClearNodesAndEdges() Declaration protected void ClearNodesAndEdges()"
  },
  "api/Saro.BT.Selector.html": {
    "href": "api/Saro.BT.Selector.html",
    "title": "Class Selector | Moon Behavior Tree | 0.0.1",
    "keywords": "Class Selector Inheritance Object BTNode BTComposite Selector Inherited Members BTComposite.m_Children BTComposite.m_LastChildExitStatus BTComposite.CurrentChildIndex BTComposite.Clone() BTComposite.CurrentChild() BTComposite.OnEnter() BTComposite.SetChildren(BTNode[]) BTComposite.OnAbort(Int32) BTComposite.OnChildExit(Int32, BTNode.EStatus) BTComposite.MaxChildCount() BTComposite.ChildCount() BTComposite.GetChildAt(Int32) BTComposite.SetChildAt(BTNode, Int32) BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnExit() BTNode.OnChildEnter(Int32) BTNode.OnParentExit() BTNode.OnValidate() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() BTNode.Description(StringBuilder) Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] [BTNode(\"Selector_24x\", \"“选择器”节点\\n从上至下执行子节点，如果一个子节点执行成功，则此节点返回成功，后续子节点不再执行。\\n如果所有子节点都失败，则此节点也失败。\")] public class Selector : BTComposite, IIterableNode<BTNode> Methods OnExecute(Single) Declaration public override BTNode.EStatus OnExecute(float deltaTime) Parameters Type Name Description Single deltaTime Returns Type Description BTNode.EStatus Overrides BTNode.OnExecute(Single)"
  },
  "api/Saro.BT.EBlackboardCompare.html": {
    "href": "api/Saro.BT.EBlackboardCompare.html",
    "title": "Enum EBlackboardCompare | Moon Behavior Tree | 0.0.1",
    "keywords": "Enum EBlackboardCompare Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EBlackboardCompare : byte Fields Name Description Equal Greater Less NotEqual"
  },
  "api/Saro.BT.Variable_Vector3.html": {
    "href": "api/Saro.BT.Variable_Vector3.html",
    "title": "Class Variable_Vector3 | Moon Behavior Tree | 0.0.1",
    "keywords": "Class Variable_Vector3 Inheritance Object Variable Variable < Vector3 > Variable_Vector3 Inherited Members Variable<Vector3>.value Variable<Vector3>.GetValue() Variable<Vector3>.SetValue(Vector3) Variable<Vector3>.Reset() Variable<Vector3>.Compare(Variable) Variable<Vector3>.SetRawValue(Object) Variable<Vector3>.GetRawValue() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Variable_Vector3 : Variable<Vector3>"
  },
  "api/Saro.BT.Variable.html": {
    "href": "api/Saro.BT.Variable.html",
    "title": "Class Variable | Moon Behavior Tree | 0.0.1",
    "keywords": "Class Variable Inheritance Object Variable Variable<T> Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class Variable Constructors Variable() Declaration protected Variable() Methods Compare(Variable) Declaration public abstract bool Compare(Variable other) Parameters Type Name Description Variable other Returns Type Description Boolean GetRawValue() Declaration public abstract object GetRawValue() Returns Type Description Object Reset() Declaration public abstract void Reset() SetRawValue(Object) Declaration public abstract void SetRawValue(object val) Parameters Type Name Description Object val"
  },
  "api/Saro.BT.BlackboardData.html": {
    "href": "api/Saro.BT.BlackboardData.html",
    "title": "Class BlackboardData | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BlackboardData Inheritance Object BlackboardData Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class BlackboardData Fields entries Declaration public List<BlackboardEntry> entries Field Value Type Description List < BlackboardEntry > Methods Clone() 浅拷贝吧，这个数据应该是不可变的 Declaration public BlackboardData Clone() Returns Type Description BlackboardData GetKeyEntryByName(String) Declaration public BlackboardEntry GetKeyEntryByName(string keyName) Parameters Type Name Description String keyName Returns Type Description BlackboardEntry GetKeyIndexByName(String) Declaration public int GetKeyIndexByName(string keyName) Parameters Type Name Description String keyName Returns Type Description Int32"
  },
  "api/Saro.BT.Designer.BTGraphBlackboard.html": {
    "href": "api/Saro.BT.Designer.BTGraphBlackboard.html",
    "title": "Class BTGraphBlackboard | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTGraphBlackboard Inheritance Object BTGraphBlackboard Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BTGraphBlackboard : Editor Methods Initialize(BTGraphView) Declaration public void Initialize(BTGraphView graphView) Parameters Type Name Description BTGraphView graphView OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Saro.BT.UpdateList-1.html": {
    "href": "api/Saro.BT.UpdateList-1.html",
    "title": "Class UpdateList<T> | Moon Behavior Tree | 0.0.1",
    "keywords": "Class UpdateList<T> Inheritance Object UpdateList<T> Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class UpdateList<T> Type Parameters Name Description T Constructors UpdateList() Declaration public UpdateList() Properties Data Declaration public IReadOnlyList<T> Data { get; } Property Value Type Description IReadOnlyList <T> Methods Add(T) Declaration public void Add(T item) Parameters Type Name Description T item AddAndRemoveQueued() Declaration public void AddAndRemoveQueued() Clear() Declaration public void Clear() Remove(T) Declaration public void Remove(T item) Parameters Type Name Description T item"
  },
  "api/Saro.BT.CompareBBEntries.html": {
    "href": "api/Saro.BT.CompareBBEntries.html",
    "title": "Class CompareBBEntries | Moon Behavior Tree | 0.0.1",
    "keywords": "Class CompareBBEntries Inheritance Object BTNode BTAuxiliary BTDecorator CompareBBEntries Inherited Members BTDecorator.abortType BTDecorator.IsObserving BTDecorator.IsActive BTDecorator.Clone() BTDecorator.OnEnter() BTDecorator.OnExit() BTDecorator.OnParentExit() BTDecorator.ObserverBegin() BTDecorator.ObserverEnd() BTDecorator.OnExecute(Single) BTDecorator.Evaluate() BTDecorator.UpdateAborts() BTAuxiliary.m_Child BTAuxiliary.RunChild() BTAuxiliary.OnAbort(Int32) BTAuxiliary.GetChildAt(Int32) BTAuxiliary.SetChildAt(BTNode, Int32) BTAuxiliary.ChildCount() BTAuxiliary.MaxChildCount() BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnChildEnter(Int32) BTNode.OnChildExit(Int32, BTNode.EStatus) BTNode.OnValidate() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [BTNode(\"Compare_Blackboard_Entries_24x\", \"‘比较黑板键值’节点\\n节点将比较两个黑板键的值，并根据结果（等于或不等）阻止或允许节点的执行。 \")] public class CompareBBEntries : BTDecorator, IIterableNode<BTNode> Constructors CompareBBEntries() Declaration public CompareBBEntries() Fields bbKeyA Declaration public BBKeySelector bbKeyA Field Value Type Description BBKeySelector bbKeyB Declaration public BBKeySelector bbKeyB Field Value Type Description BBKeySelector op Declaration public EBlackBoardEntryComparison op Field Value Type Description EBlackBoardEntryComparison Methods Description(StringBuilder) Declaration public override void Description(StringBuilder builder) Parameters Type Name Description StringBuilder builder Overrides BTDecorator.Description(StringBuilder) EvaluateCondition() Declaration protected override bool EvaluateCondition() Returns Type Description Boolean Overrides BTDecorator.EvaluateCondition() OnDecoratorEnter() Declaration protected override void OnDecoratorEnter() Overrides BTDecorator.OnDecoratorEnter() OnDecoratorExit() Declaration protected override void OnDecoratorExit() Overrides BTDecorator.OnDecoratorExit() OnObserverBegin() Declaration protected override void OnObserverBegin() Overrides BTDecorator.OnObserverBegin() OnObserverEnd() Declaration protected override void OnObserverEnd() Overrides BTDecorator.OnObserverEnd()"
  },
  "api/Saro.BT.Designer.BTAuxiliaryNode.html": {
    "href": "api/Saro.BT.Designer.BTAuxiliaryNode.html",
    "title": "Class BTAuxiliaryNode | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTAuxiliaryNode Inheritance Object BTGraphNode BTAuxiliaryNode BTDecoratorNode BTServiceNode Inherited Members BTGraphNode.GraphView BTGraphNode.ParentPort BTGraphNode.ParentNode BTGraphNode.BuildContextualMenu(ContextualMenuPopulateEvent) BTGraphNode.AddTitle() BTGraphNode.AddDescription() BTGraphNode.SetBehavior(BTNode) BTGraphNode.RefreshBreakpoint() BTGraphNode.OnSetBehavior() BTGraphNode.AddParent() BTGraphNode.CreateChildPort() BTGraphNode.OnSelected() BTGraphNode.OnUnselected() BTGraphNode.Commit(Stack<BTGraphNode>) BTGraphNode.OnCommit(Stack<BTGraphNode>) BTGraphNode.Validate(Stack<BTGraphNode>) BTGraphNode.OnValidate(Stack<BTGraphNode>) BTGraphNode.ClearStyle() BTGraphNode.OnNodeInspectorGUI() BTGraphNode.SetChildAt(BTGraphNode, Int32) BTGraphNode.ToString() Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class BTAuxiliaryNode : BTGraphNode, IIterableNode<BTGraphNode> Constructors BTAuxiliaryNode() Declaration public BTAuxiliaryNode() Properties ChildPort Declaration public Port ChildPort { get; protected set; } Property Value Type Description Port Methods ChildCount() Declaration public override int ChildCount() Returns Type Description Int32 Overrides BTGraphNode.ChildCount() GetChildAt(Int32) Declaration public override BTGraphNode GetChildAt(int index) Parameters Type Name Description Int32 index Returns Type Description BTGraphNode Overrides BTGraphNode.GetChildAt(Int32) OnClearStyle() Declaration protected override void OnClearStyle() Overrides BTGraphNode.OnClearStyle() OnCommit(Stack<BTGraphNode>) Declaration protected override void OnCommit(Stack<BTGraphNode> stack) Parameters Type Name Description Stack < BTGraphNode > stack OnValidate(Stack<BTGraphNode>) Declaration protected override string OnValidate(Stack<BTGraphNode> stack) Parameters Type Name Description Stack < BTGraphNode > stack Returns Type Description String PostInit(BTGraphView) Declaration public override void PostInit(BTGraphView graphView) Parameters Type Name Description BTGraphView graphView Overrides BTGraphNode.PostInit(BTGraphView)"
  },
  "api/Saro.BT.Designer.BTSimpleParallelNode.html": {
    "href": "api/Saro.BT.Designer.BTSimpleParallelNode.html",
    "title": "Class BTSimpleParallelNode | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTSimpleParallelNode Inheritance Object BTGraphNode BTCompositeNode BTSimpleParallelNode Inherited Members BTCompositeNode.ChildPort BTCompositeNode.m_Cache BTCompositeNode.BuildContextualMenu(ContextualMenuPopulateEvent) BTGraphNode.GraphView BTGraphNode.ParentPort BTGraphNode.ParentNode BTGraphNode.AddTitle() BTGraphNode.AddDescription() BTGraphNode.SetBehavior(BTNode) BTGraphNode.RefreshBreakpoint() BTGraphNode.OnSetBehavior() BTGraphNode.AddParent() BTGraphNode.OnSelected() BTGraphNode.OnUnselected() BTGraphNode.Commit(Stack<BTGraphNode>) BTGraphNode.OnCommit(Stack<BTGraphNode>) BTGraphNode.Validate(Stack<BTGraphNode>) BTGraphNode.OnValidate(Stack<BTGraphNode>) BTGraphNode.ClearStyle() BTGraphNode.OnNodeInspectorGUI() BTGraphNode.SetChildAt(BTGraphNode, Int32) BTGraphNode.ToString() Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BTSimpleParallelNode : BTCompositeNode, IIterableNode<BTGraphNode> Properties BranchPort Declaration public Port BranchPort { get; } Property Value Type Description Port Methods AddChild() Declaration protected override void AddChild() Overrides BTCompositeNode.AddChild() ChildCount() Declaration public override int ChildCount() Returns Type Description Int32 Overrides BTCompositeNode.ChildCount() CreateChildPort() Declaration protected override Port CreateChildPort() Returns Type Description Port Overrides BTCompositeNode.CreateChildPort() GetChildAt(Int32) Declaration public override BTGraphNode GetChildAt(int index) Parameters Type Name Description Int32 index Returns Type Description BTGraphNode Overrides BTCompositeNode.GetChildAt(Int32) OnClearStyle() Declaration protected override void OnClearStyle() Overrides BTCompositeNode.OnClearStyle() OnCommit(Stack<BTGraphNode>) Declaration protected override void OnCommit(Stack<BTGraphNode> stack) Parameters Type Name Description Stack < BTGraphNode > stack Overrides BTCompositeNode.OnCommit(Stack<BTGraphNode>) OnValidate(Stack<BTGraphNode>) Declaration protected override string OnValidate(Stack<BTGraphNode> stack) Parameters Type Name Description Stack < BTGraphNode > stack Returns Type Description String Overrides BTCompositeNode.OnValidate(Stack<BTGraphNode>) PostInit(BTGraphView) Declaration public override void PostInit(BTGraphView graphView) Parameters Type Name Description BTGraphView graphView Overrides BTCompositeNode.PostInit(BTGraphView)"
  },
  "api/Saro.BT.Designer.BTExecuteLogConsole.html": {
    "href": "api/Saro.BT.Designer.BTExecuteLogConsole.html",
    "title": "Class BTExecuteLogConsole | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTExecuteLogConsole Inheritance Object BTExecuteLogConsole Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BTExecuteLogConsole : EditorWindow Methods OnGUI() Declaration public void OnGUI()"
  },
  "api/Saro.BT.KeyOperationAttribute.html": {
    "href": "api/Saro.BT.KeyOperationAttribute.html",
    "title": "Class KeyOperationAttribute | Moon Behavior Tree | 0.0.1",
    "keywords": "Class KeyOperationAttribute Inheritance Object KeyOperationAttribute Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Conditional(\"UNITY_EDITOR\")] [AttributeUsage(AttributeTargets.Struct | AttributeTargets.Field)] public class KeyOperationAttribute : CustomDrawerAttribute"
  },
  "api/Saro.BT.Designer.KeyOperationDrawer.html": {
    "href": "api/Saro.BT.Designer.KeyOperationDrawer.html",
    "title": "Class KeyOperationDrawer | Moon Behavior Tree | 0.0.1",
    "keywords": "Class KeyOperationDrawer Inheritance Object KeyOperationDrawer Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class KeyOperationDrawer : AttributeDrawer<KeyOperationAttribute> Methods GetOperationEnum(BBKeySelector, Byte) Declaration public Enum GetOperationEnum(BBKeySelector bbKey, byte keyOperation) Parameters Type Name Description BBKeySelector bbKey Byte keyOperation Returns Type Description Enum OnGUI(String, ref Object, Object) Declaration public override void OnGUI(string label, ref object instance, object context) Parameters Type Name Description String label Object instance Object context"
  },
  "api/Saro.BT.Utility.html": {
    "href": "api/Saro.BT.Utility.html",
    "title": "Namespace Saro.BT.Utility | Moon Behavior Tree | 0.0.1",
    "keywords": "Namespace Saro.BT.Utility Classes FixedSizeStack<T> Timer Structs FixedSizeStack<T>.Enumerator"
  },
  "api/Saro.BT.BBKeySelector.html": {
    "href": "api/Saro.BT.BBKeySelector.html",
    "title": "Class BBKeySelector | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BBKeySelector Inheritance Object BBKeySelector Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class BBKeySelector : IEquatable<BBKeySelector> Constructors BBKeySelector() Declaration public BBKeySelector() BBKeySelector(String) Declaration public BBKeySelector(string keyName) Parameters Type Name Description String keyName Fields keyName Declaration public string keyName Field Value Type Description String Methods Equals(BBKeySelector) Declaration public bool Equals(BBKeySelector other) Parameters Type Name Description BBKeySelector other Returns Type Description Boolean Implements IEquatable<T>.Equals(T) Operators Implicit(BBKeySelector to String) Declaration public static implicit operator string (BBKeySelector keySelector) Parameters Type Name Description BBKeySelector keySelector Returns Type Description String"
  },
  "api/Saro.BT.ForceSuccess.html": {
    "href": "api/Saro.BT.ForceSuccess.html",
    "title": "Class ForceSuccess | Moon Behavior Tree | 0.0.1",
    "keywords": "Class ForceSuccess Inheritance Object BTNode BTAuxiliary BTDecorator ForceSuccess Inherited Members BTDecorator.abortType BTDecorator.IsObserving BTDecorator.IsActive BTDecorator.Clone() BTDecorator.OnEnter() BTDecorator.OnExit() BTDecorator.OnParentExit() BTDecorator.ObserverBegin() BTDecorator.ObserverEnd() BTDecorator.OnObserverBegin() BTDecorator.OnObserverEnd() BTDecorator.EvaluateCondition() BTDecorator.Evaluate() BTDecorator.UpdateAborts() BTAuxiliary.m_Child BTAuxiliary.RunChild() BTAuxiliary.OnAbort(Int32) BTAuxiliary.GetChildAt(Int32) BTAuxiliary.SetChildAt(BTNode, Int32) BTAuxiliary.ChildCount() BTAuxiliary.MaxChildCount() BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnInitialize() BTNode.OnReset() BTNode.OnChildEnter(Int32) BTNode.OnChildExit(Int32, BTNode.EStatus) BTNode.OnValidate() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [BTNode(\"Force_Success_24x\", null)] public sealed class ForceSuccess : BTDecorator, IIterableNode<BTNode> Methods Description(StringBuilder) Declaration public override void Description(StringBuilder builder) Parameters Type Name Description StringBuilder builder Overrides BTDecorator.Description(StringBuilder) OnDecoratorEnter() Declaration protected override void OnDecoratorEnter() Overrides BTDecorator.OnDecoratorEnter() OnDecoratorExit() Declaration protected override void OnDecoratorExit() Overrides BTDecorator.OnDecoratorExit() OnExecute(Single) Declaration public override BTNode.EStatus OnExecute(float deltaTime) Parameters Type Name Description Single deltaTime Returns Type Description BTNode.EStatus Overrides BTDecorator.OnExecute(Single)"
  },
  "api/Saro.BT.Designer.BTDecoratorNode.html": {
    "href": "api/Saro.BT.Designer.BTDecoratorNode.html",
    "title": "Class BTDecoratorNode | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTDecoratorNode Inheritance Object BTGraphNode BTAuxiliaryNode BTDecoratorNode Inherited Members BTAuxiliaryNode.ChildPort BTAuxiliaryNode.OnCommit(Stack<BTGraphNode>) BTAuxiliaryNode.PostInit(BTGraphView) BTAuxiliaryNode.OnClearStyle() BTAuxiliaryNode.GetChildAt(Int32) BTAuxiliaryNode.ChildCount() BTGraphNode.GraphView BTGraphNode.ParentPort BTGraphNode.ParentNode BTGraphNode.AddTitle() BTGraphNode.AddDescription() BTGraphNode.SetBehavior(BTNode) BTGraphNode.RefreshBreakpoint() BTGraphNode.OnSetBehavior() BTGraphNode.AddParent() BTGraphNode.CreateChildPort() BTGraphNode.OnSelected() BTGraphNode.OnUnselected() BTGraphNode.Commit(Stack<BTGraphNode>) BTGraphNode.OnCommit(Stack<BTGraphNode>) BTGraphNode.Validate(Stack<BTGraphNode>) BTGraphNode.OnValidate(Stack<BTGraphNode>) BTGraphNode.ClearStyle() BTGraphNode.OnNodeInspectorGUI() BTGraphNode.SetChildAt(BTGraphNode, Int32) BTGraphNode.ToString() Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BTDecoratorNode : BTAuxiliaryNode, IIterableNode<BTGraphNode> Methods BuildContextualMenu(ContextualMenuPopulateEvent) Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt Overrides BTGraphNode.BuildContextualMenu(ContextualMenuPopulateEvent) OnValidate(Stack<BTGraphNode>) Declaration protected override string OnValidate(Stack<BTGraphNode> stack) Parameters Type Name Description Stack < BTGraphNode > stack Returns Type Description String Overrides BTAuxiliaryNode.OnValidate(Stack<BTGraphNode>)"
  },
  "api/Saro.BT.Designer.ChangeBTCompositeProvider.html": {
    "href": "api/Saro.BT.Designer.ChangeBTCompositeProvider.html",
    "title": "Class ChangeBTCompositeProvider | Moon Behavior Tree | 0.0.1",
    "keywords": "Class ChangeBTCompositeProvider Inheritance Object ChangeBTNodeProvider ChangeBTCompositeProvider Inherited Members ChangeBTNodeProvider.Show(BTGraphNode, ContextualMenuPopulateEvent) Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class ChangeBTCompositeProvider : ChangeBTNodeProvider, ISearchWindowProvider Constructors ChangeBTCompositeProvider(EditorWindow) Declaration public ChangeBTCompositeProvider(EditorWindow graphEditor) Parameters Type Name Description EditorWindow graphEditor Methods ValidNodeType(Type) Declaration protected override bool ValidNodeType(Type type) Parameters Type Name Description Type type Returns Type Description Boolean Overrides ChangeBTNodeProvider.ValidNodeType(Type)"
  },
  "api/Saro.BT.Designer.ChangeBTServiceProvider.html": {
    "href": "api/Saro.BT.Designer.ChangeBTServiceProvider.html",
    "title": "Class ChangeBTServiceProvider | Moon Behavior Tree | 0.0.1",
    "keywords": "Class ChangeBTServiceProvider Inheritance Object ChangeBTNodeProvider ChangeBTServiceProvider Inherited Members ChangeBTNodeProvider.Show(BTGraphNode, ContextualMenuPopulateEvent) Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class ChangeBTServiceProvider : ChangeBTNodeProvider, ISearchWindowProvider Constructors ChangeBTServiceProvider(EditorWindow) Declaration public ChangeBTServiceProvider(EditorWindow graphEditor) Parameters Type Name Description EditorWindow graphEditor Methods ValidNodeType(Type) Declaration protected override bool ValidNodeType(Type type) Parameters Type Name Description Type type Returns Type Description Boolean Overrides ChangeBTNodeProvider.ValidNodeType(Type)"
  },
  "api/Saro.BT.Designer.BTGraphNode.html": {
    "href": "api/Saro.BT.Designer.BTGraphNode.html",
    "title": "Class BTGraphNode | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTGraphNode Inheritance Object BTGraphNode BTAuxiliaryNode BTCompositeNode BTRootNode BTTaskNode Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class BTGraphNode : Node, IIterableNode<BTGraphNode> Constructors BTGraphNode() Declaration protected BTGraphNode() Properties GraphView Declaration public BTGraphView GraphView { get; } Property Value Type Description BTGraphView ParentNode Declaration public BTGraphNode ParentNode { get; } Property Value Type Description BTGraphNode ParentPort Declaration public Port ParentPort { get; protected set; } Property Value Type Description Port Methods AddDescription() Declaration protected virtual void AddDescription() AddParent() Declaration protected virtual void AddParent() AddTitle() Declaration protected virtual void AddTitle() BuildContextualMenu(ContextualMenuPopulateEvent) Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt ChildCount() Declaration public abstract int ChildCount() Returns Type Description Int32 Implements IIterableNode<T>.ChildCount() ClearStyle() Declaration public void ClearStyle() Commit(Stack<BTGraphNode>) Declaration public void Commit(Stack<BTGraphNode> stack) Parameters Type Name Description System.Collections.Stack < BTGraphNode > stack CreateChildPort() Declaration protected virtual Port CreateChildPort() Returns Type Description Port GetChildAt(Int32) Declaration public abstract BTGraphNode GetChildAt(int childIndex) Parameters Type Name Description Int32 childIndex Returns Type Description BTGraphNode Implements IIterableNode<T>.GetChildAt(Int32) OnClearStyle() Declaration protected abstract void OnClearStyle() OnCommit(Stack<BTGraphNode>) Declaration protected abstract void OnCommit(Stack<BTGraphNode> stack) Parameters Type Name Description System.Collections.Stack < BTGraphNode > stack OnNodeInspectorGUI() Declaration public virtual void OnNodeInspectorGUI() OnSelected() Declaration public override void OnSelected() OnSetBehavior() Declaration protected virtual void OnSetBehavior() OnUnselected() Declaration public override void OnUnselected() OnValidate(Stack<BTGraphNode>) Declaration protected abstract string OnValidate(Stack<BTGraphNode> stack) Parameters Type Name Description System.Collections.Stack < BTGraphNode > stack Returns Type Description String PostInit(BTGraphView) Declaration public virtual void PostInit(BTGraphView graphView) Parameters Type Name Description BTGraphView graphView RefreshBreakpoint() Declaration protected void RefreshBreakpoint() SetBehavior(BTNode) Declaration public void SetBehavior(BTNode behavior) Parameters Type Name Description BTNode behavior SetChildAt(BTGraphNode, Int32) Declaration public void SetChildAt(BTGraphNode node, int childIndex) Parameters Type Name Description BTGraphNode node Int32 childIndex Implements IIterableNode<T>.SetChildAt(T, Int32) ToString() Declaration public override string ToString() Returns Type Description String Validate(Stack<BTGraphNode>) Declaration public string Validate(Stack<BTGraphNode> stack) Parameters Type Name Description System.Collections.Stack < BTGraphNode > stack Returns Type Description String"
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Moon BehaviorTree | Moon Behavior Tree | 0.0.1",
    "keywords": "Moon BehaviorTree 事件驱动型行为树，提供可视化编辑、调试"
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| Moon Behavior Tree | 0.0.1",
    "keywords": "MIT License Copyright (c) 2020 Sarofc Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | Moon Behavior Tree | 0.0.1",
    "keywords": "Changelog All notable changes to this package will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning ."
  },
  "api/Saro.BT.TreeDebugView.html": {
    "href": "api/Saro.BT.TreeDebugView.html",
    "title": "Class TreeDebugView | Moon Behavior Tree | 0.0.1",
    "keywords": "Class TreeDebugView Inheritance Object TreeDebugView Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class TreeDebugView : MonoBehaviour Fields runtimeTree Declaration public BehaviorTree runtimeTree Field Value Type Description BehaviorTree"
  },
  "api/Saro.BT.TreeTraversal.html": {
    "href": "api/Saro.BT.TreeTraversal.html",
    "title": "Class TreeTraversal | Moon Behavior Tree | 0.0.1",
    "keywords": "Class TreeTraversal Inheritance Object TreeTraversal Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class TreeTraversal Methods LevelOrder<T>(T) Declaration public static IEnumerable<(T node, int level)> LevelOrder<T>(T root) where T : IIterableNode<T> Parameters Type Name Description T root Returns Type Description IEnumerable < ValueTuple <T, Int32 >> Type Parameters Name Description T PostOrder<T>(T) Declaration public static IEnumerable<T> PostOrder<T>(T root) where T : IIterableNode<T> Parameters Type Name Description T root Returns Type Description IEnumerable <T> Type Parameters Name Description T PreOrder<T>(T) Declaration public static IEnumerable<T> PreOrder<T>(T root) where T : IIterableNode<T> Parameters Type Name Description T root Returns Type Description IEnumerable <T> Type Parameters Name Description T"
  },
  "api/Saro.BT.Designer.BTTaskNode.html": {
    "href": "api/Saro.BT.Designer.BTTaskNode.html",
    "title": "Class BTTaskNode | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTTaskNode Inheritance Object BTGraphNode BTTaskNode Inherited Members BTGraphNode.GraphView BTGraphNode.ParentPort BTGraphNode.ParentNode BTGraphNode.AddTitle() BTGraphNode.AddDescription() BTGraphNode.PostInit(BTGraphView) BTGraphNode.SetBehavior(BTNode) BTGraphNode.RefreshBreakpoint() BTGraphNode.AddParent() BTGraphNode.CreateChildPort() BTGraphNode.OnSelected() BTGraphNode.OnUnselected() BTGraphNode.Commit(Stack<BTGraphNode>) BTGraphNode.OnCommit(Stack<BTGraphNode>) BTGraphNode.Validate(Stack<BTGraphNode>) BTGraphNode.OnValidate(Stack<BTGraphNode>) BTGraphNode.ClearStyle() BTGraphNode.OnNodeInspectorGUI() BTGraphNode.SetChildAt(BTGraphNode, Int32) BTGraphNode.ToString() Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BTTaskNode : BTGraphNode, IIterableNode<BTGraphNode> Methods BuildContextualMenu(ContextualMenuPopulateEvent) Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt Overrides BTGraphNode.BuildContextualMenu(ContextualMenuPopulateEvent) ChildCount() Declaration public override int ChildCount() Returns Type Description Int32 Overrides BTGraphNode.ChildCount() GetChildAt(Int32) Declaration public override BTGraphNode GetChildAt(int _) Parameters Type Name Description Int32 _ Returns Type Description BTGraphNode Overrides BTGraphNode.GetChildAt(Int32) OnClearStyle() Declaration protected override void OnClearStyle() Overrides BTGraphNode.OnClearStyle() OnCommit(Stack<BTGraphNode>) Declaration protected override void OnCommit(Stack<BTGraphNode> stack) Parameters Type Name Description Stack < BTGraphNode > stack OnSetBehavior() Declaration protected override void OnSetBehavior() Overrides BTGraphNode.OnSetBehavior() OnValidate(Stack<BTGraphNode>) Declaration protected override string OnValidate(Stack<BTGraphNode> stack) Parameters Type Name Description Stack < BTGraphNode > stack Returns Type Description String"
  },
  "api/Saro.BT.Variable_EcsEntity.html": {
    "href": "api/Saro.BT.Variable_EcsEntity.html",
    "title": "Class Variable_EcsEntity | Moon Behavior Tree | 0.0.1",
    "keywords": "Class Variable_EcsEntity Inheritance Object Variable Variable < EcsEntity > Variable_EcsEntity Inherited Members Variable<EcsEntity>.value Variable<EcsEntity>.GetValue() Variable<EcsEntity>.SetValue(EcsEntity) Variable<EcsEntity>.Reset() Variable<EcsEntity>.Compare(Variable) Variable<EcsEntity>.SetRawValue(Object) Variable<EcsEntity>.GetRawValue() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Variable_EcsEntity : Variable<EcsEntity>"
  },
  "api/Saro.BT.BehaviorTree.html": {
    "href": "api/Saro.BT.BehaviorTree.html",
    "title": "Class BehaviorTree | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BehaviorTree Inheritance Object BehaviorTree Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BehaviorTree Fields actor Declaration public EcsEntity actor Field Value Type Description EcsEntity id Declaration public string id Field Value Type Description String Properties ActiveTimerCount Declaration public int ActiveTimerCount { get; } Property Value Type Description Int32 Blackboard Declaration public BTBlackboard Blackboard { get; } Property Value Type Description BTBlackboard Height Declaration public int Height { get; } Property Value Type Description Int32 IsTreeInitialized Declaration public bool IsTreeInitialized { get; } Property Value Type Description Boolean Root Declaration public BTNode Root { get; } Property Value Type Description BTNode Methods AddTimer(Timer) Declaration public void AddTimer(Timer timer) Parameters Type Name Description Timer timer BeginTraversal() Declaration public void BeginTraversal() Clone() Declaration public BehaviorTree Clone() Returns Type Description BehaviorTree CreateRuntimeTree(BehaviorTree, EcsEntity) Declaration public static BehaviorTree CreateRuntimeTree(BehaviorTree template, EcsEntity actor) Parameters Type Name Description BehaviorTree template EcsEntity actor Returns Type Description BehaviorTree CreateRuntimeTree(String, EcsEntity) Declaration public static BehaviorTree CreateRuntimeTree(string treeId, EcsEntity actor) Parameters Type Name Description String treeId EcsEntity actor Returns Type Description BehaviorTree GetNodes<T>() Declaration public IEnumerable<T> GetNodes<T>() where T : BTNode Returns Type Description IEnumerable <T> Type Parameters Name Description T Initialize() 初始化树 Declaration public void Initialize() Exceptions Type Condition NullReferenceException Interrupt() Declaration public void Interrupt() IsRunning() Declaration public bool IsRunning() Returns Type Description Boolean LastStatus() Declaration public BTNode.EStatus LastStatus() Returns Type Description BTNode.EStatus Load(List<BehaviorTree>) Declaration public static void Load(List<BehaviorTree> list) Parameters Type Name Description List < BehaviorTree > list ReleaseRuntimeTree(BehaviorTree) Declaration public static void ReleaseRuntimeTree(BehaviorTree runtimeTree) Parameters Type Name Description BehaviorTree runtimeTree RemoveTimer(Timer) Declaration public void RemoveTimer(Timer timer) Parameters Type Name Description Timer timer ResetData() Declaration public void ResetData() Tick(Single) Declaration public void Tick(float deltaTime) Parameters Type Name Description Single deltaTime"
  },
  "api/Saro.BT.Variable_Int.html": {
    "href": "api/Saro.BT.Variable_Int.html",
    "title": "Class Variable_Int | Moon Behavior Tree | 0.0.1",
    "keywords": "Class Variable_Int Inheritance Object Variable Variable < Int32 > Variable_Int Inherited Members Variable<Int32>.value Variable<Int32>.GetValue() Variable<Int32>.SetValue(Int32) Variable<Int32>.Reset() Variable<Int32>.Compare(Variable) Variable<Int32>.SetRawValue(Object) Variable<Int32>.GetRawValue() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Variable_Int : Variable<int>"
  },
  "api/Saro.BT.SimpleParallel.html": {
    "href": "api/Saro.BT.SimpleParallel.html",
    "title": "Class SimpleParallel | Moon Behavior Tree | 0.0.1",
    "keywords": "Class SimpleParallel Inheritance Object BTNode BTComposite SimpleParallel Inherited Members BTComposite.m_Children BTComposite.m_LastChildExitStatus BTComposite.CurrentChildIndex BTComposite.Clone() BTComposite.CurrentChild() BTComposite.SetChildren(BTNode[]) BTComposite.OnAbort(Int32) BTComposite.MaxChildCount() BTComposite.ChildCount() BTComposite.GetChildAt(Int32) BTComposite.SetChildAt(BTNode, Int32) BTNode.k_InvalidPreOrder BTNode.Tree BTNode.ChildOrder BTNode.Blackboard BTNode.Actor BTNode.Parent BTNode.Iterator BTNode.childIndex BTNode.OnReset() BTNode.OnChildEnter(Int32) BTNode.OnParentExit() BTNode.OnValidate() BTNode.IsComposite() BTNode.IsAuxiliary() BTNode.IsTask() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [BTNode(\"Simple_Parallel_24x\", \"“简单并行”节点\\n此节点有装饰器局部作用域\\n允许主任务和后台任务一起执行，主任务不能包含Composite节点\")] public sealed class SimpleParallel : BTComposite, IIterableNode<BTNode> Fields finishMode Declaration public SimpleParallel.EFinishMode finishMode Field Value Type Description SimpleParallel.EFinishMode Methods Description(StringBuilder) Declaration public override void Description(StringBuilder builder) Parameters Type Name Description StringBuilder builder Overrides BTNode.Description(StringBuilder) OnChildExit(Int32, BTNode.EStatus) Declaration public override void OnChildExit(int childIndex, BTNode.EStatus status) Parameters Type Name Description Int32 childIndex BTNode.EStatus status Overrides BTComposite.OnChildExit(Int32, BTNode.EStatus) OnEnter() Declaration public override void OnEnter() Overrides BTComposite.OnEnter() OnExecute(Single) Declaration public override BTNode.EStatus OnExecute(float deltaTime) Parameters Type Name Description Single deltaTime Returns Type Description BTNode.EStatus Overrides BTNode.OnExecute(Single) OnExit() Declaration public override void OnExit() Overrides BTNode.OnExit() OnInitialize() Declaration public override void OnInitialize() Overrides BTNode.OnInitialize()"
  },
  "api/Saro.BT.Designer.BTGraphMiniMap.html": {
    "href": "api/Saro.BT.Designer.BTGraphMiniMap.html",
    "title": "Class BTGraphMiniMap | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTGraphMiniMap Inheritance Object BTGraphMiniMap Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BTGraphMiniMap : MiniMap Constructors BTGraphMiniMap(BTGraphView) Declaration public BTGraphMiniMap(BTGraphView view) Parameters Type Name Description BTGraphView view"
  },
  "api/Saro.BT.Variable_Object.html": {
    "href": "api/Saro.BT.Variable_Object.html",
    "title": "Class Variable_Object | Moon Behavior Tree | 0.0.1",
    "keywords": "Class Variable_Object Inheritance Object Variable Variable < Object > Variable_Object Inherited Members Variable<Object>.value Variable<Object>.GetValue() Variable<Object>.SetValue(Object) Variable<Object>.Reset() Variable<Object>.Compare(Variable) Variable<Object>.SetRawValue(Object) Variable<Object>.GetRawValue() Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Variable_Object : Variable<object>"
  },
  "api/Saro.BT.Designer.BBEntrySelectorDrawer.html": {
    "href": "api/Saro.BT.Designer.BBEntrySelectorDrawer.html",
    "title": "Class BBEntrySelectorDrawer | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BBEntrySelectorDrawer Inheritance Object BBEntrySelectorDrawer Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BBEntrySelectorDrawer : ObjectDrawer<BBKeySelector> Methods OnGUI(String, ref BBKeySelector, Object) Declaration public override void OnGUI(string label, ref BBKeySelector instance, object context) Parameters Type Name Description String label BBKeySelector instance Object context"
  },
  "api/Saro.BT.Utility.Timer.html": {
    "href": "api/Saro.BT.Utility.Timer.html",
    "title": "Class Timer | Moon Behavior Tree | 0.0.1",
    "keywords": "Class Timer Inheritance Object Timer Namespace : Saro.BT.Utility <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Timer Constructors Timer() Declaration public Timer() Timer(Timer) Declaration public Timer(Timer timer) Parameters Type Name Description Timer timer Fields deviation Declaration public float deviation Field Value Type Description Single interval Declaration public float interval Field Value Type Description Single OnTimeout Declaration public Action OnTimeout Field Value Type Description Action Properties AutoRestart Declaration public bool AutoRestart { get; set; } Property Value Type Description Boolean IsDone Declaration public bool IsDone { get; } Property Value Type Description Boolean IsRunning Declaration public bool IsRunning { get; } Property Value Type Description Boolean TimeLeft Declaration public float TimeLeft { get; } Property Value Type Description Single Methods GetIntervalInfo() Declaration public string GetIntervalInfo() Returns Type Description String Start() Declaration public void Start() Tick(Single) Declaration public void Tick(float delta) Parameters Type Name Description Single delta ToString() for BTRunTimeValueAttribute Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Saro.BT.IIterableNode-1.html": {
    "href": "api/Saro.BT.IIterableNode-1.html",
    "title": "Interface IIterableNode<T> | Moon Behavior Tree | 0.0.1",
    "keywords": "Interface IIterableNode<T> Namespace : Saro.BT <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IIterableNode<T> Type Parameters Name Description T Methods ChildCount() Declaration int ChildCount() Returns Type Description Int32 GetChildAt(Int32) Declaration T GetChildAt(int childIndex) Parameters Type Name Description Int32 childIndex Returns Type Description T SetChildAt(T, Int32) Declaration void SetChildAt(T node, int childIndex) Parameters Type Name Description T node Int32 childIndex"
  },
  "api/Saro.BT.Designer.BTServiceNode.html": {
    "href": "api/Saro.BT.Designer.BTServiceNode.html",
    "title": "Class BTServiceNode | Moon Behavior Tree | 0.0.1",
    "keywords": "Class BTServiceNode Inheritance Object BTGraphNode BTAuxiliaryNode BTServiceNode Inherited Members BTAuxiliaryNode.ChildPort BTAuxiliaryNode.OnValidate(Stack<BTGraphNode>) BTAuxiliaryNode.OnCommit(Stack<BTGraphNode>) BTAuxiliaryNode.PostInit(BTGraphView) BTAuxiliaryNode.OnClearStyle() BTAuxiliaryNode.GetChildAt(Int32) BTAuxiliaryNode.ChildCount() BTGraphNode.GraphView BTGraphNode.ParentPort BTGraphNode.ParentNode BTGraphNode.AddTitle() BTGraphNode.AddDescription() BTGraphNode.SetBehavior(BTNode) BTGraphNode.RefreshBreakpoint() BTGraphNode.OnSetBehavior() BTGraphNode.AddParent() BTGraphNode.CreateChildPort() BTGraphNode.OnSelected() BTGraphNode.OnUnselected() BTGraphNode.Commit(Stack<BTGraphNode>) BTGraphNode.OnCommit(Stack<BTGraphNode>) BTGraphNode.Validate(Stack<BTGraphNode>) BTGraphNode.OnValidate(Stack<BTGraphNode>) BTGraphNode.ClearStyle() BTGraphNode.OnNodeInspectorGUI() BTGraphNode.SetChildAt(BTGraphNode, Int32) BTGraphNode.ToString() Namespace : Saro.BT.Designer <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BTServiceNode : BTAuxiliaryNode, IIterableNode<BTGraphNode> Methods BuildContextualMenu(ContextualMenuPopulateEvent) Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt Overrides BTGraphNode.BuildContextualMenu(ContextualMenuPopulateEvent)"
  }
}