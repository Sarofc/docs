{
  "api/Saro.FSnapshot.FSnapshotWriter.html": {
    "href": "api/Saro.FSnapshot.FSnapshotWriter.html",
    "title": "Struct FSnapshotWriter | FSnapshot | 0.1.0",
    "keywords": "Struct FSnapshotWriter Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct FSnapshotWriter Constructors FSnapshotWriter(IBufferWriter<Byte>) Declaration public FSnapshotWriter(IBufferWriter<byte> writer) Parameters Type Name Description IBufferWriter < Byte > writer FSnapshotWriter(IBufferWriter<Byte>, FSnapshotState) Declaration public FSnapshotWriter(IBufferWriter<byte> writer, FSnapshotState state) Parameters Type Name Description IBufferWriter < Byte > writer FSnapshotState state Methods AddObjectReference(Object) Declaration public void AddObjectReference(object value) Parameters Type Name Description Object value DangerousWriteUnmanaged<T>(T) Declaration public void DangerousWriteUnmanaged<T>(in T obj) Parameters Type Name Description T obj Type Parameters Name Description T Dispose() Declaration public void Dispose() GetFormatter<T>() Declaration public IFSnapshotFormatter<T> GetFormatter<T>() Returns Type Description IFSnapshotFormatter <T> Type Parameters Name Description T WriteObject<T>(T) Declaration public void WriteObject<T>(T value) Parameters Type Name Description T value Type Parameters Name Description T WriteObjectArray<T>(T[]) Declaration public void WriteObjectArray<T>(T[] refs) Parameters Type Name Description T[] refs Type Parameters Name Description T WriteObjectHeader(Object) Declaration public bool WriteObjectHeader(object value) Parameters Type Name Description Object value Returns Type Description Boolean WriteObjectList<T>(List<T>) Declaration [Obsolete] public void WriteObjectList<T>(List<T> value) Parameters Type Name Description List <T> value Type Parameters Name Description T WriteObjectReferenceId(Object) Declaration public int WriteObjectReferenceId(object value) Parameters Type Name Description Object value Returns Type Description Int32 WriteString(ReadOnlySpan<Char>) Declaration public void WriteString(ReadOnlySpan<char> value) Parameters Type Name Description ReadOnlySpan < Char > value WriteUnmanaged<T>(T) Declaration public void WriteUnmanaged<T>(in T obj) where T : struct Parameters Type Name Description T obj Type Parameters Name Description T WriteUnmanagedArray<T>(T[]) Declaration public void WriteUnmanagedArray<T>(T[] array) where T : struct Parameters Type Name Description T[] array Type Parameters Name Description T WriteUnmanagedList<T>(List<T>) Declaration public void WriteUnmanagedList<T>(List<T> list) where T : struct Parameters Type Name Description List <T> list Type Parameters Name Description T WriteUnmanagedSpan<T>(Span<T>) Declaration public void WriteUnmanagedSpan<T>(Span<T> span) where T : struct Parameters Type Name Description Span <T> span Type Parameters Name Description T"
  },
  "api/Saro.FSnapshot.FTextWriter.html": {
    "href": "api/Saro.FSnapshot.FTextWriter.html",
    "title": "Struct FTextWriter | FSnapshot | 0.1.0",
    "keywords": "Struct FTextWriter Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct FTextWriter Constructors FTextWriter(IBufferWriter<Char>) Declaration public FTextWriter(IBufferWriter<char> bufferWriter) Parameters Type Name Description IBufferWriter < Char > bufferWriter FTextWriter(IBufferWriter<Char>, FSnapshotState) Declaration public FTextWriter(IBufferWriter<char> bufferWriter, FSnapshotState state) Parameters Type Name Description IBufferWriter < Char > bufferWriter FSnapshotState state Properties CurrentIndent Declaration public int CurrentIndent { get; } Property Value Type Description Int32 Methods AddObjectReference(Object) Declaration public int AddObjectReference(object value) Parameters Type Name Description Object value Returns Type Description Int32 BeginWriteObject(String) Declaration public void BeginWriteObject(string name) Parameters Type Name Description String name Clear() Declaration public void Clear() DangerousWriteUnmanaged<T>(T) Declaration public void DangerousWriteUnmanaged<T>(in T value) Parameters Type Name Description T value Type Parameters Name Description T DecrementIndent() Declaration public void DecrementIndent() Dispose() Declaration public void Dispose() EndWriteObject() Declaration public void EndWriteObject() GetFormatter<T>() Declaration public IFSnapshotFormatter<T> GetFormatter<T>() Returns Type Description IFSnapshotFormatter <T> Type Parameters Name Description T IncrementIndent() Declaration public void IncrementIndent() ReferenceIndexOf(Object) Declaration public int ReferenceIndexOf(object value) Parameters Type Name Description Object value Returns Type Description Int32 Write(ReadOnlySpan<Char>) Declaration public void Write(ReadOnlySpan<char> value) Parameters Type Name Description ReadOnlySpan < Char > value WriteIndent() Declaration public void WriteIndent() WriteLineWithIndent(ReadOnlySpan<Char>) Declaration public void WriteLineWithIndent(ReadOnlySpan<char> value) Parameters Type Name Description ReadOnlySpan < Char > value WriteObject<T>(T) Declaration public void WriteObject<T>(T value) Parameters Type Name Description T value Type Parameters Name Description T WriteObjectArray<T>(T[]) Declaration public void WriteObjectArray<T>(T[] value) where T : class Parameters Type Name Description T[] value Type Parameters Name Description T WriteObjectList<T>(List<T>) Declaration [Obsolete] public void WriteObjectList<T>(List<T> value) where T : class Parameters Type Name Description List <T> value Type Parameters Name Description T WriteString(ReadOnlySpan<Char>) Declaration public void WriteString(ReadOnlySpan<char> value) Parameters Type Name Description ReadOnlySpan < Char > value WriteUnmanaged<T>(T) Declaration public void WriteUnmanaged<T>(in T value) where T : struct Parameters Type Name Description T value Type Parameters Name Description T WriteUnmanagedArray<T>(T[]) Declaration public void WriteUnmanagedArray<T>(T[] value) where T : struct Parameters Type Name Description T[] value Type Parameters Name Description T WriteUnmanagedList<T>(List<T>) Declaration public void WriteUnmanagedList<T>(List<T> value) where T : struct Parameters Type Name Description List <T> value Type Parameters Name Description T WriteUnmanagedSpan<T>(Span<T>) Declaration public void WriteUnmanagedSpan<T>(Span<T> value) where T : struct Parameters Type Name Description Span <T> value Type Parameters Name Description T WriteWithIndent(ReadOnlySpan<Char>) Declaration public void WriteWithIndent(ReadOnlySpan<char> value) Parameters Type Name Description ReadOnlySpan < Char > value"
  },
  "api/Saro.FSnapshot.FSnapshotReader.html": {
    "href": "api/Saro.FSnapshot.FSnapshotReader.html",
    "title": "Struct FSnapshotReader | FSnapshot | 0.1.0",
    "keywords": "Struct FSnapshotReader Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct FSnapshotReader Constructors FSnapshotReader(ReadOnlySpan<Byte>) Declaration public FSnapshotReader(ReadOnlySpan<byte> buffer) Parameters Type Name Description ReadOnlySpan < Byte > buffer FSnapshotReader(ReadOnlySpan<Byte>, FSnapshotState) Declaration public FSnapshotReader(ReadOnlySpan<byte> buffer, FSnapshotState state) Parameters Type Name Description ReadOnlySpan < Byte > buffer FSnapshotState state Properties ReadCount Declaration public int ReadCount { get; } Property Value Type Description Int32 ReadSpan Declaration public ReadOnlySpan<byte> ReadSpan { get; } Property Value Type Description ReadOnlySpan < Byte > Methods AddObjectReference(Object) Declaration public int AddObjectReference(object value) Parameters Type Name Description Object value Returns Type Description Int32 Advance(Int32) Declaration public void Advance(int size) Parameters Type Name Description Int32 size DangerousReadUnmanaged<T>(ref T) Declaration public void DangerousReadUnmanaged<T>(ref T obj) Parameters Type Name Description T obj Type Parameters Name Description T Dispose() Declaration public void Dispose() GetFormatter<T>() Declaration public IFSnapshotFormatter<T> GetFormatter<T>() Returns Type Description IFSnapshotFormatter <T> Type Parameters Name Description T GetObjectReference<T>(Int32) Declaration public T GetObjectReference<T>(int refId) where T : class Parameters Type Name Description Int32 refId Returns Type Description T Type Parameters Name Description T ReadObject<T>(ref T) Declaration public void ReadObject<T>(ref T value) Parameters Type Name Description T value Type Parameters Name Description T ReadObjectArray<T>(ref T[]) Declaration public void ReadObjectArray<T>(ref T[] value) Parameters Type Name Description T[] value Type Parameters Name Description T ReadObjectHeader() Declaration public bool ReadObjectHeader() Returns Type Description Boolean ReadObjectList<T>(ref List<T>) Declaration [Obsolete] public void ReadObjectList<T>(ref List<T> value) Parameters Type Name Description List <T> value Type Parameters Name Description T ReadObjectReferenceId() Declaration public int ReadObjectReferenceId() Returns Type Description Int32 ReadString() Declaration public string ReadString() Returns Type Description String ReadUnmanaged<T>(ref T) Declaration public void ReadUnmanaged<T>(ref T obj) where T : struct Parameters Type Name Description T obj Type Parameters Name Description T ReadUnmanagedArray<T>(ref T[]) Declaration public int ReadUnmanagedArray<T>(ref T[] array) where T : struct Parameters Type Name Description T[] array Returns Type Description Int32 Type Parameters Name Description T ReadUnmanagedList<T>(ref List<T>) Declaration public void ReadUnmanagedList<T>(ref List<T> refs) where T : struct Parameters Type Name Description List <T> refs Type Parameters Name Description T ReadUnmanagedSpan<T>(ref Span<T>) Declaration public int ReadUnmanagedSpan<T>(ref Span<T> span) where T : struct Parameters Type Name Description Span <T> span Returns Type Description Int32 Type Parameters Name Description T"
  },
  "api/Saro.FSnapshot.SortedListFormatter-2.html": {
    "href": "api/Saro.FSnapshot.SortedListFormatter-2.html",
    "title": "Class SortedListFormatter<TKey, TValue> | FSnapshot | 0.1.0",
    "keywords": "Class SortedListFormatter<TKey, TValue> Inheritance Object FSnapshotFormatter < SortedList <TKey, TValue>> SortedListFormatter<TKey, TValue> Inherited Members FSnapshotFormatter<SortedList<TKey, TValue>>.TakeSnapshot(FSnapshotWriter, SortedList<TKey, TValue>) FSnapshotFormatter<SortedList<TKey, TValue>>.RestoreSnapshot(FSnapshotReader, SortedList<TKey, TValue>) FSnapshotFormatter<SortedList<TKey, TValue>>.Dump(FTextWriter, SortedList<TKey, TValue>) FSnapshotFormatter<SortedList<TKey, TValue>>.IFSnapshotFormatter.TakeSnapshot(FSnapshotWriter, Object) FSnapshotFormatter<SortedList<TKey, TValue>>.IFSnapshotFormatter.RestoreSnapshot(FSnapshotReader, Object) FSnapshotFormatter<SortedList<TKey, TValue>>.IFSnapshotFormatter.Dump(FTextWriter, Object) Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class SortedListFormatter<TKey, TValue> : FSnapshotFormatter<SortedList<TKey, TValue>>, IFSnapshotFormatter<SortedList<TKey, TValue>>, IFSnapshotFormatter where TKey : notnull Type Parameters Name Description TKey TValue Constructors SortedListFormatter() Declaration public SortedListFormatter() SortedListFormatter(IComparer<TKey>) Declaration public SortedListFormatter(IComparer<TKey> comparer) Parameters Type Name Description IComparer <TKey> comparer Methods RestoreSnapshot(ref FSnapshotReader, ref Nullable<SortedList<TKey, TValue>>) Declaration public override void RestoreSnapshot(ref FSnapshotReader reader, ref SortedList<TKey, TValue>? value) Parameters Type Name Description FSnapshotReader reader Nullable < SortedList <TKey, TValue>> value TakeSnapshot(ref FSnapshotWriter, Nullable<SortedList<TKey, TValue>>) Declaration public override void TakeSnapshot(ref FSnapshotWriter writer, in SortedList<TKey, TValue>? value) Parameters Type Name Description FSnapshotWriter writer Nullable < SortedList <TKey, TValue>> value"
  },
  "api/Saro.FSnapshot.SortedSetFormatter-1.html": {
    "href": "api/Saro.FSnapshot.SortedSetFormatter-1.html",
    "title": "Class SortedSetFormatter<T> | FSnapshot | 0.1.0",
    "keywords": "Class SortedSetFormatter<T> Inheritance Object FSnapshotFormatter < SortedSet <T>> SortedSetFormatter<T> Inherited Members FSnapshotFormatter<SortedSet<T>>.Dump(FTextWriter, SortedSet<T>) FSnapshotFormatter<SortedSet<T>>.IFSnapshotFormatter.TakeSnapshot(FSnapshotWriter, Object) FSnapshotFormatter<SortedSet<T>>.IFSnapshotFormatter.RestoreSnapshot(FSnapshotReader, Object) FSnapshotFormatter<SortedSet<T>>.IFSnapshotFormatter.Dump(FTextWriter, Object) Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class SortedSetFormatter<T> : FSnapshotFormatter<SortedSet<T>>, IFSnapshotFormatter<SortedSet<T>>, IFSnapshotFormatter Type Parameters Name Description T Constructors SortedSetFormatter() Declaration public SortedSetFormatter() SortedSetFormatter(IComparer<T>) Declaration public SortedSetFormatter(IComparer<T> comparer) Parameters Type Name Description IComparer <T> comparer Methods RestoreSnapshot(ref FSnapshotReader, ref SortedSet<T>) Declaration public override void RestoreSnapshot(ref FSnapshotReader reader, ref SortedSet<T> value) Parameters Type Name Description FSnapshotReader reader SortedSet <T> value Overrides Saro.FSnapshot.FSnapshotFormatter<SortedSet<T>>.RestoreSnapshot(Saro.FSnapshot.FSnapshotReader, SortedSet<T>) TakeSnapshot(ref FSnapshotWriter, SortedSet<T>) Declaration public override void TakeSnapshot(ref FSnapshotWriter writer, in SortedSet<T> value) Parameters Type Name Description FSnapshotWriter writer SortedSet <T> value Overrides Saro.FSnapshot.FSnapshotFormatter<SortedSet<T>>.TakeSnapshot(Saro.FSnapshot.FSnapshotWriter, SortedSet<T>)"
  },
  "api/Saro.FSnapshot.FSnapshotState.html": {
    "href": "api/Saro.FSnapshot.FSnapshotState.html",
    "title": "Class FSnapshotState | FSnapshot | 0.1.0",
    "keywords": "Class FSnapshotState Inheritance Object FSnapshotState Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class FSnapshotState : IDisposable Constructors FSnapshotState() Declaration public FSnapshotState() FSnapshotState(Int32) Declaration public FSnapshotState(int refsCapacity) Parameters Type Name Description Int32 refsCapacity Properties NextRefId Declaration public int NextRefId { get; } Property Value Type Description Int32 Methods AddObjectReference(Object) Declaration public int AddObjectReference(object value) Parameters Type Name Description Object value Returns Type Description Int32 Clear() Declaration public void Clear() Dispose() Declaration public void Dispose() GetObjectReference<T>(Int32) Declaration public T GetObjectReference<T>(int refId) where T : class Parameters Type Name Description Int32 refId Returns Type Description T Type Parameters Name Description T ReferenceIndexOf(Object) Declaration public int ReferenceIndexOf(object value) Parameters Type Name Description Object value Returns Type Description Int32"
  },
  "api/Saro.FSnapshot.QueueFormatter-1.html": {
    "href": "api/Saro.FSnapshot.QueueFormatter-1.html",
    "title": "Class QueueFormatter<T> | FSnapshot | 0.1.0",
    "keywords": "Class QueueFormatter<T> Inheritance Object FSnapshotFormatter < Queue <T>> QueueFormatter<T> Inherited Members FSnapshotFormatter<Queue<T>>.Dump(FTextWriter, Queue<T>) FSnapshotFormatter<Queue<T>>.IFSnapshotFormatter.TakeSnapshot(FSnapshotWriter, Object) FSnapshotFormatter<Queue<T>>.IFSnapshotFormatter.RestoreSnapshot(FSnapshotReader, Object) FSnapshotFormatter<Queue<T>>.IFSnapshotFormatter.Dump(FTextWriter, Object) Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class QueueFormatter<T> : FSnapshotFormatter<Queue<T>>, IFSnapshotFormatter<Queue<T>>, IFSnapshotFormatter Type Parameters Name Description T Methods RestoreSnapshot(ref FSnapshotReader, ref Queue<T>) Declaration public override void RestoreSnapshot(ref FSnapshotReader reader, ref Queue<T> value) Parameters Type Name Description FSnapshotReader reader Queue <T> value Overrides Saro.FSnapshot.FSnapshotFormatter<Queue<T>>.RestoreSnapshot(Saro.FSnapshot.FSnapshotReader, Queue<T>) TakeSnapshot(ref FSnapshotWriter, Queue<T>) Declaration public override void TakeSnapshot(ref FSnapshotWriter writer, in Queue<T> value) Parameters Type Name Description FSnapshotWriter writer Queue <T> value Overrides Saro.FSnapshot.FSnapshotFormatter<Queue<T>>.TakeSnapshot(Saro.FSnapshot.FSnapshotWriter, Queue<T>)"
  },
  "api/Saro.FSnapshot.DictionaryFormatter-2.html": {
    "href": "api/Saro.FSnapshot.DictionaryFormatter-2.html",
    "title": "Class DictionaryFormatter<TKey, TValue> | FSnapshot | 0.1.0",
    "keywords": "Class DictionaryFormatter<TKey, TValue> Inheritance Object FSnapshotFormatter < Dictionary <TKey, TValue>> DictionaryFormatter<TKey, TValue> Inherited Members FSnapshotFormatter<Dictionary<TKey, TValue>>.TakeSnapshot(FSnapshotWriter, Dictionary<TKey, TValue>) FSnapshotFormatter<Dictionary<TKey, TValue>>.RestoreSnapshot(FSnapshotReader, Dictionary<TKey, TValue>) FSnapshotFormatter<Dictionary<TKey, TValue>>.Dump(FTextWriter, Dictionary<TKey, TValue>) FSnapshotFormatter<Dictionary<TKey, TValue>>.IFSnapshotFormatter.TakeSnapshot(FSnapshotWriter, Object) FSnapshotFormatter<Dictionary<TKey, TValue>>.IFSnapshotFormatter.RestoreSnapshot(FSnapshotReader, Object) FSnapshotFormatter<Dictionary<TKey, TValue>>.IFSnapshotFormatter.Dump(FTextWriter, Object) Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class DictionaryFormatter<TKey, TValue> : FSnapshotFormatter<Dictionary<TKey, TValue>>, IFSnapshotFormatter<Dictionary<TKey, TValue>>, IFSnapshotFormatter where TKey : notnull Type Parameters Name Description TKey TValue Constructors DictionaryFormatter() Declaration public DictionaryFormatter() DictionaryFormatter(IEqualityComparer<TKey>) Declaration public DictionaryFormatter(IEqualityComparer<TKey> equalityComparer) Parameters Type Name Description IEqualityComparer <TKey> equalityComparer Methods Dump(ref FTextWriter, Dictionary<TKey, TValue>) Declaration public override void Dump(ref FTextWriter writer, in Dictionary<TKey, TValue> value) Parameters Type Name Description FTextWriter writer Dictionary <TKey, TValue> value Overrides Saro.FSnapshot.FSnapshotFormatter<System.Collections.Generic.Dictionary<TKey, TValue>>.Dump(Saro.FSnapshot.FTextWriter, System.Collections.Generic.Dictionary<TKey, TValue>) RestoreSnapshot(ref FSnapshotReader, ref Dictionary<TKey, TValue>) Declaration public override void RestoreSnapshot(ref FSnapshotReader reader, ref Dictionary<TKey, TValue> value) Parameters Type Name Description FSnapshotReader reader Dictionary <TKey, TValue> value Overrides Saro.FSnapshot.FSnapshotFormatter<System.Collections.Generic.Dictionary<TKey, TValue>>.RestoreSnapshot(Saro.FSnapshot.FSnapshotReader, System.Collections.Generic.Dictionary<TKey, TValue>) TakeSnapshot(ref FSnapshotWriter, Dictionary<TKey, TValue>) Declaration public override void TakeSnapshot(ref FSnapshotWriter writer, in Dictionary<TKey, TValue> value) Parameters Type Name Description FSnapshotWriter writer Dictionary <TKey, TValue> value Overrides Saro.FSnapshot.FSnapshotFormatter<System.Collections.Generic.Dictionary<TKey, TValue>>.TakeSnapshot(Saro.FSnapshot.FSnapshotWriter, System.Collections.Generic.Dictionary<TKey, TValue>)"
  },
  "api/Saro.FSnapshot.FSnapshotableAttribute.html": {
    "href": "api/Saro.FSnapshot.FSnapshotableAttribute.html",
    "title": "Class FSnapshotableAttribute | FSnapshot | 0.1.0",
    "keywords": "Class FSnapshotableAttribute Inheritance Object Attribute FSnapshotableAttribute Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Interface)] public class FSnapshotableAttribute : Attribute, _Attribute"
  },
  "api/Saro.FSnapshot.IFSnapshotFormatter.html": {
    "href": "api/Saro.FSnapshot.IFSnapshotFormatter.html",
    "title": "Interface IFSnapshotFormatter | FSnapshot | 0.1.0",
    "keywords": "Interface IFSnapshotFormatter Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IFSnapshotFormatter Methods Dump(ref FTextWriter, Object) Declaration void Dump(ref FTextWriter writer, in object value) Parameters Type Name Description FTextWriter writer Object value RestoreSnapshot(ref FSnapshotReader, ref Object) Declaration void RestoreSnapshot(ref FSnapshotReader reader, ref object value) Parameters Type Name Description FSnapshotReader reader Object value TakeSnapshot(ref FSnapshotWriter, Object) Declaration void TakeSnapshot(ref FSnapshotWriter writer, in object value) Parameters Type Name Description FSnapshotWriter writer Object value"
  },
  "api/Saro.FSnapshot.StackFormatter-1.html": {
    "href": "api/Saro.FSnapshot.StackFormatter-1.html",
    "title": "Class StackFormatter<T> | FSnapshot | 0.1.0",
    "keywords": "Class StackFormatter<T> Inheritance Object FSnapshotFormatter < Stack <T>> StackFormatter<T> Inherited Members FSnapshotFormatter<Stack<T>>.Dump(FTextWriter, Stack<T>) FSnapshotFormatter<Stack<T>>.IFSnapshotFormatter.TakeSnapshot(FSnapshotWriter, Object) FSnapshotFormatter<Stack<T>>.IFSnapshotFormatter.RestoreSnapshot(FSnapshotReader, Object) FSnapshotFormatter<Stack<T>>.IFSnapshotFormatter.Dump(FTextWriter, Object) Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class StackFormatter<T> : FSnapshotFormatter<Stack<T>>, IFSnapshotFormatter<Stack<T>>, IFSnapshotFormatter Type Parameters Name Description T Methods RestoreSnapshot(ref FSnapshotReader, ref Stack<T>) Declaration public override void RestoreSnapshot(ref FSnapshotReader reader, ref Stack<T> value) Parameters Type Name Description FSnapshotReader reader Stack <T> value Overrides Saro.FSnapshot.FSnapshotFormatter<Stack<T>>.RestoreSnapshot(Saro.FSnapshot.FSnapshotReader, Stack<T>) TakeSnapshot(ref FSnapshotWriter, Stack<T>) Declaration public override void TakeSnapshot(ref FSnapshotWriter writer, in Stack<T> value) Parameters Type Name Description FSnapshotWriter writer Stack <T> value Overrides Saro.FSnapshot.FSnapshotFormatter<Stack<T>>.TakeSnapshot(Saro.FSnapshot.FSnapshotWriter, Stack<T>)"
  },
  "api/Saro.FSnapshot.IFSnapshotable.html": {
    "href": "api/Saro.FSnapshot.IFSnapshotable.html",
    "title": "Interface IFSnapshotable | FSnapshot | 0.1.0",
    "keywords": "Interface IFSnapshotable Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IFSnapshotable : IFSnapshotFormatterRegister Methods Dump(ref FTextWriter) Declaration void Dump(ref FTextWriter writer) Parameters Type Name Description FTextWriter writer RestoreSnapshot(ref FSnapshotReader) Declaration void RestoreSnapshot(ref FSnapshotReader reader) Parameters Type Name Description FSnapshotReader reader TakeSnapshot(ref FSnapshotWriter) Declaration void TakeSnapshot(ref FSnapshotWriter writer) Parameters Type Name Description FSnapshotWriter writer"
  },
  "api/Saro.FSnapshot.IFSnapshotFormatter-1.html": {
    "href": "api/Saro.FSnapshot.IFSnapshotFormatter-1.html",
    "title": "Interface IFSnapshotFormatter<T> | FSnapshot | 0.1.0",
    "keywords": "Interface IFSnapshotFormatter<T> Inherited Members IFSnapshotFormatter.TakeSnapshot(FSnapshotWriter, Object) IFSnapshotFormatter.RestoreSnapshot(FSnapshotReader, Object) IFSnapshotFormatter.Dump(FTextWriter, Object) Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IFSnapshotFormatter<T> : IFSnapshotFormatter Type Parameters Name Description T Methods Dump(ref FTextWriter, T) Declaration void Dump(ref FTextWriter writer, in T value) Parameters Type Name Description FTextWriter writer T value RestoreSnapshot(ref FSnapshotReader, ref T) Declaration void RestoreSnapshot(ref FSnapshotReader reader, ref T value) Parameters Type Name Description FSnapshotReader reader T value TakeSnapshot(ref FSnapshotWriter, T) Declaration void TakeSnapshot(ref FSnapshotWriter writer, in T value) Parameters Type Name Description FSnapshotWriter writer T value"
  },
  "api/Saro.FSnapshot.FSnapshotUnionAttribute.html": {
    "href": "api/Saro.FSnapshot.FSnapshotUnionAttribute.html",
    "title": "Class FSnapshotUnionAttribute | FSnapshot | 0.1.0",
    "keywords": "Class FSnapshotUnionAttribute Inheritance Object Attribute FSnapshotUnionAttribute Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Interface, AllowMultiple = true, Inherited = false)] public sealed class FSnapshotUnionAttribute : Attribute, _Attribute Constructors FSnapshotUnionAttribute(UInt16, Type) Declaration public FSnapshotUnionAttribute(ushort tag, Type type) Parameters Type Name Description UInt16 tag Type type Properties Tag Declaration public ushort Tag { get; } Property Value Type Description UInt16 Type Declaration public Type Type { get; } Property Value Type Description Type"
  },
  "api/Saro.FSnapshot.FSnapshotOnSerializedAttribute.html": {
    "href": "api/Saro.FSnapshot.FSnapshotOnSerializedAttribute.html",
    "title": "Class FSnapshotOnSerializedAttribute | FSnapshot | 0.1.0",
    "keywords": "Class FSnapshotOnSerializedAttribute Inheritance Object Attribute FSnapshotOnSerializedAttribute Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false, Inherited = false)] public sealed class FSnapshotOnSerializedAttribute : Attribute, _Attribute"
  },
  "api/Saro.FSnapshot.FSnapshotUnionFormatterAttribute.html": {
    "href": "api/Saro.FSnapshot.FSnapshotUnionFormatterAttribute.html",
    "title": "Class FSnapshotUnionFormatterAttribute | FSnapshot | 0.1.0",
    "keywords": "Class FSnapshotUnionFormatterAttribute Inheritance Object Attribute FSnapshotUnionFormatterAttribute Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public sealed class FSnapshotUnionFormatterAttribute : Attribute, _Attribute Constructors FSnapshotUnionFormatterAttribute(Type) Declaration public FSnapshotUnionFormatterAttribute(Type type) Parameters Type Name Description Type type Properties Type Declaration public Type Type { get; } Property Value Type Description Type"
  },
  "api/Saro.FSnapshot.FSnapshotOnDeserializedAttribute.html": {
    "href": "api/Saro.FSnapshot.FSnapshotOnDeserializedAttribute.html",
    "title": "Class FSnapshotOnDeserializedAttribute | FSnapshot | 0.1.0",
    "keywords": "Class FSnapshotOnDeserializedAttribute Inheritance Object Attribute FSnapshotOnDeserializedAttribute Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false, Inherited = false)] public sealed class FSnapshotOnDeserializedAttribute : Attribute, _Attribute"
  },
  "api/Saro.FSnapshot.IFSnapshotFormatterRegister.html": {
    "href": "api/Saro.FSnapshot.IFSnapshotFormatterRegister.html",
    "title": "Interface IFSnapshotFormatterRegister | FSnapshot | 0.1.0",
    "keywords": "Interface IFSnapshotFormatterRegister Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IFSnapshotFormatterRegister"
  },
  "api/Saro.FSnapshot.ListFormatter-1.html": {
    "href": "api/Saro.FSnapshot.ListFormatter-1.html",
    "title": "Class ListFormatter<T> | FSnapshot | 0.1.0",
    "keywords": "Class ListFormatter<T> Inheritance Object FSnapshotFormatter < List <T>> ListFormatter<T> Inherited Members FSnapshotFormatter<List<T>>.IFSnapshotFormatter.TakeSnapshot(FSnapshotWriter, Object) FSnapshotFormatter<List<T>>.IFSnapshotFormatter.RestoreSnapshot(FSnapshotReader, Object) FSnapshotFormatter<List<T>>.IFSnapshotFormatter.Dump(FTextWriter, Object) Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class ListFormatter<T> : FSnapshotFormatter<List<T>>, IFSnapshotFormatter<List<T>>, IFSnapshotFormatter Type Parameters Name Description T Methods Dump(ref FTextWriter, List<T>) Declaration public override void Dump(ref FTextWriter writer, in List<T> value) Parameters Type Name Description FTextWriter writer List <T> value Overrides Saro.FSnapshot.FSnapshotFormatter<System.Collections.Generic.List<T>>.Dump(Saro.FSnapshot.FTextWriter, System.Collections.Generic.List<T>) RestoreSnapshot(ref FSnapshotReader, ref List<T>) Declaration public override void RestoreSnapshot(ref FSnapshotReader reader, ref List<T> value) Parameters Type Name Description FSnapshotReader reader List <T> value Overrides Saro.FSnapshot.FSnapshotFormatter<System.Collections.Generic.List<T>>.RestoreSnapshot(Saro.FSnapshot.FSnapshotReader, System.Collections.Generic.List<T>) TakeSnapshot(ref FSnapshotWriter, List<T>) Declaration public override void TakeSnapshot(ref FSnapshotWriter writer, in List<T> value) Parameters Type Name Description FSnapshotWriter writer List <T> value Overrides Saro.FSnapshot.FSnapshotFormatter<System.Collections.Generic.List<T>>.TakeSnapshot(Saro.FSnapshot.FSnapshotWriter, System.Collections.Generic.List<T>)"
  },
  "api/Saro.FSnapshot.FSnapshotAttribute.html": {
    "href": "api/Saro.FSnapshot.FSnapshotAttribute.html",
    "title": "Class FSnapshotAttribute | FSnapshot | 0.1.0",
    "keywords": "Class FSnapshotAttribute Inheritance Object Attribute FSnapshotAttribute Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)] public class FSnapshotAttribute : Attribute, _Attribute"
  },
  "api/Saro.FSnapshot.FSnapshotFormatterProvider.html": {
    "href": "api/Saro.FSnapshot.FSnapshotFormatterProvider.html",
    "title": "Class FSnapshotFormatterProvider | FSnapshot | 0.1.0",
    "keywords": "Class FSnapshotFormatterProvider Inheritance Object FSnapshotFormatterProvider Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class FSnapshotFormatterProvider Methods GetFormatter<T>() Declaration public static IFSnapshotFormatter<T> GetFormatter<T>() Returns Type Description IFSnapshotFormatter <T> Type Parameters Name Description T IsRegistered<T>() Declaration public static bool IsRegistered<T>() Returns Type Description Boolean Type Parameters Name Description T Register<T>(IFSnapshotFormatter<T>) Declaration public static void Register<T>(IFSnapshotFormatter<T> formatter) Parameters Type Name Description IFSnapshotFormatter <T> formatter Type Parameters Name Description T"
  },
  "api/Saro.FSnapshot.FSnapshotOnDeserializingAttribute.html": {
    "href": "api/Saro.FSnapshot.FSnapshotOnDeserializingAttribute.html",
    "title": "Class FSnapshotOnDeserializingAttribute | FSnapshot | 0.1.0",
    "keywords": "Class FSnapshotOnDeserializingAttribute Inheritance Object Attribute FSnapshotOnDeserializingAttribute Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false, Inherited = false)] public sealed class FSnapshotOnDeserializingAttribute : Attribute, _Attribute"
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Information | FSnapshot | 0.1.0",
    "keywords": "Information There is currently no documentation for this package."
  },
  "api/Saro.FSnapshot.PreserveAttribute.html": {
    "href": "api/Saro.FSnapshot.PreserveAttribute.html",
    "title": "Class PreserveAttribute | FSnapshot | 0.1.0",
    "keywords": "Class PreserveAttribute Inheritance Object Attribute PreserveAttribute Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = false)] public sealed class PreserveAttribute : Attribute, _Attribute"
  },
  "api/Saro.FSnapshot.FSnapshotOnSerializingAttribute.html": {
    "href": "api/Saro.FSnapshot.FSnapshotOnSerializingAttribute.html",
    "title": "Class FSnapshotOnSerializingAttribute | FSnapshot | 0.1.0",
    "keywords": "Class FSnapshotOnSerializingAttribute Inheritance Object Attribute FSnapshotOnSerializingAttribute Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false, Inherited = false)] public sealed class FSnapshotOnSerializingAttribute : Attribute, _Attribute"
  },
  "api/Saro.FSnapshot.html": {
    "href": "api/Saro.FSnapshot.html",
    "title": "Namespace Saro.FSnapshot | FSnapshot | 0.1.0",
    "keywords": "Namespace Saro.FSnapshot Classes DictionaryFormatter<TKey, TValue> FSnapshotableAttribute FSnapshotAttribute FSnapshotFormatter<T> FSnapshotFormatterProvider FSnapshotOnDeserializedAttribute FSnapshotOnDeserializingAttribute FSnapshotOnSerializedAttribute FSnapshotOnSerializingAttribute FSnapshotState FSnapshotUnionAttribute FSnapshotUnionFormatterAttribute HashSetFormatter<T> LinkedListFormatter<T> ListFormatter<T> PreserveAttribute QueueFormatter<T> SortedDictionaryFormatter<TKey, TValue> SortedListFormatter<TKey, TValue> SortedSetFormatter<T> StackFormatter<T> Structs FSnapshotReader FSnapshotWriter FTextWriter Interfaces IFSnapshotable IFSnapshotFormatter IFSnapshotFormatter<T> IFSnapshotFormatterRegister"
  },
  "api/Saro.FSnapshot.SortedDictionaryFormatter-2.html": {
    "href": "api/Saro.FSnapshot.SortedDictionaryFormatter-2.html",
    "title": "Class SortedDictionaryFormatter<TKey, TValue> | FSnapshot | 0.1.0",
    "keywords": "Class SortedDictionaryFormatter<TKey, TValue> Inheritance Object FSnapshotFormatter < SortedDictionary <TKey, TValue>> SortedDictionaryFormatter<TKey, TValue> Inherited Members FSnapshotFormatter<SortedDictionary<TKey, TValue>>.TakeSnapshot(FSnapshotWriter, SortedDictionary<TKey, TValue>) FSnapshotFormatter<SortedDictionary<TKey, TValue>>.RestoreSnapshot(FSnapshotReader, SortedDictionary<TKey, TValue>) FSnapshotFormatter<SortedDictionary<TKey, TValue>>.Dump(FTextWriter, SortedDictionary<TKey, TValue>) FSnapshotFormatter<SortedDictionary<TKey, TValue>>.IFSnapshotFormatter.TakeSnapshot(FSnapshotWriter, Object) FSnapshotFormatter<SortedDictionary<TKey, TValue>>.IFSnapshotFormatter.RestoreSnapshot(FSnapshotReader, Object) FSnapshotFormatter<SortedDictionary<TKey, TValue>>.IFSnapshotFormatter.Dump(FTextWriter, Object) Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class SortedDictionaryFormatter<TKey, TValue> : FSnapshotFormatter<SortedDictionary<TKey, TValue>>, IFSnapshotFormatter<SortedDictionary<TKey, TValue>>, IFSnapshotFormatter where TKey : notnull Type Parameters Name Description TKey TValue Constructors SortedDictionaryFormatter() Declaration public SortedDictionaryFormatter() SortedDictionaryFormatter(IComparer<TKey>) Declaration public SortedDictionaryFormatter(IComparer<TKey> comparer) Parameters Type Name Description IComparer <TKey> comparer Methods RestoreSnapshot(ref FSnapshotReader, ref SortedDictionary<TKey, TValue>) Declaration public override void RestoreSnapshot(ref FSnapshotReader reader, ref SortedDictionary<TKey, TValue> value) Parameters Type Name Description FSnapshotReader reader SortedDictionary <TKey, TValue> value Overrides Saro.FSnapshot.FSnapshotFormatter<SortedDictionary<TKey, TValue>>.RestoreSnapshot(Saro.FSnapshot.FSnapshotReader, SortedDictionary<TKey, TValue>) TakeSnapshot(ref FSnapshotWriter, SortedDictionary<TKey, TValue>) Declaration public override void TakeSnapshot(ref FSnapshotWriter writer, in SortedDictionary<TKey, TValue> value) Parameters Type Name Description FSnapshotWriter writer SortedDictionary <TKey, TValue> value Overrides Saro.FSnapshot.FSnapshotFormatter<SortedDictionary<TKey, TValue>>.TakeSnapshot(Saro.FSnapshot.FSnapshotWriter, SortedDictionary<TKey, TValue>)"
  },
  "api/Saro.FSnapshot.LinkedListFormatter-1.html": {
    "href": "api/Saro.FSnapshot.LinkedListFormatter-1.html",
    "title": "Class LinkedListFormatter<T> | FSnapshot | 0.1.0",
    "keywords": "Class LinkedListFormatter<T> Inheritance Object FSnapshotFormatter < LinkedList <T>> LinkedListFormatter<T> Inherited Members FSnapshotFormatter<LinkedList<T>>.Dump(FTextWriter, LinkedList<T>) FSnapshotFormatter<LinkedList<T>>.IFSnapshotFormatter.TakeSnapshot(FSnapshotWriter, Object) FSnapshotFormatter<LinkedList<T>>.IFSnapshotFormatter.RestoreSnapshot(FSnapshotReader, Object) FSnapshotFormatter<LinkedList<T>>.IFSnapshotFormatter.Dump(FTextWriter, Object) Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class LinkedListFormatter<T> : FSnapshotFormatter<LinkedList<T>>, IFSnapshotFormatter<LinkedList<T>>, IFSnapshotFormatter Type Parameters Name Description T Methods RestoreSnapshot(ref FSnapshotReader, ref LinkedList<T>) Declaration public override void RestoreSnapshot(ref FSnapshotReader reader, ref LinkedList<T> value) Parameters Type Name Description FSnapshotReader reader LinkedList <T> value Overrides Saro.FSnapshot.FSnapshotFormatter<LinkedList<T>>.RestoreSnapshot(Saro.FSnapshot.FSnapshotReader, LinkedList<T>) TakeSnapshot(ref FSnapshotWriter, LinkedList<T>) Declaration public override void TakeSnapshot(ref FSnapshotWriter writer, in LinkedList<T> value) Parameters Type Name Description FSnapshotWriter writer LinkedList <T> value Overrides Saro.FSnapshot.FSnapshotFormatter<LinkedList<T>>.TakeSnapshot(Saro.FSnapshot.FSnapshotWriter, LinkedList<T>)"
  },
  "api/Saro.FSnapshot.FSnapshotFormatter-1.html": {
    "href": "api/Saro.FSnapshot.FSnapshotFormatter-1.html",
    "title": "Class FSnapshotFormatter<T> | FSnapshot | 0.1.0",
    "keywords": "Class FSnapshotFormatter<T> Inheritance Object FSnapshotFormatter<T> DictionaryFormatter<TKey, TValue> HashSetFormatter<T> LinkedListFormatter<T> ListFormatter<T> QueueFormatter<T> SortedDictionaryFormatter<TKey, TValue> SortedListFormatter<TKey, TValue> SortedSetFormatter<T> StackFormatter<T> Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class FSnapshotFormatter<T> : IFSnapshotFormatter<T>, IFSnapshotFormatter Type Parameters Name Description T Methods Dump(ref FTextWriter, T) Declaration public virtual void Dump(ref FTextWriter writer, in T value) Parameters Type Name Description FTextWriter writer T value Implements IFSnapshotFormatter<T>.Dump(ref FTextWriter, T) RestoreSnapshot(ref FSnapshotReader, ref T) Declaration public abstract void RestoreSnapshot(ref FSnapshotReader reader, ref T value) Parameters Type Name Description FSnapshotReader reader T value Implements IFSnapshotFormatter<T>.RestoreSnapshot(ref FSnapshotReader, ref T) TakeSnapshot(ref FSnapshotWriter, T) Declaration public abstract void TakeSnapshot(ref FSnapshotWriter writer, in T value) Parameters Type Name Description FSnapshotWriter writer T value Implements IFSnapshotFormatter<T>.TakeSnapshot(ref FSnapshotWriter, T) Explicit Interface Implementations IFSnapshotFormatter.Dump(ref FTextWriter, Object) Declaration void IFSnapshotFormatter.Dump(ref FTextWriter writer, in object value) Parameters Type Name Description FTextWriter writer Object value Implements IFSnapshotFormatter.Dump(ref FTextWriter, Object) IFSnapshotFormatter.RestoreSnapshot(ref FSnapshotReader, ref Object) Declaration void IFSnapshotFormatter.RestoreSnapshot(ref FSnapshotReader reader, ref object value) Parameters Type Name Description FSnapshotReader reader Object value Implements IFSnapshotFormatter.RestoreSnapshot(ref FSnapshotReader, ref Object) IFSnapshotFormatter.TakeSnapshot(ref FSnapshotWriter, Object) Declaration void IFSnapshotFormatter.TakeSnapshot(ref FSnapshotWriter writer, in object value) Parameters Type Name Description FSnapshotWriter writer Object value Implements IFSnapshotFormatter.TakeSnapshot(ref FSnapshotWriter, Object)"
  },
  "api/Saro.FSnapshot.HashSetFormatter-1.html": {
    "href": "api/Saro.FSnapshot.HashSetFormatter-1.html",
    "title": "Class HashSetFormatter<T> | FSnapshot | 0.1.0",
    "keywords": "Class HashSetFormatter<T> Inheritance Object FSnapshotFormatter < HashSet <T>> HashSetFormatter<T> Inherited Members FSnapshotFormatter<HashSet<T>>.IFSnapshotFormatter.TakeSnapshot(FSnapshotWriter, Object) FSnapshotFormatter<HashSet<T>>.IFSnapshotFormatter.RestoreSnapshot(FSnapshotReader, Object) FSnapshotFormatter<HashSet<T>>.IFSnapshotFormatter.Dump(FTextWriter, Object) Namespace : Saro.FSnapshot <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class HashSetFormatter<T> : FSnapshotFormatter<HashSet<T>>, IFSnapshotFormatter<HashSet<T>>, IFSnapshotFormatter Type Parameters Name Description T Constructors HashSetFormatter() Declaration public HashSetFormatter() HashSetFormatter(IEqualityComparer<T>) Declaration public HashSetFormatter(IEqualityComparer<T> equalityComparer) Parameters Type Name Description IEqualityComparer <T> equalityComparer Methods Dump(ref FTextWriter, HashSet<T>) Declaration public override void Dump(ref FTextWriter writer, in HashSet<T> value) Parameters Type Name Description FTextWriter writer HashSet <T> value Overrides Saro.FSnapshot.FSnapshotFormatter<HashSet<T>>.Dump(Saro.FSnapshot.FTextWriter, HashSet<T>) RestoreSnapshot(ref FSnapshotReader, ref HashSet<T>) Declaration public override void RestoreSnapshot(ref FSnapshotReader reader, ref HashSet<T> value) Parameters Type Name Description FSnapshotReader reader HashSet <T> value Overrides Saro.FSnapshot.FSnapshotFormatter<HashSet<T>>.RestoreSnapshot(Saro.FSnapshot.FSnapshotReader, HashSet<T>) TakeSnapshot(ref FSnapshotWriter, HashSet<T>) Declaration public override void TakeSnapshot(ref FSnapshotWriter writer, in HashSet<T> value) Parameters Type Name Description FSnapshotWriter writer HashSet <T> value Overrides Saro.FSnapshot.FSnapshotFormatter<HashSet<T>>.TakeSnapshot(Saro.FSnapshot.FSnapshotWriter, HashSet<T>)"
  },
  "license/index.html": {
    "href": "license/index.html",
    "title": "| FSnapshot | 0.1.0",
    "keywords": "window.location.replace('LICENSE.html')"
  },
  "index.html": {
    "href": "index.html",
    "title": "Home Page. | FSnapshot | 0.1.0",
    "keywords": "Home Page. This is the home page for this package."
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | FSnapshot | 0.1.0",
    "keywords": "Changelog All notable changes to this package will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning ."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| FSnapshot | 0.1.0",
    "keywords": "This is the documentation for the Scripting APIs of this package."
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| FSnapshot | 0.1.0",
    "keywords": "MIT License Copyright (c) 2023 Sarofc Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  }
}