{
  "api/Saro.Gameplay.Ability.HitRecord.html": {
    "href": "api/Saro.Gameplay.Ability.HitRecord.html",
    "title": "Struct HitRecord | MGF Gameplay | 0.1.0",
    "keywords": "Struct HitRecord Projectile发射器 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct HitRecord Fields cd 还剩多久，能再次命中 Declaration public float cd Field Value Type Description Single target 命中目标 Declaration public EcsEntity target Field Value Type Description EcsEntity"
  },
  "api/Saro.Gameplay.Ability.EventContainer.html": {
    "href": "api/Saro.Gameplay.Ability.EventContainer.html",
    "title": "Class EventContainer | MGF Gameplay | 0.1.0",
    "keywords": "Class EventContainer Inheritance Object EventContainer Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class EventContainer : IVarOwner Fields events Declaration public Dictionary<int, List<GAction>> events Field Value Type Description Dictionary < Int32 , List < GAction >> Methods GetEventCount(Int32) Declaration public int GetEventCount(int eventId) Parameters Type Name Description Int32 eventId Returns Type Description Int32 Parse(IReadOnlyList<VarPair>) Declaration public void Parse(IReadOnlyList<VarPair> specials) Parameters Type Name Description IReadOnlyList < VarPair > specials Implements IVarOwner.Parse(IReadOnlyList<VarPair>)"
  },
  "api/Saro.Gameplay.Ability.EffectDefContainer.html": {
    "href": "api/Saro.Gameplay.Ability.EffectDefContainer.html",
    "title": "Class EffectDefContainer | MGF Gameplay | 0.1.0",
    "keywords": "Class EffectDefContainer Inheritance Object EffectDefContainer Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class EffectDefContainer Fields effects Declaration public List<string> effects Field Value Type Description List < String >"
  },
  "api/Saro.Gameplay.Ability.AttributeChanged.html": {
    "href": "api/Saro.Gameplay.Ability.AttributeChanged.html",
    "title": "Delegate AttributeChanged | MGF Gameplay | 0.1.0",
    "keywords": "Delegate AttributeChanged Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public delegate void AttributeChanged(float oldValue, float newValue); Parameters Type Name Description Single oldValue Single newValue"
  },
  "api/Saro.Gameplay.Ability.VarString.html": {
    "href": "api/Saro.Gameplay.Ability.VarString.html",
    "title": "Class VarString | MGF Gameplay | 0.1.0",
    "keywords": "Class VarString Inheritance Object Var Var < String > VarString Inherited Members Var<String>.Ref Var<String>.values Var<String>.Item[Int32] Var<String>.Count Var<String>.GetRawValue(Int32) Var<String>.GetValue(Int32) Var<String>.Parse(IReadOnlyList<VarPair>) Var<String>.ParseError() Var<String>.ToString() Var.txt Var.raw Var.AutoParse(Object, IReadOnlyList<VarPair>) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class VarString : Var<string> Constructors VarString() Declaration public VarString() VarString(String) Declaration public VarString(string txt) Parameters Type Name Description String txt Methods ParseValues() Declaration protected override void ParseValues() Overrides Saro.Gameplay.Ability.Var<System.String>.ParseValues()"
  },
  "api/Saro.Gameplay.Ability.ProjectileSender.html": {
    "href": "api/Saro.Gameplay.Ability.ProjectileSender.html",
    "title": "Class ProjectileSender | MGF Gameplay | 0.1.0",
    "keywords": "Class ProjectileSender Inheritance Object GameplaySenderWrapper ProjectileSender Inherited Members GameplaySenderWrapper.sender GameplaySenderWrapper.CreateObj<T>(EcsEntity) GameplaySenderWrapper.ReleaseObj(GameplaySenderWrapper) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class ProjectileSender : GameplaySenderWrapper, IGameplayEventSender Properties Caster Declaration public override EcsEntity Caster { get; } Property Value Type Description EcsEntity Overrides GameplaySenderWrapper.Caster Level Declaration public override int Level { get; } Property Value Type Description Int32 Overrides GameplaySenderWrapper.Level"
  },
  "api/Saro.Gameplay.Ability.NotifyState.html": {
    "href": "api/Saro.Gameplay.Ability.NotifyState.html",
    "title": "Class NotifyState | MGF Gameplay | 0.1.0",
    "keywords": "Class NotifyState Inheritance Object NotifyState NS_GoTo NS_RootMotion Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public abstract class NotifyState Fields mute Declaration public bool mute Field Value Type Description Boolean range Declaration public FrameRange range Field Value Type Description FrameRange Methods CreateObj() Declaration public abstract NotifyStateObj CreateObj() Returns Type Description NotifyStateObj MakeObj<T>() Declaration protected T MakeObj<T>() where T : NotifyStateObj, new() Returns Type Description T Type Parameters Name Description T"
  },
  "api/Saro.Gameplay.Ability.GAction.html": {
    "href": "api/Saro.Gameplay.Ability.GAction.html",
    "title": "Class GAction | MGF Gameplay | 0.1.0",
    "keywords": "Class GAction 设计上，为瞬时完成 Inheritance Object SpecialConfig GAction Inherited Members SpecialConfig.IsParse SpecialConfig.Parse(IReadOnlyList<VarPair>) SpecialConfig.ParseInternal(IReadOnlyList<VarPair>) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public abstract class GAction : SpecialConfig, IVarOwner Fields enable Declaration public bool enable Field Value Type Description Boolean Properties Enable Declaration public bool Enable { get; } Property Value Type Description Boolean Methods CreateObj(Int32, Boolean) Declaration public abstract GActionObj CreateObj(int level, bool poolable) Parameters Type Name Description Int32 level Boolean poolable Returns Type Description GActionObj"
  },
  "api/Saro.Gameplay.Ability.EffectCtx.html": {
    "href": "api/Saro.Gameplay.Ability.EffectCtx.html",
    "title": "Struct EffectCtx | MGF Gameplay | 0.1.0",
    "keywords": "Struct EffectCtx 技能系统 核心组件。处理buff效果、状态、各种事件 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct EffectCtx : IEcsComponent, IEcsAutoReset<EffectCtx> Methods AutoReset(ref EffectCtx) Declaration public void AutoReset(ref EffectCtx c) Parameters Type Name Description EffectCtx c Extension Methods EffectCtxExtensions.RegisterGameplayEvent(ref EffectCtx, GameplayTag, ETagEventType, OnGameplayTagCountChanged) EffectCtxExtensions.RegisterGenericGameplayEvent(ref EffectCtx, OnGameplayTagCountChanged) EffectCtxExtensions.GetTagCount(ref EffectCtx, GameplayTag) EffectCtxExtensions.UpdateTagCount(ref EffectCtx, GameplayTag, Int32)"
  },
  "api/Saro.Gameplay.Quest.Quest.html": {
    "href": "api/Saro.Gameplay.Quest.Quest.html",
    "title": "Class Quest | MGF Gameplay | 0.1.0",
    "keywords": "Class Quest Inheritance Object Quest Namespace : Saro.Gameplay.Quest <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class Quest Constructors Quest(Int32) Declaration public Quest(int questId) Parameters Type Name Description Int32 questId Quest(Int32, List<Int32>, List<Int32>, String, String, List<IQuestCondition>, List<IQuestReward>) Declaration public Quest(int questId, List<int> requireQuestIds, List<int> requireOnQuestIds, string questName, string questDescription, List<IQuestCondition> questConditions, List<IQuestReward> questRewards) Parameters Type Name Description Int32 questId List < Int32 > requireQuestIds List < Int32 > requireOnQuestIds String questName String questDescription List < IQuestCondition > questConditions List < IQuestReward > questRewards Properties Accepter Declaration public IQuestAccepter Accepter { get; } Property Value Type Description IQuestAccepter QuestConditions Declaration public List<IQuestCondition> QuestConditions { get; } Property Value Type Description List < IQuestCondition > QuestDescription Declaration public string QuestDescription { get; } Property Value Type Description String QuestId Declaration public int QuestId { get; } Property Value Type Description Int32 QuestName Declaration public string QuestName { get; } Property Value Type Description String QuestRewards Declaration public List<IQuestReward> QuestRewards { get; } Property Value Type Description List < IQuestReward > QuestStatus Declaration public EQuestStatus QuestStatus { get; } Property Value Type Description EQuestStatus RequireOnQuestIds Declaration public List<int> RequireOnQuestIds { get; } Property Value Type Description List < Int32 > RequireQuestIds Declaration public List<int> RequireQuestIds { get; } Property Value Type Description List < Int32 > Methods AcceptQuest(IQuestAccepter) Declaration public bool AcceptQuest(IQuestAccepter accepter) Parameters Type Name Description IQuestAccepter accepter Returns Type Description Boolean CanCancel() Declaration public bool CanCancel() Returns Type Description Boolean CancelQuest() Declaration public bool CancelQuest() Returns Type Description Boolean CompleteQeust() Declaration public bool CompleteQeust() Returns Type Description Boolean HasCompleted() Declaration public bool HasCompleted() Returns Type Description Boolean RegisterEvents() Declaration public void RegisterEvents() Save() Declaration public object Save() Returns Type Description Object UnregisterEvents() Declaration public void UnregisterEvents()"
  },
  "api/Saro.Gameplay.Ability.DefaultAbilityLoader.html": {
    "href": "api/Saro.Gameplay.Ability.DefaultAbilityLoader.html",
    "title": "Class DefaultAbilityLoader | MGF Gameplay | 0.1.0",
    "keywords": "Class DefaultAbilityLoader Inheritance Object DefaultAbilityLoader Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DefaultAbilityLoader Methods Load() Declaration public static void Load() LoadAsync() Declaration public static UniTask LoadAsync() Returns Type Description UniTask Save() Declaration [Conditional(\"UNITY_EDITOR\")] public static void Save()"
  },
  "api/Saro.Gameplay.Common.UnityView.html": {
    "href": "api/Saro.Gameplay.Common.UnityView.html",
    "title": "Struct UnityView | MGF Gameplay | 0.1.0",
    "keywords": "Struct UnityView Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Gameplay.Common <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct UnityView : IEcsComponent, IEcsAutoReset<UnityView> Fields view Declaration public IUnityView view Field Value Type Description IUnityView Methods AddToEntity(EcsEntity, String, IAssetLoader) Declaration public static UnityView AddToEntity(in EcsEntity entity, string prefab, IAssetLoader loader = null) Parameters Type Name Description EcsEntity entity String prefab IAssetLoader loader Returns Type Description UnityView AutoReset(ref UnityView) Declaration public void AutoReset(ref UnityView c) Parameters Type Name Description UnityView c"
  },
  "api/Saro.Gameplay.Ability.EventArgs_OnAbilityCast.html": {
    "href": "api/Saro.Gameplay.Ability.EventArgs_OnAbilityCast.html",
    "title": "Class EventArgs_OnAbilityCast | MGF Gameplay | 0.1.0",
    "keywords": "Class EventArgs_OnAbilityCast Inheritance Object GameplayEventArgs EventArgs_OnAbilityCast Inherited Members GameplayEventArgs.Release(GameplayEventArgs) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class EventArgs_OnAbilityCast : GameplayEventArgs, ICloneable Fields ability Declaration public AbilityObj ability Field Value Type Description AbilityObj motion Declaration public MotionState motion Field Value Type Description MotionState Methods Clone() Declaration public override object Clone() Returns Type Description Object Overrides GameplayEventArgs.Clone() Create(AbilityObj, MotionState) Declaration public static EventArgs_OnAbilityCast Create(AbilityObj ability, MotionState motion) Parameters Type Name Description AbilityObj ability MotionState motion Returns Type Description EventArgs_OnAbilityCast IReferenceClear() Declaration public override void IReferenceClear() Overrides GameplayEventArgs.IReferenceClear() Release(EventArgs_OnAbilityCast) Declaration public static void Release(EventArgs_OnAbilityCast instance) Parameters Type Name Description EventArgs_OnAbilityCast instance"
  },
  "api/Saro.Gameplay.Ability.EffectObj.html": {
    "href": "api/Saro.Gameplay.Ability.EffectObj.html",
    "title": "Class EffectObj | MGF Gameplay | 0.1.0",
    "keywords": "Class EffectObj 保存所有effect模板对象，模板不可修改！ Inheritance Object EffectObj Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class EffectObj : IGameplayEventSender, IModifierSource, IReference, IHandledObject, IComparable<EffectObj> Fields caster 此effect得施加者（可空 TODO 可能需要换个接口了，新接口再持有 ICombatUnit？ Declaration public EcsEntity caster Field Value Type Description EcsEntity target 此effect当前挂载对象 Declaration public EcsEntity target Field Value Type Description EcsEntity vfxHandle 随effect特效handle Declaration public ObjectHandle<VfxScriptBase> vfxHandle Field Value Type Description ObjectHandle < VfxScriptBase > Properties ApplicationTagRequirements Declaration public GameplayTagRequirements ApplicationTagRequirements { get; } Property Value Type Description GameplayTagRequirements ApplyModifier Declaration public bool ApplyModifier { get; } Property Value Type Description Boolean Caster Declaration public EcsEntity Caster { get; } Property Value Type Description EcsEntity Implements IGameplayEventSender.Caster CasterAttributeSet Declaration public GameplayAttributeSet CasterAttributeSet { get; } Property Value Type Description GameplayAttributeSet ChanceToApplyTo Declaration public float ChanceToApplyTo { get; set; } Property Value Type Description Single CleanStackOnOverflow Declaration public bool CleanStackOnOverflow { get; set; } Property Value Type Description Boolean Data Declaration public Effect Data { get; } Property Value Type Description Effect Destroyer 此effect被谁销毁（可空） TODO 如果是entity，搞个 class wrapper，用对象池 Declaration public object Destroyer { get; set; } Property Value Type Description Object DisplayIcon Declaration public byte DisplayIcon { get; } Property Value Type Description Byte DisplayName Declaration public string DisplayName { get; } Property Value Type Description String Duration Declaration public float Duration { get; set; } Property Value Type Description Single DurationTick 剩余持续时间 Declaration public float DurationTick { get; } Property Value Type Description Single EffectCtx effect挂载目标的effect容器 Declaration public EffectCtx EffectCtx { get; } Property Value Type Description EffectCtx ExecutePeriodOnApplication Declaration public bool ExecutePeriodOnApplication { get; set; } Property Value Type Description Boolean GrantedTags Declaration public GameplayTagContainer GrantedTags { get; } Property Value Type Description GameplayTagContainer Id Declaration public string Id { get; } Property Value Type Description String IsDestroyed effect被销毁标记 Declaration public bool IsDestroyed { get; } Property Value Type Description Boolean IsInfinite 永续 Declaration public bool IsInfinite { get; } Property Value Type Description Boolean IsInstant 瞬时 Declaration public bool IsInstant { get; } Property Value Type Description Boolean Level 当前等级 Declaration public int Level { get; set; } Property Value Type Description Int32 Implements IGameplayEventSender.Level m_Script Declaration public IEffectEventScript m_Script { get; } Property Value Type Description IEffectEventScript MaxStackCount Declaration public int MaxStackCount { get; set; } Property Value Type Description Int32 ModifierDefs WARN: 内部池化的，外部使用需要注意 Declaration public List<Modifier> ModifierDefs { get; } Property Value Type Description List < Modifier > ObjectID Declaration public int ObjectID { get; } Property Value Type Description Int32 OnGoingTagRequirements Declaration public GameplayTagRequirements OnGoingTagRequirements { get; } Property Value Type Description GameplayTagRequirements Period Declaration public float Period { get; set; } Property Value Type Description Single PeriodCount Declaration public int PeriodCount { get; } Property Value Type Description Int32 PeriodTick 周期计时 Declaration public float PeriodTick { get; } Property Value Type Description Single Priority Declaration public int Priority { get; } Property Value Type Description Int32 RemoveEffectsWithTags Declaration public GameplayTagContainer RemoveEffectsWithTags { get; } Property Value Type Description GameplayTagContainer Special Declaration public IReadOnlyList<VarPair> Special { get; } Property Value Type Description IReadOnlyList < VarPair > StackCount 堆叠层数 Declaration public int StackCount { get; } Property Value Type Description Int32 StackDurationRefreshPolicy Declaration public EStackDurationRefreshPolicy StackDurationRefreshPolicy { get; } Property Value Type Description EStackDurationRefreshPolicy StackExpirationPolicy Declaration public EStackExpirationPolicy StackExpirationPolicy { get; } Property Value Type Description EStackExpirationPolicy StackingPeriodResetPolicy Declaration public EStackingPeriodResetPolicy StackingPeriodResetPolicy { get; } Property Value Type Description EStackingPeriodResetPolicy Tags Declaration public GameplayTagContainer Tags { get; } Property Value Type Description GameplayTagContainer TargetAttributeSet Declaration public GameplayAttributeSet TargetAttributeSet { get; } Property Value Type Description GameplayAttributeSet UserData 用户数据 脚本自己创建/销毁 用于存储用到的特殊变量, 类似于 Dictionary[string,object]、Params Declaration public object UserData { get; set; } Property Value Type Description Object VfxName Declaration public string VfxName { get; set; } Property Value Type Description String Methods CompareTo(EffectObj) Declaration public int CompareTo(EffectObj other) Parameters Type Name Description EffectObj other Returns Type Description Int32 Implements IComparable<T>.CompareTo(T) CreateObj(Effect, Int32) Declaration public static EffectObj CreateObj(Effect data, int level = 0) Parameters Type Name Description Effect data Int32 level Returns Type Description EffectObj CreateObj(String, Int32) Declaration public static EffectObj CreateObj(string effectId, int level = 0) Parameters Type Name Description String effectId Int32 level Returns Type Description EffectObj GetEventCount(Int32) 获取 事件个数 需要在 Saro.Gameplay.Ability.EffectObj.OnCreatedAction 完成后，再调用 Declaration public int GetEventCount(int eventId) Parameters Type Name Description Int32 eventId Returns Type Description Int32 GetSpeicalValueFor<T>(String, Int32) Declaration public T GetSpeicalValueFor<T>(string name, int level = 0) Parameters Type Name Description String name Int32 level Returns Type Description T Type Parameters Name Description T IncrementStackCount(Int32, Boolean) Declaration public void IncrementStackCount(int addStackCount, bool raiseEvent = true) Parameters Type Name Description Int32 addStackCount Boolean raiseEvent IsApplicationMet() Declaration public bool IsApplicationMet() Returns Type Description Boolean Load(List<Effect>) Declaration public static void Load(List<Effect> list) Parameters Type Name Description List < Effect > list MarkDestroy(Object) Declaration public void MarkDestroy(object destroyer) Parameters Type Name Description Object destroyer OnCreated() 创建时 Declaration public void OnCreated() OnDestroy() 销毁时 Declaration public void OnDestroy() RefreshData(Effect) Declaration public void RefreshData(Effect data = null) Parameters Type Name Description Effect data RefreshDuration(Boolean) Declaration public void RefreshDuration(bool raiseEvent = true) Parameters Type Name Description Boolean raiseEvent RefreshPeriod() Declaration public void RefreshPeriod() ReleaseObj(EffectObj) Declaration public static void ReleaseObj(EffectObj obj) Parameters Type Name Description EffectObj obj RemoveAllModifiers() Declaration public void RemoveAllModifiers() SetStackCount(Int32, Boolean) Declaration public void SetStackCount(int newStackCount, bool raiseEvent = true) Parameters Type Name Description Int32 newStackCount Boolean raiseEvent Tick(Single) Declaration public void Tick(float dt) Parameters Type Name Description Single dt ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Explicit Interface Implementations IModifierSource.ModifiedAttributes Declaration HashSet<int> IModifierSource.ModifiedAttributes { get; } Returns Type Description HashSet < Int32 > Implements IModifierSource.ModifiedAttributes"
  },
  "api/Saro.Gameplay.Ability.Var-1.html": {
    "href": "api/Saro.Gameplay.Ability.Var-1.html",
    "title": "Class Var<T> | MGF Gameplay | 0.1.0",
    "keywords": "Class Var<T> Inheritance Object Var Var<T> VarBool VarByte VarFloat VarInt VarString Inherited Members Var.txt Var.raw Var.AutoParse(Object, IReadOnlyList<VarPair>) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class Var<T> : Var Type Parameters Name Description T Constructors Var() Declaration public Var() Var(String) Declaration public Var(string txt) Parameters Type Name Description String txt Fields Ref Declaration public const char Ref = '$' Field Value Type Description Char values Declaration public List<T> values Field Value Type Description List <T> Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Item[Int32] Declaration public T this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description T Methods GetRawValue(Int32) Declaration public override sealed object GetRawValue(int index) Parameters Type Name Description Int32 index Returns Type Description Object Overrides Var.GetRawValue(Int32) GetValue(Int32) Declaration public T GetValue(int index = 0) Parameters Type Name Description Int32 index Returns Type Description T Parse(IReadOnlyList<VarPair>) Declaration public override sealed void Parse(IReadOnlyList<VarPair> specials) Parameters Type Name Description IReadOnlyList < VarPair > specials Overrides Var.Parse(IReadOnlyList<VarPair>) ParseError() Declaration protected void ParseError() ParseValues() Declaration protected abstract void ParseValues() ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Saro.Gameplay.Ability.SnapshotAttributeSet.html": {
    "href": "api/Saro.Gameplay.Ability.SnapshotAttributeSet.html",
    "title": "Class SnapshotAttributeSet | MGF Gameplay | 0.1.0",
    "keywords": "Class SnapshotAttributeSet Inheritance Object SnapshotAttributeSet Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class SnapshotAttributeSet Methods Capture(SnapshotDefs, GameplayAttributeSet) Declaration public void Capture(SnapshotDefs defs, GameplayAttributeSet set) Parameters Type Name Description SnapshotDefs defs GameplayAttributeSet set GetCurrValue(Int32) Declaration public float GetCurrValue(int key) Parameters Type Name Description Int32 key Returns Type Description Single"
  },
  "api/Saro.Gameplay.Ability.MotionCtx.html": {
    "href": "api/Saro.Gameplay.Ability.MotionCtx.html",
    "title": "Struct MotionCtx | MGF Gameplay | 0.1.0",
    "keywords": "Struct MotionCtx Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct MotionCtx : IEcsComponent, IEcsAutoReset<MotionCtx> Methods AddToEntity(EcsEntity, String) Declaration public static MotionCtx AddToEntity(EcsEntity entity, string defaultClipId) Parameters Type Name Description EcsEntity entity String defaultClipId Returns Type Description MotionCtx AutoReset(ref MotionCtx) Declaration public void AutoReset(ref MotionCtx c) Parameters Type Name Description MotionCtx c Extension Methods MotionCtxUtility.SetDefaultMotion(ref MotionCtx, MotionClip) MotionCtxUtility.StopAll(ref MotionCtx) MotionCtxUtility.ClearReference(ref MotionCtx) MotionCtxUtility.SetState(ref MotionCtx, String, Single) MotionCtxUtility.SetState(ref MotionCtx, MotionClip, Single) MotionCtxUtility.SetState(ref MotionCtx, MotionState, Single) MotionCtxUtility.Pause(ref MotionCtx) MotionCtxUtility.PlayBackground(ref MotionCtx, String, Single) MotionCtxUtility.PlayBackground(ref MotionCtx, MotionClip, Single) MotionCtxUtility.PlayBackground(ref MotionCtx, MotionState, Single)"
  },
  "api/Saro.Gameplay.Ability.ISpecialTableOwner-1.html": {
    "href": "api/Saro.Gameplay.Ability.ISpecialTableOwner-1.html",
    "title": "Interface ISpecialTableOwner<T> | MGF Gameplay | 0.1.0",
    "keywords": "Interface ISpecialTableOwner<T> Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface ISpecialTableOwner<T> Type Parameters Name Description T Properties Specials Declaration IReadOnlyList<VarPair> Specials { get; } Property Value Type Description IReadOnlyList < VarPair > Methods Parse() Declaration void Parse() RefreshData(ref T, Int32) Declaration void RefreshData(ref T data, int level) Parameters Type Name Description T data Int32 level"
  },
  "api/Saro.Gameplay.Ability.GameplayEventArgs.html": {
    "href": "api/Saro.Gameplay.Ability.GameplayEventArgs.html",
    "title": "Class GameplayEventArgs | MGF Gameplay | 0.1.0",
    "keywords": "Class GameplayEventArgs Inheritance Object GameplayEventArgs EventArgs_AoeEnterExit EventArgs_EffectStackCountChanged EventArgs_OnAbilityCast EventArgs_ProjectileHit Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class GameplayEventArgs : IReference, ICloneable Methods Clone() 深拷贝，新实例 Declaration public abstract object Clone() Returns Type Description Object Implements ICloneable.Clone() IReferenceClear() Declaration public virtual void IReferenceClear() Release(GameplayEventArgs) Declaration public static void Release(GameplayEventArgs instance) Parameters Type Name Description GameplayEventArgs instance"
  },
  "api/Saro.Gameplay.Ability.SpecialTable.html": {
    "href": "api/Saro.Gameplay.Ability.SpecialTable.html",
    "title": "Class SpecialTable | MGF Gameplay | 0.1.0",
    "keywords": "Class SpecialTable Inheritance Object SpecialTable Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class SpecialTable Fields id Declaration public string id Field Value Type Description String kv Declaration public VarPair[] kv Field Value Type Description VarPair [] Methods Load(List<SpecialTable>) Declaration public static void Load(List<SpecialTable> list) Parameters Type Name Description List < SpecialTable > list TryGetSpecial(String, out VarPair[]) Declaration public static bool TryGetSpecial(string id, out VarPair[] specials) Parameters Type Name Description String id VarPair [] specials Returns Type Description Boolean"
  },
  "api/Saro.Gameplay.Ability.NS_GoTo.html": {
    "href": "api/Saro.Gameplay.Ability.NS_GoTo.html",
    "title": "Class NS_GoTo | MGF Gameplay | 0.1.0",
    "keywords": "Class NS_GoTo Inheritance Object NotifyState NS_GoTo Inherited Members NotifyState.range NotifyState.mute NotifyState.MakeObj<T>() Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class NS_GoTo : NotifyState Fields conditions Declaration [SerializeReference] public List<NS_GoTo.GoToCondition> conditions Field Value Type Description List < NS_GoTo.GoToCondition > gotoEnd Declaration public bool gotoEnd Field Value Type Description Boolean invert Declaration public bool invert Field Value Type Description Boolean Methods CreateObj() Declaration public override NotifyStateObj CreateObj() Returns Type Description NotifyStateObj Overrides NotifyState.CreateObj()"
  },
  "api/Saro.Gameplay.Ability.IVarOwner.html": {
    "href": "api/Saro.Gameplay.Ability.IVarOwner.html",
    "title": "Interface IVarOwner | MGF Gameplay | 0.1.0",
    "keywords": "Interface IVarOwner Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IVarOwner Methods Parse(IReadOnlyList<VarPair>) Declaration void Parse(IReadOnlyList<VarPair> specials) Parameters Type Name Description IReadOnlyList < VarPair > specials"
  },
  "api/Saro.Gameplay.Ability.IGameplayEventSender.html": {
    "href": "api/Saro.Gameplay.Ability.IGameplayEventSender.html",
    "title": "Interface IGameplayEventSender | MGF Gameplay | 0.1.0",
    "keywords": "Interface IGameplayEventSender 数据驱动使用 Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IGameplayEventSender Properties Caster Declaration EcsEntity Caster { get; } Property Value Type Description EcsEntity Level Declaration int Level { get; } Property Value Type Description Int32"
  },
  "api/Saro.Gameplay.Quest.IQuestAccepter.html": {
    "href": "api/Saro.Gameplay.Quest.IQuestAccepter.html",
    "title": "Interface IQuestAccepter | MGF Gameplay | 0.1.0",
    "keywords": "Interface IQuestAccepter 任务接受者 Namespace : Saro.Gameplay.Quest <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IQuestAccepter Properties AcceptedQuests Declaration IList<Quest> AcceptedQuests { get; } Property Value Type Description IList < Quest > Methods AcceptQuest(Quest) Declaration bool AcceptQuest(Quest quest) Parameters Type Name Description Quest quest Returns Type Description Boolean CancelQuest(Quest) Declaration bool CancelQuest(Quest quest) Parameters Type Name Description Quest quest Returns Type Description Boolean CompleteQuest(Quest) Declaration bool CompleteQuest(Quest quest) Parameters Type Name Description Quest quest Returns Type Description Boolean"
  },
  "api/Saro.Gameplay.Common.TimerSystem.html": {
    "href": "api/Saro.Gameplay.Common.TimerSystem.html",
    "title": "Class TimerSystem | MGF Gameplay | 0.1.0",
    "keywords": "Class TimerSystem Inheritance Object TimerSystem Namespace : Saro.Gameplay.Common <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class TimerSystem : IEcsRunSystem, IEcsInitSystem Methods CancelTimer(EcsEntity) Declaration public static void CancelTimer(in EcsEntity timerEntity) Parameters Type Name Description EcsEntity timerEntity CreateTimer(Single, Action, Int32) Declaration public static EcsEntity CreateTimer(float time, Action action, int loop = 1) Parameters Type Name Description Single time Action action Int32 loop Returns Type Description EcsEntity GetTimerItemCount() Declaration public int GetTimerItemCount() Returns Type Description Int32"
  },
  "api/Saro.Gameplay.Tag.GameplayTag.html": {
    "href": "api/Saro.Gameplay.Tag.GameplayTag.html",
    "title": "Struct GameplayTag | MGF Gameplay | 0.1.0",
    "keywords": "Struct GameplayTag Namespace : Saro.Gameplay.Tag <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct GameplayTag : IEquatable<GameplayTag> Constructors GameplayTag(String) Declaration public GameplayTag(string tagName) Parameters Type Name Description String tagName Fields k_InvalidTag Declaration public static readonly int k_InvalidTag Field Value Type Description Int32 tag Declaration public int tag Field Value Type Description Int32 Methods Equals(GameplayTag) Declaration public bool Equals(GameplayTag other) Parameters Type Name Description GameplayTag other Returns Type Description Boolean Implements IEquatable<T>.Equals(T) Equals(Object) Declaration public override bool Equals(object other) Parameters Type Name Description Object other Returns Type Description Boolean Overrides ValueType.Equals(Object) GetGameplayTagParents() Declaration public GameplayTagContainer GetGameplayTagParents() Returns Type Description GameplayTagContainer GetGameplayTagParents(ref GameplayTagContainer) Declaration public void GetGameplayTagParents(ref GameplayTagContainer tagContainer) Parameters Type Name Description GameplayTagContainer tagContainer GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() GetTagName() Declaration public string GetTagName() Returns Type Description String IsValid() Declaration public bool IsValid() Returns Type Description Boolean MatchesAny(GameplayTagContainer) Checks if this tag matches ANY of the tags in the specified container, also checks against our parent tags \"A.1\".MatchesAny({ \"A\",\"B\"}) will return True, \"A\".MatchesAny({ \"A.1\",\"B\"}) will return False If ContainerToCheck is empty/invalid it will always return False Declaration public bool MatchesAny(GameplayTagContainer containerToCheck) Parameters Type Name Description GameplayTagContainer containerToCheck Returns Type Description Boolean MatchesAnyExact(GameplayTagContainer) Checks if this tag matches ANY of the tags in the specified container, only allowing exact matches \"A.1\".MatchesAnyExact({ \"A\",\"B\"}) will return False If ContainerToCheck is empty/invalid it will always return False Declaration public bool MatchesAnyExact(GameplayTagContainer containerToCheck) Parameters Type Name Description GameplayTagContainer containerToCheck Returns Type Description Boolean MatchesTag(GameplayTag) Determine if this tag matches TagToCheck, expanding our parent tags \"A.1\".MatchesTag(\"A\") will return True, \"A\".MatchesTag(\"A.1\") will return False If TagToCheck is not Valid it will always return False Declaration public bool MatchesTag(GameplayTag tagToCheck) Parameters Type Name Description GameplayTag tagToCheck Returns Type Description Boolean MatchesTagExact(GameplayTag) Determine if TagToCheck is valid and exactly matches this tag \"A.1\".MatchesTagExact(\"A\") will return False If TagToCheck is not Valid it will always return False Declaration public bool MatchesTagExact(GameplayTag tagToCheck) Parameters Type Name Description GameplayTag tagToCheck Returns Type Description Boolean RequestDirectParent() Declaration public GameplayTag RequestDirectParent() Returns Type Description GameplayTag RequestGameplayTag(String) Declaration public static GameplayTag RequestGameplayTag(string tagName) Parameters Type Name Description String tagName Returns Type Description GameplayTag ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Equality(GameplayTag, GameplayTag) Declaration public static bool operator ==(GameplayTag lhs, GameplayTag rhs) Parameters Type Name Description GameplayTag lhs GameplayTag rhs Returns Type Description Boolean Implicit(GameplayTag to Int32) Declaration public static implicit operator int (GameplayTag tag) Parameters Type Name Description GameplayTag tag Returns Type Description Int32 Implicit(Int32 to GameplayTag) Declaration public static implicit operator GameplayTag(int tagHash) Parameters Type Name Description Int32 tagHash Returns Type Description GameplayTag Inequality(GameplayTag, GameplayTag) Declaration public static bool operator !=(GameplayTag lhs, GameplayTag rhs) Parameters Type Name Description GameplayTag lhs GameplayTag rhs Returns Type Description Boolean"
  },
  "api/Saro.Gameplay.Ability.AbilityCastCondition.html": {
    "href": "api/Saro.Gameplay.Ability.AbilityCastCondition.html",
    "title": "Class AbilityCastCondition | MGF Gameplay | 0.1.0",
    "keywords": "Class AbilityCastCondition Inheritance Object SpecialConfig AbilityCastCondition Inherited Members SpecialConfig.IsParse SpecialConfig.Parse(IReadOnlyList<VarPair>) SpecialConfig.ParseInternal(IReadOnlyList<VarPair>) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public abstract class AbilityCastCondition : SpecialConfig, IVarOwner Methods CanCast(AbilityObj) Declaration public abstract bool CanCast(AbilityObj ability) Parameters Type Name Description AbilityObj ability Returns Type Description Boolean"
  },
  "api/Saro.SPhysics.DynamicTreeNode-1.html": {
    "href": "api/Saro.SPhysics.DynamicTreeNode-1.html",
    "title": "Struct DynamicTreeNode<T> | MGF Gameplay | 0.1.0",
    "keywords": "Struct DynamicTreeNode<T> A node in the dynamic tree. The client does not interact with this directly. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct DynamicTreeNode<T> Type Parameters Name Description T Fields AABB This is the fattened AABB. Declaration public Aabb AABB Field Value Type Description Aabb Child1 Declaration public int Child1 Field Value Type Description Int32 Child2 Declaration public int Child2 Field Value Type Description Int32 LeafCount Declaration public int LeafCount Field Value Type Description Int32 MinorRandomExtension Declaration public float MinorRandomExtension Field Value Type Description Single ParentOrNext Declaration public int ParentOrNext Field Value Type Description Int32 UserData Declaration public T UserData Field Value Type Description T Methods IsLeaf() Declaration public bool IsLeaf() Returns Type Description Boolean"
  },
  "api/Saro.Gameplay.Interact.GameCommandReceiverEditor.html": {
    "href": "api/Saro.Gameplay.Interact.GameCommandReceiverEditor.html",
    "title": "Class GameCommandReceiverEditor | MGF Gameplay | 0.1.0",
    "keywords": "Class GameCommandReceiverEditor Inheritance Object GameCommandReceiverEditor Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class GameCommandReceiverEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Saro.Gameplay.Common.GTime.html": {
    "href": "api/Saro.Gameplay.Common.GTime.html",
    "title": "Class GTime | MGF Gameplay | 0.1.0",
    "keywords": "Class GTime Inheritance Object GTime Namespace : Saro.Gameplay.Common <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class GTime Fields frameCount Declaration public static int frameCount Field Value Type Description Int32 frameDeltaTime Declaration public static float frameDeltaTime Field Value Type Description Single"
  },
  "api/Saro.Gameplay.Ability.Modifier.html": {
    "href": "api/Saro.Gameplay.Ability.Modifier.html",
    "title": "Struct Modifier | MGF Gameplay | 0.1.0",
    "keywords": "Struct Modifier Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct Modifier Fields attribute Declaration public int attribute Field Value Type Description Int32 op Declaration public EModifierOp op Field Value Type Description EModifierOp value Declaration public float value Field Value Type Description Single Methods ApplyModifier(GameplayAttributeSet, IModifierSource) Declaration public void ApplyModifier(GameplayAttributeSet set, IModifierSource source) Parameters Type Name Description GameplayAttributeSet set IModifierSource source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/Saro.Gameplay.Ability.AoE.html": {
    "href": "api/Saro.Gameplay.Ability.AoE.html",
    "title": "Class AoE | MGF Gameplay | 0.1.0",
    "keywords": "Class AoE Inheritance Object AoE Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class AoE : ISpecialTableOwner<AoEData> Fields duration Declaration public VarFloat duration Field Value Type Description VarFloat eventContainer Declaration [SerializeReference] public EventContainer eventContainer Field Value Type Description EventContainer eventScript Declaration public string eventScript Field Value Type Description String id Declaration public string id Field Value Type Description String period Declaration public VarFloat period Field Value Type Description VarFloat prefab Declaration public VarString prefab Field Value Type Description VarString specialTable Declaration public string specialTable Field Value Type Description String tags Declaration public GameplayTagContainer tags Field Value Type Description GameplayTagContainer targetType Declaration [SerializeReference] public ITargetType_AoE targetType Field Value Type Description ITargetType_AoE Properties EventScript 脚本 Declaration public IAoeEventScript EventScript { get; } Property Value Type Description IAoeEventScript Specials 特殊参数 Declaration public IReadOnlyList<VarPair> Specials { get; } Property Value Type Description IReadOnlyList < VarPair > Implements ISpecialTableOwner<T>.Specials Methods Parse() Declaration public void Parse() Implements ISpecialTableOwner<T>.Parse() RefreshData(ref AoEData, Int32) Declaration public void RefreshData(ref AoEData data, int level) Parameters Type Name Description AoEData data Int32 level Implements ISpecialTableOwner<T>.RefreshData(ref T, Int32)"
  },
  "api/Saro.SPhysics.PossibleContact-2.html": {
    "href": "api/Saro.SPhysics.PossibleContact-2.html",
    "title": "Struct PossibleContact<ShapeA, ShapeB> | MGF Gameplay | 0.1.0",
    "keywords": "Struct PossibleContact<ShapeA, ShapeB> Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct PossibleContact<ShapeA, ShapeB> : IEcsComponent where ShapeA : struct, IShape where ShapeB : struct, IShape Type Parameters Name Description ShapeA ShapeB Fields bodyA Declaration public int bodyA Field Value Type Description Int32 bodyB Declaration public int bodyB Field Value Type Description Int32"
  },
  "api/Saro.SPhysics.PhysicsWorldNames.html": {
    "href": "api/Saro.SPhysics.PhysicsWorldNames.html",
    "title": "Class PhysicsWorldNames | MGF Gameplay | 0.1.0",
    "keywords": "Class PhysicsWorldNames Inheritance Object PhysicsWorldNames Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class PhysicsWorldNames Fields Events Declaration public const string Events = \"physics_events\" Field Value Type Description String"
  },
  "api/Saro.Gameplay.Waypoint.BezierPath.html": {
    "href": "api/Saro.Gameplay.Waypoint.BezierPath.html",
    "title": "Class BezierPath | MGF Gameplay | 0.1.0",
    "keywords": "Class BezierPath Inheritance Object PathBase BezierPath Inherited Members PathBase.m_Resolution PathBase.StandardizePos(Single) PathBase.FindClosestPoint(Vector3, Int32, Int32, Int32) PathBase.MinUnit(PathBase.EPositionUnits) PathBase.MaxUnit(PathBase.EPositionUnits) PathBase.StandardizeUnit(Single, PathBase.EPositionUnits) PathBase.EvaluatePositionAtUnit(Single, PathBase.EPositionUnits) PathBase.EvaluateTangentAtUnit(Single, PathBase.EPositionUnits) PathBase.EvaluateOrientationAtUnit(Single, PathBase.EPositionUnits) PathBase.InvalidateDistanceCache() PathBase.DistanceCacheIsValid() PathBase.PathLength PathBase.StandardizePathDistance(Single) PathBase.ToNativePathUnits(Single, PathBase.EPositionUnits) PathBase.FromPathNativeUnits(Single, PathBase.EPositionUnits) Namespace : Saro.Gameplay.Waypoint <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BezierPath : PathBase Fields waypoints Declaration public BezierPath.Waypoint[] waypoints Field Value Type Description BezierPath.Waypoint [] Properties DistanceCacheSampleStepsPerSegment Declaration public override int DistanceCacheSampleStepsPerSegment { get; } Property Value Type Description Int32 Overrides PathBase.DistanceCacheSampleStepsPerSegment Looped Declaration public override bool Looped { get; } Property Value Type Description Boolean Overrides PathBase.Looped MaxPos Declaration public override float MaxPos { get; } Property Value Type Description Single Overrides PathBase.MaxPos MinPos Declaration public override float MinPos { get; } Property Value Type Description Single Overrides PathBase.MinPos Methods EvaluateOrientation(Single) Declaration public override Quaternion EvaluateOrientation(float pos) Parameters Type Name Description Single pos Returns Type Description Quaternion Overrides PathBase.EvaluateOrientation(Single) EvaluatePosition(Single) Declaration public override Vector3 EvaluatePosition(float pos) Parameters Type Name Description Single pos Returns Type Description Vector3 Overrides PathBase.EvaluatePosition(Single) EvaluateTangent(Single) Declaration public override Vector3 EvaluateTangent(float pos) Parameters Type Name Description Single pos Returns Type Description Vector3 Overrides PathBase.EvaluateTangent(Single)"
  },
  "api/Saro.Gameplay.Ability.GActionObj.html": {
    "href": "api/Saro.Gameplay.Ability.GActionObj.html",
    "title": "Class GActionObj | MGF Gameplay | 0.1.0",
    "keywords": "Class GActionObj Inheritance Object GActionObj Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class GActionObj : IReference, IDisposable Properties Poolable Declaration public bool Poolable { get; set; } Property Value Type Description Boolean Methods CreateObj(GAction, Int32, Boolean) Declaration public static GActionObj CreateObj(GAction config, int level = 0, bool poolable = true) Parameters Type Name Description GAction config Int32 level Boolean poolable Returns Type Description GActionObj Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() InvokeAction(IGameplayEventSender, GameplayEventArgs) Declaration public abstract void InvokeAction(IGameplayEventSender sender, GameplayEventArgs args) Parameters Type Name Description IGameplayEventSender sender GameplayEventArgs args IReferenceClear() Declaration protected virtual void IReferenceClear() ReleaseObj(GActionObj) Declaration public static void ReleaseObj(GActionObj obj) Parameters Type Name Description GActionObj obj"
  },
  "api/Saro.Gameplay.Ability.EStackingPeriodResetPolicy.html": {
    "href": "api/Saro.Gameplay.Ability.EStackingPeriodResetPolicy.html",
    "title": "Enum EStackingPeriodResetPolicy | MGF Gameplay | 0.1.0",
    "keywords": "Enum EStackingPeriodResetPolicy Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EStackingPeriodResetPolicy : byte Fields Name Description NeverReset ResetOnSuccessfullApplication"
  },
  "api/Saro.SPhysics.ContactTesterReference-2.html": {
    "href": "api/Saro.SPhysics.ContactTesterReference-2.html",
    "title": "Class ContactTesterReference<ShapeA, ShapeB> | MGF Gameplay | 0.1.0",
    "keywords": "Class ContactTesterReference<ShapeA, ShapeB> Inheritance Object ContactTesterReference ContactTesterReference<ShapeA, ShapeB> Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ContactTesterReference<ShapeA, ShapeB> : ContactTesterReference where ShapeA : struct, IShape where ShapeB : struct, IShape Type Parameters Name Description ShapeA ShapeB Constructors ContactTesterReference(EcsWorld) Declaration public ContactTesterReference(EcsWorld worldEvents) Parameters Type Name Description EcsWorld worldEvents Methods AddTask(Int32, Int32, BodyMask, BodyMask) Declaration public override void AddTask(int bodyA, int bodyB, in BodyMask maskA, in BodyMask maskB) Parameters Type Name Description Int32 bodyA Int32 bodyB BodyMask maskA BodyMask maskB Overrides ContactTesterReference.AddTask(Int32, Int32, BodyMask, BodyMask)"
  },
  "api/Saro.Gameplay.Waypoint.PathBase.html": {
    "href": "api/Saro.Gameplay.Waypoint.PathBase.html",
    "title": "Class PathBase | MGF Gameplay | 0.1.0",
    "keywords": "Class PathBase Inheritance Object PathBase BezierPath Namespace : Saro.Gameplay.Waypoint <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class PathBase : MonoBehaviour Fields m_Resolution Declaration public int m_Resolution Field Value Type Description Int32 Properties DistanceCacheSampleStepsPerSegment Declaration public abstract int DistanceCacheSampleStepsPerSegment { get; } Property Value Type Description Int32 Looped Declaration public abstract bool Looped { get; } Property Value Type Description Boolean MaxPos Declaration public abstract float MaxPos { get; } Property Value Type Description Single MinPos Declaration public abstract float MinPos { get; } Property Value Type Description Single PathLength Declaration public float PathLength { get; } Property Value Type Description Single Methods DistanceCacheIsValid() Declaration public bool DistanceCacheIsValid() Returns Type Description Boolean EvaluateOrientation(Single) Declaration public abstract Quaternion EvaluateOrientation(float pos) Parameters Type Name Description Single pos Returns Type Description Quaternion EvaluateOrientationAtUnit(Single, PathBase.EPositionUnits) Declaration public Quaternion EvaluateOrientationAtUnit(float pos, PathBase.EPositionUnits units) Parameters Type Name Description Single pos PathBase.EPositionUnits units Returns Type Description Quaternion EvaluatePosition(Single) Declaration public abstract Vector3 EvaluatePosition(float pos) Parameters Type Name Description Single pos Returns Type Description Vector3 EvaluatePositionAtUnit(Single, PathBase.EPositionUnits) Declaration public Vector3 EvaluatePositionAtUnit(float pos, PathBase.EPositionUnits units) Parameters Type Name Description Single pos PathBase.EPositionUnits units Returns Type Description Vector3 EvaluateTangent(Single) Declaration public abstract Vector3 EvaluateTangent(float pos) Parameters Type Name Description Single pos Returns Type Description Vector3 EvaluateTangentAtUnit(Single, PathBase.EPositionUnits) Declaration public Vector3 EvaluateTangentAtUnit(float pos, PathBase.EPositionUnits units) Parameters Type Name Description Single pos PathBase.EPositionUnits units Returns Type Description Vector3 FindClosestPoint(Vector3, Int32, Int32, Int32) Declaration public virtual float FindClosestPoint(Vector3 p, int startSegment, int searchRadius, int stepsPerSegment) Parameters Type Name Description Vector3 p Int32 startSegment Int32 searchRadius Int32 stepsPerSegment Returns Type Description Single FromPathNativeUnits(Single, PathBase.EPositionUnits) Declaration public float FromPathNativeUnits(float pos, PathBase.EPositionUnits units) Parameters Type Name Description Single pos PathBase.EPositionUnits units Returns Type Description Single InvalidateDistanceCache() Declaration public virtual void InvalidateDistanceCache() MaxUnit(PathBase.EPositionUnits) Declaration public float MaxUnit(PathBase.EPositionUnits units) Parameters Type Name Description PathBase.EPositionUnits units Returns Type Description Single MinUnit(PathBase.EPositionUnits) Declaration public float MinUnit(PathBase.EPositionUnits units) Parameters Type Name Description PathBase.EPositionUnits units Returns Type Description Single StandardizePathDistance(Single) Declaration public float StandardizePathDistance(float distance) Parameters Type Name Description Single distance Returns Type Description Single StandardizePos(Single) Declaration public virtual float StandardizePos(float pos) Parameters Type Name Description Single pos Returns Type Description Single StandardizeUnit(Single, PathBase.EPositionUnits) Declaration public virtual float StandardizeUnit(float pos, PathBase.EPositionUnits units) Parameters Type Name Description Single pos PathBase.EPositionUnits units Returns Type Description Single ToNativePathUnits(Single, PathBase.EPositionUnits) Declaration public float ToNativePathUnits(float pos, PathBase.EPositionUnits units) Parameters Type Name Description Single pos PathBase.EPositionUnits units Returns Type Description Single"
  },
  "api/Saro.Gameplay.Waypoint.BezierPath.Waypoint.html": {
    "href": "api/Saro.Gameplay.Waypoint.BezierPath.Waypoint.html",
    "title": "Struct BezierPath.Waypoint | MGF Gameplay | 0.1.0",
    "keywords": "Struct BezierPath.Waypoint Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Gameplay.Waypoint <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct Waypoint Fields position Declaration public Vector3 position Field Value Type Description Vector3 roll Declaration public float roll Field Value Type Description Single tangent Declaration public Vector3 tangent Field Value Type Description Vector3"
  },
  "api/Saro.Gameplay.Quest.EQuestStatus.html": {
    "href": "api/Saro.Gameplay.Quest.EQuestStatus.html",
    "title": "Enum EQuestStatus | MGF Gameplay | 0.1.0",
    "keywords": "Enum EQuestStatus Namespace : Saro.Gameplay.Quest <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EQuestStatus : byte Fields Name Description Active Cancelled Completed InActive"
  },
  "api/Saro.Gameplay.Ability.ModifierDef.html": {
    "href": "api/Saro.Gameplay.Ability.ModifierDef.html",
    "title": "Class ModifierDef | MGF Gameplay | 0.1.0",
    "keywords": "Class ModifierDef Inheritance Object ModifierDef Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class ModifierDef : IVarOwner Fields modifierId Declaration public int modifierId Field Value Type Description Int32 modifierOp Declaration public EModifierOp modifierOp Field Value Type Description EModifierOp modifierVal Declaration [SerializeReference] public IVarMagnitudeCalculation modifierVal Field Value Type Description IVarMagnitudeCalculation Methods Parse(IReadOnlyList<VarPair>) Declaration public void Parse(IReadOnlyList<VarPair> specials) Parameters Type Name Description IReadOnlyList < VarPair > specials Implements IVarOwner.Parse(IReadOnlyList<VarPair>)"
  },
  "api/Saro.Gameplay.Ability.IMotionListener.html": {
    "href": "api/Saro.Gameplay.Ability.IMotionListener.html",
    "title": "Interface IMotionListener | MGF Gameplay | 0.1.0",
    "keywords": "Interface IMotionListener Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IMotionListener Methods OnCompleted() Declaration void OnCompleted() OnPause() Declaration void OnPause() OnPlay() Declaration void OnPlay() OnStop() Declaration void OnStop()"
  },
  "api/Saro.Gameplay.Common.html": {
    "href": "api/Saro.Gameplay.Common.html",
    "title": "Namespace Saro.Gameplay.Common | MGF Gameplay | 0.1.0",
    "keywords": "Namespace Saro.Gameplay.Common Classes GTime IScriptAsset IScriptAsset<T> IScriptInstance IScriptInstance<T> IUnityView ScriptSystem TimerSystem UnityViewSystem UpdateManager Structs Script UnityView"
  },
  "api/Saro.Gameplay.Common.UpdateManager.html": {
    "href": "api/Saro.Gameplay.Common.UpdateManager.html",
    "title": "Class UpdateManager | MGF Gameplay | 0.1.0",
    "keywords": "Class UpdateManager Inheritance Object UpdateManager Namespace : Saro.Gameplay.Common <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class UpdateManager Constructors UpdateManager(Int32) Declaration public UpdateManager(int frameRate = 60) Parameters Type Name Description Int32 frameRate Properties FrameRate Declaration public int FrameRate { get; set; } Property Value Type Description Int32 Methods AddFixedUpdateSystem(EcsSystems) Declaration public void AddFixedUpdateSystem(EcsSystems systems) Parameters Type Name Description EcsSystems systems AddUpdateSystem(EcsSystems) Declaration public void AddUpdateSystem(EcsSystems systems) Parameters Type Name Description EcsSystems systems Update(Single) Declaration public void Update(float deltaTime) Parameters Type Name Description Single deltaTime"
  },
  "api/Saro.Gameplay.Ability.AttributeBasedFloat.EAttributeCalculateType.html": {
    "href": "api/Saro.Gameplay.Ability.AttributeBasedFloat.EAttributeCalculateType.html",
    "title": "Enum AttributeBasedFloat.EAttributeCalculateType | MGF Gameplay | 0.1.0",
    "keywords": "Enum AttributeBasedFloat.EAttributeCalculateType Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EAttributeCalculateType Fields Name Description BaseValue CurrValue"
  },
  "api/Saro.Gameplay.Ability.NSObj_GoTo_EffectIsAlive.html": {
    "href": "api/Saro.Gameplay.Ability.NSObj_GoTo_EffectIsAlive.html",
    "title": "Class NSObj_GoTo_EffectIsAlive | MGF Gameplay | 0.1.0",
    "keywords": "Class NSObj_GoTo_EffectIsAlive Inheritance Object NotifyStateObj NSObj_GoTo_EffectIsAlive Inherited Members NotifyStateObj.mute NotifyStateObj.range NotifyStateObj.NotifyBegin_Internal(EcsEntity, MotionState) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class NSObj_GoTo_EffectIsAlive : NotifyStateObj Fields conditions Declaration public List<NS_GoTo.GoToCondition> conditions Field Value Type Description List < NS_GoTo.GoToCondition > gotoEnd Declaration public bool gotoEnd Field Value Type Description Boolean invert Declaration public bool invert Field Value Type Description Boolean Methods IReferenceClear() Declaration protected override void IReferenceClear() Overrides NotifyStateObj.IReferenceClear() NotifyEnd_Internal(EcsEntity, MotionState) Declaration protected override void NotifyEnd_Internal(EcsEntity source, MotionState motion) Parameters Type Name Description EcsEntity source MotionState motion Overrides NotifyStateObj.NotifyEnd_Internal(EcsEntity, MotionState) NotifyTick_Internal(EcsEntity, MotionState) Declaration protected override void NotifyTick_Internal(EcsEntity source, MotionState motion) Parameters Type Name Description EcsEntity source MotionState motion Overrides NotifyStateObj.NotifyTick_Internal(EcsEntity, MotionState)"
  },
  "api/Saro.Gameplay.Ability.AoEObj.html": {
    "href": "api/Saro.Gameplay.Ability.AoEObj.html",
    "title": "Struct AoEObj | MGF Gameplay | 0.1.0",
    "keywords": "Struct AoEObj Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct AoEObj : IEcsComponent, IEcsAutoReset<AoEObj> Fields caster Declaration public EcsEntity caster Field Value Type Description EcsEntity data Declaration public AoEData data Field Value Type Description AoEData entityInRange Declaration public List<EcsEntity> entityInRange Field Value Type Description List < EcsEntity > eventScript Declaration public IAoeEventScript eventScript Field Value Type Description IAoeEventScript level Declaration public int level Field Value Type Description Int32 period Declaration public float period Field Value Type Description Single special Declaration public IReadOnlyList<VarPair> special Field Value Type Description IReadOnlyList < VarPair > targetTypeObj Declaration public ITargetTypeObj_AoE targetTypeObj Field Value Type Description ITargetTypeObj_AoE Methods AutoReset(ref AoEObj) Declaration public void AutoReset(ref AoEObj c) Parameters Type Name Description AoEObj c CreateObj(EcsWorld, String, EcsEntity, Int32) Declaration public static EcsEntity CreateObj(EcsWorld world, string aoeId, EcsEntity caster = null, int level = 0) Parameters Type Name Description EcsWorld world String aoeId EcsEntity caster Int32 level Returns Type Description EcsEntity Extension Methods AoEUtility.Destroy(ref AoEObj, EcsEntity) AoEUtility.OnEntityEnter(ref AoEObj, EcsEntity, List<EcsEntity>) AoEUtility.OnEntityExit(ref AoEObj, EcsEntity, List<EcsEntity>)"
  },
  "api/Saro.SPhysics.BodyMask.html": {
    "href": "api/Saro.SPhysics.BodyMask.html",
    "title": "Struct BodyMask | MGF Gameplay | 0.1.0",
    "keywords": "Struct BodyMask Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct BodyMask : IEcsComponent Fields layer Declaration public int layer Field Value Type Description Int32 shapeTypeId Declaration [NonSerialized] public int shapeTypeId Field Value Type Description Int32"
  },
  "api/Saro.Gameplay.Quest.IQuestGiver.html": {
    "href": "api/Saro.Gameplay.Quest.IQuestGiver.html",
    "title": "Interface IQuestGiver | MGF Gameplay | 0.1.0",
    "keywords": "Interface IQuestGiver 任务派发者 Namespace : Saro.Gameplay.Quest <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IQuestGiver Properties QuestsToGive Declaration List<Quest> QuestsToGive { get; } Property Value Type Description List < Quest >"
  },
  "api/Saro.Gameplay.Quest.IQuestDataProvider.html": {
    "href": "api/Saro.Gameplay.Quest.IQuestDataProvider.html",
    "title": "Interface IQuestDataProvider | MGF Gameplay | 0.1.0",
    "keywords": "Interface IQuestDataProvider Namespace : Saro.Gameplay.Quest <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IQuestDataProvider Methods Load(Dictionary<Int32, Quest>) Declaration void Load(Dictionary<int, Quest> questMap) Parameters Type Name Description Dictionary < Int32 , Quest > questMap"
  },
  "api/Saro.Gameplay.Common.IScriptInstance.html": {
    "href": "api/Saro.Gameplay.Common.IScriptInstance.html",
    "title": "Class IScriptInstance | MGF Gameplay | 0.1.0",
    "keywords": "Class IScriptInstance Inheritance Object IScriptInstance IScriptInstance<T> Namespace : Saro.Gameplay.Common <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class IScriptInstance : IReference Fields Target Declaration public EcsEntity Target Field Value Type Description EcsEntity Properties ScriptAsset Declaration public IScriptAsset ScriptAsset { get; } Property Value Type Description IScriptAsset ScriptSystem Declaration public ScriptSystem ScriptSystem { get; } Property Value Type Description ScriptSystem Methods AwakeInternal() Declaration protected virtual void AwakeInternal() Destroy() Declaration public void Destroy() IReferenceClearInternal() Declaration protected virtual void IReferenceClearInternal() OnDestroyInternal() Declaration protected virtual void OnDestroyInternal() TickInternal() Declaration protected virtual void TickInternal()"
  },
  "api/Saro.Gameplay.Tag.GameplayTagsManager.html": {
    "href": "api/Saro.Gameplay.Tag.GameplayTagsManager.html",
    "title": "Class GameplayTagsManager | MGF Gameplay | 0.1.0",
    "keywords": "Class GameplayTagsManager Inheritance Object GameplayTagsManager Namespace : Saro.Gameplay.Tag <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class GameplayTagsManager Fields k_TagsAssetPath Declaration public const string k_TagsAssetPath = \"Assets/ResRaw/GameplayTagsAsset.json\" Field Value Type Description String Loader Declaration public static Func<string, List<GameplayTagAssetNode>> Loader Field Value Type Description Func < String , List < GameplayTagAssetNode >> s_InvalidChars Declaration public static readonly HashSet<char> s_InvalidChars Field Value Type Description HashSet < Char > Properties RootTag Declaration public GameplayTagNode RootTag { get; set; } Property Value Type Description GameplayTagNode Methods AllocTagNode(String, GameplayTagNode) Declaration public GameplayTagNode AllocTagNode(string tagName, GameplayTagNode parent = null) Parameters Type Name Description String tagName GameplayTagNode parent Returns Type Description GameplayTagNode AllocTagNode(String, Int32, GameplayTagNode) Declaration public GameplayTagNode AllocTagNode(string tagName, int tag, GameplayTagNode parent) Parameters Type Name Description String tagName Int32 tag GameplayTagNode parent Returns Type Description GameplayTagNode BuildTagTree(IList<GameplayTagAssetNode>) Declaration public void BuildTagTree(IList<GameplayTagAssetNode> tagNodes) Parameters Type Name Description IList < GameplayTagAssetNode > tagNodes Clear() Declaration public void Clear() Get() Declaration public static GameplayTagsManager Get() Returns Type Description GameplayTagsManager GetSingleTagContainer(Int32) Declaration public GameplayTagContainer GetSingleTagContainer(int tag) Parameters Type Name Description Int32 tag Returns Type Description GameplayTagContainer GetTagName(Int32) Declaration public string GetTagName(int tag) Parameters Type Name Description Int32 tag Returns Type Description String GetTagNode(Int32) Declaration public GameplayTagNode GetTagNode(int tag) Parameters Type Name Description Int32 tag Returns Type Description GameplayTagNode Hash(String) crc32 hash. 同 Declaration public static int Hash(string tagName) Parameters Type Name Description String tagName Returns Type Description Int32 LoadAndBuildTagTree(String) Declaration public void LoadAndBuildTagTree(string path) Parameters Type Name Description String path PrintGameplayTagTree() Declaration public void PrintGameplayTagTree() Reload() Declaration public void Reload() RequestAllLeafNodes() Declaration public List<GameplayTagNode> RequestAllLeafNodes() Returns Type Description List < GameplayTagNode > RequestGameplayTag(String) Declaration public GameplayTag RequestGameplayTag(string tagName) Parameters Type Name Description String tagName Returns Type Description GameplayTag RequestGameplayTagChildren(GameplayTag) Declaration public GameplayTagContainer RequestGameplayTagChildren(GameplayTag tag) Parameters Type Name Description GameplayTag tag Returns Type Description GameplayTagContainer A Tag Container with all its childen added explicitly RequestGameplayTagDirectParent(GameplayTag) Returns direct parent GameplayTag of this GameplayTag, calling on 'x.y.z' will return 'x.y', callingon on 'x' will return '' Declaration public GameplayTag RequestGameplayTagDirectParent(GameplayTag tag) Parameters Type Name Description GameplayTag tag Returns Type Description GameplayTag RequestGameplayTagParents(GameplayTag) Declaration public GameplayTagContainer RequestGameplayTagParents(GameplayTag tag) Parameters Type Name Description GameplayTag tag Returns Type Description GameplayTagContainer A Tag Container with the supplied tag and all its parents added explicitly RequestGameplayTagParents(GameplayTag, ref GameplayTagContainer) Declaration public void RequestGameplayTagParents(GameplayTag tag, ref GameplayTagContainer tagContainer) Parameters Type Name Description GameplayTag tag GameplayTagContainer tagContainer SaveTagsAsset(String, Boolean) [EditorOnly] 保存资源 Declaration [Conditional(\"UNITY_EDITOR\")] public void SaveTagsAsset(string path, bool buildTreeStructure = false) Parameters Type Name Description String path Boolean buildTreeStructure Exceptions Type Condition NullReferenceException"
  },
  "api/Saro.Gameplay.Ability.DataDrivenUtility.html": {
    "href": "api/Saro.Gameplay.Ability.DataDrivenUtility.html",
    "title": "Class DataDrivenUtility | MGF Gameplay | 0.1.0",
    "keywords": "Class DataDrivenUtility Inheritance Object DataDrivenUtility Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class DataDrivenUtility Methods HandleDataDrivenEvents(EventContainer, IGameplayEventSender, GameplayTag, GameplayEventArgs, Int32) Declaration public static void HandleDataDrivenEvents(EventContainer eventContainer, IGameplayEventSender sender, GameplayTag eventTag, GameplayEventArgs args, int level) Parameters Type Name Description EventContainer eventContainer IGameplayEventSender sender GameplayTag eventTag GameplayEventArgs args Int32 level HandleDataDrivenEvents(Dictionary<Int32, List<GAction>>, IGameplayEventSender, GameplayTag, GameplayEventArgs, Int32) Declaration public static void HandleDataDrivenEvents(Dictionary<int, List<GAction>> eventMap, IGameplayEventSender sender, GameplayTag eventTag, GameplayEventArgs args, int level) Parameters Type Name Description Dictionary < Int32 , List < GAction >> eventMap IGameplayEventSender sender GameplayTag eventTag GameplayEventArgs args Int32 level InvokeAction(GAction, IGameplayEventSender, GameplayEventArgs, Int32) Declaration public static void InvokeAction(GAction cfg, IGameplayEventSender sender, GameplayEventArgs args, int level) Parameters Type Name Description GAction cfg IGameplayEventSender sender GameplayEventArgs args Int32 level InvokeActions(List<GAction>, IGameplayEventSender, GameplayEventArgs, Int32) Declaration public static void InvokeActions(List<GAction> cfgs, IGameplayEventSender sender, GameplayEventArgs args, int level) Parameters Type Name Description List < GAction > cfgs IGameplayEventSender sender GameplayEventArgs args Int32 level"
  },
  "api/Saro.Gameplay.Tag.GameplayTagContainer.html": {
    "href": "api/Saro.Gameplay.Tag.GameplayTagContainer.html",
    "title": "Class GameplayTagContainer | MGF Gameplay | 0.1.0",
    "keywords": "Class GameplayTagContainer A Tag Container holds a collection of GameplayTags, tags are included explicitly by adding them, and implicitly from adding child tags Inheritance Object GameplayTagContainer Namespace : Saro.Gameplay.Tag <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class GameplayTagContainer : ISerializationCallbackReceiver, IEnumerable<GameplayTag>, IEnumerable Constructors GameplayTagContainer() Declaration public GameplayTagContainer() GameplayTagContainer(GameplayTagContainer) Declaration public GameplayTagContainer(GameplayTagContainer other) Parameters Type Name Description GameplayTagContainer other GameplayTagContainer(IList<GameplayTag>) Declaration public GameplayTagContainer(IList<GameplayTag> tagsToAdd) Parameters Type Name Description IList < GameplayTag > tagsToAdd Fields s_Empty Declaration public static readonly GameplayTagContainer s_Empty Field Value Type Description GameplayTagContainer Properties Count Declaration public int Count { get; } Property Value Type Description Int32 GameplayTags Declaration public List<GameplayTag> GameplayTags { get; } Property Value Type Description List < GameplayTag > Item[Int32] Access GameplayTags array quickliy Declaration public GameplayTag this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description GameplayTag ParentTags Array of expanded parent tags, in addition to GameplayTags. Used to accelerate parent searches. May contain duplicates in some cases Declaration public List<GameplayTag> ParentTags { get; } Property Value Type Description List < GameplayTag > Methods AddLeafTag(GameplayTag) Declaration public bool AddLeafTag(GameplayTag tagToAdd) Parameters Type Name Description GameplayTag tagToAdd Returns Type Description Boolean True if tag was added AddTag(GameplayTag) Declaration public void AddTag(GameplayTag tagToAdd) Parameters Type Name Description GameplayTag tagToAdd AddTagFast(GameplayTag) don't check duplicated version of AddTag(GameplayTag) Declaration public void AddTagFast(GameplayTag tagToAdd) Parameters Type Name Description GameplayTag tagToAdd AppendMatchingTags(GameplayTagContainer, GameplayTagContainer) Declaration public void AppendMatchingTags(GameplayTagContainer otherA, GameplayTagContainer otherB) Parameters Type Name Description GameplayTagContainer otherA GameplayTagContainer otherB AppendTags(GameplayTagContainer) Declaration public void AppendTags(GameplayTagContainer other) Parameters Type Name Description GameplayTagContainer other Clear() Declaration public void Clear() Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean FillParentTags() Meansure call this before call HasTagExact, etc. If serialized on Assets(Monobehaviour or ScriptableObject, etc.), DO NOT call this. otherwise, Manual Call this to fill Parent Nodes. Declaration public void FillParentTags() Filter(GameplayTagContainer) Declaration public GameplayTagContainer Filter(GameplayTagContainer tagContainer) Parameters Type Name Description GameplayTagContainer tagContainer Returns Type Description GameplayTagContainer FilterExact(GameplayTagContainer) Declaration public GameplayTagContainer FilterExact(GameplayTagContainer tagContainer) Parameters Type Name Description GameplayTagContainer tagContainer Returns Type Description GameplayTagContainer GetEnumerator() Declaration public GameplayTagContainer.Enumerator GetEnumerator() Returns Type Description GameplayTagContainer.Enumerator GetGameplayTagParents() Declaration public GameplayTagContainer GetGameplayTagParents() Returns Type Description GameplayTagContainer GetGameplayTagParents(ref GameplayTagContainer) Declaration public void GetGameplayTagParents(ref GameplayTagContainer tagContainer) Parameters Type Name Description GameplayTagContainer tagContainer GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 HasAll(GameplayTagContainer) Checks if this container contains ALL of the tags in the specified container, also checks against parent tags {\"A.1\",\"B.1\"}.HasAll({ \"A\",\"B\"}) will return True, {\"A\",\"B\"}.HasAll({ \"A.1\",\"B.1\"}) will return False If ContainerToCheck is empty/invalid it will always return True, because there were no failed checks Declaration public bool HasAll(GameplayTagContainer containerToCheck) Parameters Type Name Description GameplayTagContainer containerToCheck Returns Type Description Boolean HasAllExact(GameplayTagContainer) Checks if this container contains ALL of the tags in the specified container, only allowing exact matches {\"A.1\",\"B.1\"}.HasAllExact({ \"A\",\"B\"}) will return False If ContainerToCheck is empty/invalid it will always return True, because there were no failed checks Declaration public bool HasAllExact(GameplayTagContainer containerToCheck) Parameters Type Name Description GameplayTagContainer containerToCheck Returns Type Description Boolean HasAny(GameplayTagContainer) Checks if this container contains ANY of the tags in the specified container, also checks against parent tags {\"A.1\"}.HasAny({ \"A\",\"B\"}) will return True, {\"A\"}.HasAny({ \"A.1\",\"B\"}) will return False If ContainerToCheck is empty/invalid it will always return False Declaration public bool HasAny(GameplayTagContainer containerToCheck) Parameters Type Name Description GameplayTagContainer containerToCheck Returns Type Description Boolean HasAnyExact(GameplayTagContainer) Checks if this container contains ANY of the tags in the specified container, only allowing exact matches {\"A.1\"}.HasAnyExact({ \"A\",\"B\"}) will return False If ContainerToCheck is empty/invalid it will always return False Declaration public bool HasAnyExact(GameplayTagContainer containerToCheck) Parameters Type Name Description GameplayTagContainer containerToCheck Returns Type Description Boolean HasTag(GameplayTag) Determine if TagToCheck is present in this container, also checking against parent tags {\"A.1\"}.HasTag(\"A\") will return True, {\"A\"}.HasTag(\"A.1\") will return False If TagToCheck is not Valid it will always return False Declaration public bool HasTag(GameplayTag tagToCheck) Parameters Type Name Description GameplayTag tagToCheck Returns Type Description Boolean HasTagExact(GameplayTag) Determine if TagToCheck is explicitly present in this container, only allowing exact matches {\"A.1\"}.HasTagExact(\"A\") will return False If TagToCheck is not Valid it will always return False Declaration public bool HasTagExact(GameplayTag tagToCheck) Parameters Type Name Description GameplayTag tagToCheck Returns Type Description Boolean RemoveTag(GameplayTag, Boolean) Declaration public bool RemoveTag(GameplayTag tagToRemove, bool bDeferParentTags = false) Parameters Type Name Description GameplayTag tagToRemove Boolean bDeferParentTags Returns Type Description Boolean RemoveTags(GameplayTagContainer) Declaration public void RemoveTags(GameplayTagContainer tagsToRemove) Parameters Type Name Description GameplayTagContainer tagsToRemove SortByTagName() Declaration public void SortByTagName() ToString() Declaration public override string ToString() Returns Type Description String Operators Equality(GameplayTagContainer, GameplayTagContainer) Declaration public static bool operator ==(GameplayTagContainer lhs, GameplayTagContainer rhs) Parameters Type Name Description GameplayTagContainer lhs GameplayTagContainer rhs Returns Type Description Boolean Inequality(GameplayTagContainer, GameplayTagContainer) Declaration public static bool operator !=(GameplayTagContainer lhs, GameplayTagContainer rhs) Parameters Type Name Description GameplayTagContainer lhs GameplayTagContainer rhs Returns Type Description Boolean Explicit Interface Implementations IEnumerable<GameplayTag>.GetEnumerator() Declaration IEnumerator<GameplayTag> IEnumerable<GameplayTag>.GetEnumerator() Returns Type Description IEnumerator < GameplayTag > Implements IEnumerable<T>.GetEnumerator() IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements IEnumerable.GetEnumerator()"
  },
  "api/Saro.Gameplay.Ability.DefaultAttributeSet.html": {
    "href": "api/Saro.Gameplay.Ability.DefaultAttributeSet.html",
    "title": "Class DefaultAttributeSet | MGF Gameplay | 0.1.0",
    "keywords": "Class DefaultAttributeSet Inheritance Object GameplayAttributeSet DefaultAttributeSet Inherited Members GameplayAttributeSet.OnPostAttributeBaseChangeDelegate GameplayAttributeSet.OnPostAttributeChangeDelegate GameplayAttributeSet.m_AttributeArray GameplayAttributeSet.Capacity GameplayAttributeSet.Item[Int32] GameplayAttributeSet.ApplyModifier(Modifier, IModifierSource) GameplayAttributeSet.ApplyModifier(Int32, Single, Int32, IModifierSource) GameplayAttributeSet.ApplyModifier(Int32, Single, EModifierOp, IModifierSource) GameplayAttributeSet.RemoveModifiers(IModifierSource) GameplayAttributeSet.GetAttribute(Int32) GameplayAttributeSet.SetAttribute(Int32, GameplayAttribute) GameplayAttributeSet.PreAttributeChange(GameplayAttribute, Single) GameplayAttributeSet.PostAttributeBaseChange(GameplayAttribute) GameplayAttributeSet.PostAttributeChange(GameplayAttribute) GameplayAttributeSet.GetAttributeLabel(Int32) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DefaultAttributeSet : GameplayAttributeSet Properties Health Declaration public GameplayAttribute Health { get; set; } Property Value Type Description GameplayAttribute Item[DefaultAttributeSet.EAttribute] Declaration public GameplayAttribute this[DefaultAttributeSet.EAttribute key] { get; set; } Parameters Type Name Description DefaultAttributeSet.EAttribute key Property Value Type Description GameplayAttribute Methods IReferenceClearInternal() Declaration protected override void IReferenceClearInternal() Overrides GameplayAttributeSet.IReferenceClearInternal() PreAttributeBaseChange(GameplayAttribute, ref Single) Declaration public override void PreAttributeBaseChange(GameplayAttribute attribute, ref float newValue) Parameters Type Name Description GameplayAttribute attribute Single newValue Overrides GameplayAttributeSet.PreAttributeBaseChange(GameplayAttribute, ref Single) ToString() Declaration public override string ToString() Returns Type Description String Update(Single) Declaration public override void Update(float dt) Parameters Type Name Description Single dt Overrides GameplayAttributeSet.Update(Single) Extension Methods DefaultAttributeSetExtension.InitAttrituteFromAsset(DefaultAttributeSet) DefaultAttributeSetExtension.IsAlive(GameplayAttributeSet)"
  },
  "api/Saro.Gameplay.Ability.AttributeBasedFloat.html": {
    "href": "api/Saro.Gameplay.Ability.AttributeBasedFloat.html",
    "title": "Class AttributeBasedFloat | MGF Gameplay | 0.1.0",
    "keywords": "Class AttributeBasedFloat Inheritance Object AttributeBasedFloat Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class AttributeBasedFloat : IVarMagnitudeCalculation, IVarOwner Fields calculateType Declaration public AttributeBasedFloat.EAttributeCalculateType calculateType Field Value Type Description AttributeBasedFloat.EAttributeCalculateType coefficient Declaration public VarFloat coefficient Field Value Type Description VarFloat modifierId Declaration public int modifierId Field Value Type Description Int32 postMulAddValue Declaration public VarFloat postMulAddValue Field Value Type Description VarFloat preMulAddValue Declaration public VarFloat preMulAddValue Field Value Type Description VarFloat source Declaration public AttributeBasedFloat.EAttributeSource source Field Value Type Description AttributeBasedFloat.EAttributeSource Methods CalculateMagnitude(EffectObj, Int32) Declaration public float CalculateMagnitude(EffectObj effect, int level) Parameters Type Name Description EffectObj effect Int32 level Returns Type Description Single Implements IVarMagnitudeCalculation.CalculateMagnitude(EffectObj, Int32) Parse(IReadOnlyList<VarPair>) Declaration public void Parse(IReadOnlyList<VarPair> specials) Parameters Type Name Description IReadOnlyList < VarPair > specials Implements IVarOwner.Parse(IReadOnlyList<VarPair>)"
  },
  "api/Saro.Gameplay.Interact.GameCommandReceiver.html": {
    "href": "api/Saro.Gameplay.Interact.GameCommandReceiver.html",
    "title": "Class GameCommandReceiver | MGF Gameplay | 0.1.0",
    "keywords": "Class GameCommandReceiver Inheritance Object GameCommandReceiver Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class GameCommandReceiver : MonoBehaviour Methods Receive() Declaration public void Receive() Register(GameCommandHandler) Declaration public void Register(GameCommandHandler handler) Parameters Type Name Description GameCommandHandler handler Unregister(GameCommandHandler) Declaration public void Unregister(GameCommandHandler handler) Parameters Type Name Description GameCommandHandler handler"
  },
  "api/Saro.Gameplay.Ability.VarFloat.html": {
    "href": "api/Saro.Gameplay.Ability.VarFloat.html",
    "title": "Class VarFloat | MGF Gameplay | 0.1.0",
    "keywords": "Class VarFloat Inheritance Object Var Var < Single > VarFloat Inherited Members Var<Single>.Ref Var<Single>.values Var<Single>.Item[Int32] Var<Single>.Count Var<Single>.GetRawValue(Int32) Var<Single>.GetValue(Int32) Var<Single>.Parse(IReadOnlyList<VarPair>) Var<Single>.ParseError() Var<Single>.ToString() Var.txt Var.raw Var.AutoParse(Object, IReadOnlyList<VarPair>) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class VarFloat : Var<float>, IVarMagnitudeCalculation, IVarOwner Constructors VarFloat() Declaration public VarFloat() VarFloat(String) Declaration public VarFloat(string txt) Parameters Type Name Description String txt Methods CalculateMagnitude(EffectObj, Int32) Declaration public float CalculateMagnitude(EffectObj effect, int level) Parameters Type Name Description EffectObj effect Int32 level Returns Type Description Single Implements IVarMagnitudeCalculation.CalculateMagnitude(EffectObj, Int32) ParseValues() Declaration protected override void ParseValues() Overrides Saro.Gameplay.Ability.Var<System.Single>.ParseValues()"
  },
  "api/Saro.Gameplay.Ability.AbilityObj.html": {
    "href": "api/Saro.Gameplay.Ability.AbilityObj.html",
    "title": "Class AbilityObj | MGF Gameplay | 0.1.0",
    "keywords": "Class AbilityObj Inheritance Object AbilityObj Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class AbilityObj : IGameplayEventSender, IReference Fields caster Declaration public EcsEntity caster Field Value Type Description EcsEntity Properties Caster Declaration public EcsEntity Caster { get; } Property Value Type Description EcsEntity Implements IGameplayEventSender.Caster Data Declaration public Ability Data { get; } Property Value Type Description Ability Level Declaration public int Level { get; set; } Property Value Type Description Int32 Implements IGameplayEventSender.Level UserData Declaration public object UserData { get; set; } Property Value Type Description Object Methods ApplyCooldown() Declaration public void ApplyCooldown() ApplyCost() Declaration public void ApplyCost() ApplyPassiveEffects() Declaration public void ApplyPassiveEffects() Cast() Declaration public ObjectHandle<MotionState> Cast() Returns Type Description ObjectHandle < MotionState > ContainsAbility(String) Declaration public static bool ContainsAbility(string abilityId) Parameters Type Name Description String abilityId Returns Type Description Boolean CreateObj(Ability) Declaration public static AbilityObj CreateObj(Ability data) Parameters Type Name Description Ability data Returns Type Description AbilityObj CreateObj(String) Declaration public static AbilityObj CreateObj(string abilityId) Parameters Type Name Description String abilityId Returns Type Description AbilityObj Load(List<Ability>) Declaration public static void Load(List<Ability> list) Parameters Type Name Description List < Ability > list OnDestory() Declaration public void OnDestory() OnInit() Declaration public void OnInit() OnUpgrade() Declaration public void OnUpgrade() ReleaseObj(AbilityObj) Declaration public static void ReleaseObj(AbilityObj obj) Parameters Type Name Description AbilityObj obj RemovePassiveEffects() Declaration public void RemovePassiveEffects()"
  },
  "api/Saro.SPhysics.ContactTester_SphereBox.html": {
    "href": "api/Saro.SPhysics.ContactTester_SphereBox.html",
    "title": "Class ContactTester_SphereBox | MGF Gameplay | 0.1.0",
    "keywords": "Class ContactTester_SphereBox Inheritance Object ContactTesterBase < SphereShape , BoxShape > ContactTester_SphereBox Inherited Members ContactTesterBase<SphereShape, BoxShape>.Enable ContactTesterBase<SphereShape, BoxShape>.m_PossibleContactPool ContactTesterBase<SphereShape, BoxShape>.m_World ContactTesterBase<SphereShape, BoxShape>.m_TriggerPool ContactTesterBase<SphereShape, BoxShape>.TestPair(PossibleContact<SphereShape, BoxShape>) ContactTesterBase<SphereShape, BoxShape>.PostInit(EcsSystems) ContactTesterBase<SphereShape, BoxShape>.AddContact(PossibleContact<SphereShape, BoxShape>, Single, Vector3, Vector3) Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ContactTester_SphereBox : ContactTesterBase<SphereShape, BoxShape>, IEcsRunSystem Methods PostInit(EcsSystems) Declaration protected override void PostInit(EcsSystems systems) Parameters Type Name Description EcsSystems systems Overrides Saro.SPhysics.ContactTesterBase<Saro.SPhysics.SphereShape, Saro.SPhysics.BoxShape>.PostInit(EcsSystems) TestPair(PossibleContact<SphereShape, BoxShape>) Declaration protected override void TestPair(in PossibleContact<SphereShape, BoxShape> possibleContact) Parameters Type Name Description PossibleContact < SphereShape , BoxShape > possibleContact Overrides Saro.SPhysics.ContactTesterBase<Saro.SPhysics.SphereShape, Saro.SPhysics.BoxShape>.TestPair(Saro.SPhysics.PossibleContact<Saro.SPhysics.SphereShape, Saro.SPhysics.BoxShape>)"
  },
  "api/Saro.SPhysics.ContactTester_BoxBox.html": {
    "href": "api/Saro.SPhysics.ContactTester_BoxBox.html",
    "title": "Class ContactTester_BoxBox | MGF Gameplay | 0.1.0",
    "keywords": "Class ContactTester_BoxBox Inheritance Object ContactTesterBase < BoxShape , BoxShape > ContactTester_BoxBox Inherited Members ContactTesterBase<BoxShape, BoxShape>.Enable ContactTesterBase<BoxShape, BoxShape>.m_PossibleContactPool ContactTesterBase<BoxShape, BoxShape>.m_World ContactTesterBase<BoxShape, BoxShape>.m_TriggerPool ContactTesterBase<BoxShape, BoxShape>.TestPair(PossibleContact<BoxShape, BoxShape>) ContactTesterBase<BoxShape, BoxShape>.PostInit(EcsSystems) ContactTesterBase<BoxShape, BoxShape>.AddContact(PossibleContact<BoxShape, BoxShape>, Single, Vector3, Vector3) Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ContactTester_BoxBox : ContactTesterBase<BoxShape, BoxShape>, IEcsRunSystem Methods PostInit(EcsSystems) Declaration protected override void PostInit(EcsSystems systems) Parameters Type Name Description EcsSystems systems Overrides Saro.SPhysics.ContactTesterBase<Saro.SPhysics.BoxShape, Saro.SPhysics.BoxShape>.PostInit(EcsSystems) TestPair(PossibleContact<BoxShape, BoxShape>) Declaration protected override void TestPair(in PossibleContact<BoxShape, BoxShape> possibleContact) Parameters Type Name Description PossibleContact < BoxShape , BoxShape > possibleContact Overrides Saro.SPhysics.ContactTesterBase<Saro.SPhysics.BoxShape, Saro.SPhysics.BoxShape>.TestPair(Saro.SPhysics.PossibleContact<Saro.SPhysics.BoxShape, Saro.SPhysics.BoxShape>)"
  },
  "api/Saro.Gameplay.Waypoint.Editor.html": {
    "href": "api/Saro.Gameplay.Waypoint.Editor.html",
    "title": "Namespace Saro.Gameplay.Waypoint.Editor | MGF Gameplay | 0.1.0",
    "keywords": "Namespace Saro.Gameplay.Waypoint.Editor Classes BezierPathEditor"
  },
  "api/Saro.Gameplay.Interact.SimpleTransformer.ELoopType.html": {
    "href": "api/Saro.Gameplay.Interact.SimpleTransformer.ELoopType.html",
    "title": "Enum SimpleTransformer.ELoopType | MGF Gameplay | 0.1.0",
    "keywords": "Enum SimpleTransformer.ELoopType Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum ELoopType Fields Name Description Once PingPong Repeat"
  },
  "api/Saro.Gameplay.Interact.SimpleRotator.html": {
    "href": "api/Saro.Gameplay.Interact.SimpleRotator.html",
    "title": "Class SimpleRotator | MGF Gameplay | 0.1.0",
    "keywords": "Class SimpleRotator Inheritance Object GameCommandHandler SimpleTransformer SimpleRotator Inherited Members SimpleTransformer.loopType SimpleTransformer.duration SimpleTransformer.accelCurve SimpleTransformer.activate SimpleTransformer.OnStartCommand SimpleTransformer.OnStopCommand SimpleTransformer.previewPercent SimpleTransformer.PerformInteraction() GameCommandHandler.oneShot GameCommandHandler.coolDown GameCommandHandler.startDelay GameCommandHandler.m_IsTriggered GameCommandHandler.OnInteraction() GameCommandHandler.Awake() Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SimpleRotator : SimpleTransformer Fields axis Declaration public Vector3 axis Field Value Type Description Vector3 end Declaration public float end Field Value Type Description Single start Declaration public float start Field Value Type Description Single Methods PerformTransform(Single) Declaration public override void PerformTransform(float percent) Parameters Type Name Description Single percent Overrides SimpleTransformer.PerformTransform(Single)"
  },
  "api/Saro.Gameplay.Ability.VarPair.html": {
    "href": "api/Saro.Gameplay.Ability.VarPair.html",
    "title": "Class VarPair | MGF Gameplay | 0.1.0",
    "keywords": "Class VarPair Inheritance Object VarPair Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class VarPair Fields name Declaration public string name Field Value Type Description String value Declaration [SerializeReference] public Var value Field Value Type Description Var Methods GetValue<T>(Int32) Declaration public T GetValue<T>(int index = 0) Parameters Type Name Description Int32 index Returns Type Description T Type Parameters Name Description T"
  },
  "api/Saro.Gameplay.Ability.ProjectileFactory.html": {
    "href": "api/Saro.Gameplay.Ability.ProjectileFactory.html",
    "title": "Class ProjectileFactory | MGF Gameplay | 0.1.0",
    "keywords": "Class ProjectileFactory Inheritance Object ProjectileFactory Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class ProjectileFactory Methods Load(List<Projectile>) Declaration public static void Load(List<Projectile> list) Parameters Type Name Description List < Projectile > list TryGetProjectile(String, out Projectile) Declaration public static bool TryGetProjectile(string projectileId, out Projectile projectile) Parameters Type Name Description String projectileId Projectile projectile Returns Type Description Boolean"
  },
  "api/Saro.Gameplay.Ability.MotionClip.html": {
    "href": "api/Saro.Gameplay.Ability.MotionClip.html",
    "title": "Class MotionClip | MGF Gameplay | 0.1.0",
    "keywords": "Class MotionClip Inheritance Object MotionClip Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class MotionClip Fields frameLength 帧长度 Declaration public int frameLength Field Value Type Description Int32 frameRate 帧率 Declaration public int frameRate Field Value Type Description Int32 id Motion唯一id Declaration public string id Field Value Type Description String looped 循环 Declaration public bool looped Field Value Type Description Boolean notifies Declaration [SerializeReference] public List<NotifyState> notifies Field Value Type Description List < NotifyState > playbackSpeed 播放速度， PlaybackSpeed Declaration public float playbackSpeed Field Value Type Description Single"
  },
  "api/Saro.Gameplay.Ability.Attributes.html": {
    "href": "api/Saro.Gameplay.Ability.Attributes.html",
    "title": "Struct Attributes | MGF Gameplay | 0.1.0",
    "keywords": "Struct Attributes Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct Attributes : IEcsComponent, IEcsAutoReset<Attributes> Fields Create Declaration public static Attributes.CreateDelegate Create Field Value Type Description Attributes.CreateDelegate Reset Declaration public static Action<GameplayAttributeSet> Reset Field Value Type Description Action < GameplayAttributeSet > set Declaration public GameplayAttributeSet set Field Value Type Description GameplayAttributeSet Methods AutoReset(ref Attributes) Declaration public void AutoReset(ref Attributes c) Parameters Type Name Description Attributes c"
  },
  "api/Saro.Gameplay.Ability.AbilityProfiler.html": {
    "href": "api/Saro.Gameplay.Ability.AbilityProfiler.html",
    "title": "Class AbilityProfiler | MGF Gameplay | 0.1.0",
    "keywords": "Class AbilityProfiler Inheritance Object AbilityProfiler Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class AbilityProfiler Fields k_ABILITY_PROFILER Declaration public const string k_ABILITY_PROFILER = \"PROFILER_ABILITY\" Field Value Type Description String Methods BeginSample(String) Declaration [Conditional(\"PROFILER_ABILITY\")] public static void BeginSample(string name) Parameters Type Name Description String name EndSample() Declaration [Conditional(\"PROFILER_ABILITY\")] public static void EndSample()"
  },
  "api/Saro.Gameplay.Ability.EModifierOp.html": {
    "href": "api/Saro.Gameplay.Ability.EModifierOp.html",
    "title": "Enum EModifierOp | MGF Gameplay | 0.1.0",
    "keywords": "Enum EModifierOp Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EModifierOp : byte Fields Name Description FlatAdd Override PercentAdd PercentMul"
  },
  "api/Saro.Gameplay.Ability.CustomMovement.html": {
    "href": "api/Saro.Gameplay.Ability.CustomMovement.html",
    "title": "Delegate CustomMovement | MGF Gameplay | 0.1.0",
    "keywords": "Delegate CustomMovement 自定义移动脚本 Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public delegate float3 CustomMovement(EcsEntity entity); Parameters Type Name Description EcsEntity entity Returns Type Description float3 velocity"
  },
  "api/Saro.Gameplay.Tag.ETagEventType.html": {
    "href": "api/Saro.Gameplay.Tag.ETagEventType.html",
    "title": "Enum ETagEventType | MGF Gameplay | 0.1.0",
    "keywords": "Enum ETagEventType Namespace : Saro.Gameplay.Tag <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum ETagEventType Fields Name Description AnyCountChange NewOrRemoved"
  },
  "api/Saro.Gameplay.Ability.AoEFactory.html": {
    "href": "api/Saro.Gameplay.Ability.AoEFactory.html",
    "title": "Class AoEFactory | MGF Gameplay | 0.1.0",
    "keywords": "Class AoEFactory Inheritance Object AoEFactory Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class AoEFactory Methods Load(List<AoE>) Declaration public static void Load(List<AoE> list) Parameters Type Name Description List < AoE > list TryGetAoe(String, out AoE) Declaration public static bool TryGetAoe(string aoeId, out AoE aoe) Parameters Type Name Description String aoeId AoE aoe Returns Type Description Boolean"
  },
  "api/Saro.SPhysics.IShape.html": {
    "href": "api/Saro.SPhysics.IShape.html",
    "title": "Interface IShape | MGF Gameplay | 0.1.0",
    "keywords": "Interface IShape Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IShape : IEcsComponent Methods AddBoxShape(EcsEntity, float3, float3, Int32) Declaration void AddBoxShape(EcsEntity entity, in float3 center, in float3 size, int layer) Parameters Type Name Description EcsEntity entity float3 center float3 size Int32 layer AddMask(EcsEntity, Int32, Int32) Declaration void AddMask(EcsEntity entity, int typeId, int layer) Parameters Type Name Description EcsEntity entity Int32 typeId Int32 layer AddSphereShape(EcsEntity, float3, Single, Int32) Declaration void AddSphereShape(EcsEntity entity, in float3 center, float radius, int layer) Parameters Type Name Description EcsEntity entity float3 center Single radius Int32 layer TypeId() Declaration int TypeId() Returns Type Description Int32"
  },
  "api/Saro.Gameplay.Ability.IScript.html": {
    "href": "api/Saro.Gameplay.Ability.IScript.html",
    "title": "Interface IScript | MGF Gameplay | 0.1.0",
    "keywords": "Interface IScript Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IScript"
  },
  "api/Saro.Gameplay.Ability.GameplaySenderWrapper.html": {
    "href": "api/Saro.Gameplay.Ability.GameplaySenderWrapper.html",
    "title": "Class GameplaySenderWrapper | MGF Gameplay | 0.1.0",
    "keywords": "Class GameplaySenderWrapper Inheritance Object GameplaySenderWrapper AoESender ProjectileSender Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class GameplaySenderWrapper : IReference, IGameplayEventSender Fields sender Declaration public EcsEntity sender Field Value Type Description EcsEntity Properties Caster Declaration public abstract EcsEntity Caster { get; } Property Value Type Description EcsEntity Implements IGameplayEventSender.Caster Level Declaration public abstract int Level { get; } Property Value Type Description Int32 Implements IGameplayEventSender.Level Methods CreateObj<T>(EcsEntity) Declaration public static GameplaySenderWrapper CreateObj<T>(EcsEntity sender) where T : GameplaySenderWrapper, new() Parameters Type Name Description EcsEntity sender Returns Type Description GameplaySenderWrapper Type Parameters Name Description T ReleaseObj(GameplaySenderWrapper) Declaration public static void ReleaseObj(GameplaySenderWrapper obj) Parameters Type Name Description GameplaySenderWrapper obj"
  },
  "api/Saro.Gameplay.Ability.IEffectEventScript.html": {
    "href": "api/Saro.Gameplay.Ability.IEffectEventScript.html",
    "title": "Interface IEffectEventScript | MGF Gameplay | 0.1.0",
    "keywords": "Interface IEffectEventScript Effect脚本 原则上，此脚本不储存上下文信息，上下文信息保存在effect里 TODO 看看这么设计是否合适? Inherited Members IEventScript<EffectObj>.EventMap IEventScript<EffectObj>.Invoke(GameplayTag, EffectObj, GameplayEventArgs) IEventScript<EffectObj>.ContainsEvent(GameplayTag) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IEffectEventScript : IEventScript<EffectObj>, IScript"
  },
  "api/Saro.Gameplay.Ability.FrameRange.html": {
    "href": "api/Saro.Gameplay.Ability.FrameRange.html",
    "title": "Struct FrameRange | MGF Gameplay | 0.1.0",
    "keywords": "Struct FrameRange Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct FrameRange : IEquatable<FrameRange> Constructors FrameRange(Int32, Int32) Declaration public FrameRange(int start, int end) Parameters Type Name Description Int32 start Int32 end Fields end Declaration public int end Field Value Type Description Int32 start Declaration public int start Field Value Type Description Int32 Properties Length Declaration public int Length { get; set; } Property Value Type Description Int32 Methods Contains(Int32) [start, end) Declaration public bool Contains(int frame) Parameters Type Name Description Int32 frame Returns Type Description Boolean Equals(FrameRange) Declaration public bool Equals(FrameRange other) Parameters Type Name Description FrameRange other Returns Type Description Boolean Implements IEquatable<T>.Equals(T) Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() IsSingle() Declaration public bool IsSingle() Returns Type Description Boolean ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Addition(FrameRange, FrameRange) Declaration public static FrameRange operator +(FrameRange lhs, FrameRange rhs) Parameters Type Name Description FrameRange lhs FrameRange rhs Returns Type Description FrameRange Equality(FrameRange, FrameRange) Declaration public static bool operator ==(FrameRange lhs, FrameRange rhs) Parameters Type Name Description FrameRange lhs FrameRange rhs Returns Type Description Boolean Inequality(FrameRange, FrameRange) Declaration public static bool operator !=(FrameRange lhs, FrameRange rhs) Parameters Type Name Description FrameRange lhs FrameRange rhs Returns Type Description Boolean Subtraction(FrameRange, FrameRange) Declaration public static FrameRange operator -(FrameRange lhs, FrameRange rhs) Parameters Type Name Description FrameRange lhs FrameRange rhs Returns Type Description FrameRange"
  },
  "api/Saro.SPhysics.DynamicTree-1.html": {
    "href": "api/Saro.SPhysics.DynamicTree-1.html",
    "title": "Class DynamicTree<T> | MGF Gameplay | 0.1.0",
    "keywords": "Class DynamicTree<T> A dynamic tree arranges data in a binary tree to accelerate queries such as volume queries and ray casts. Leafs are proxies with an AABB. In the tree we expand the proxy AABB by Settings.b2_fatAABBFactor so that the proxy AABB is bigger than the client object. This allows the client object to move by small amounts without triggering a tree update. Nodes are pooled and relocatable, so we use node indices rather than pointers. Inheritance Object DynamicTree<T> Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class DynamicTree<T> Type Parameters Name Description T Constructors DynamicTree() Declaration public DynamicTree() DynamicTree(Single) Constructing the tree initializes the node pool. Declaration public DynamicTree(float rndExtension) Parameters Type Name Description Single rndExtension Properties Nodes Declaration public DynamicTreeNode<T>[] Nodes { get; } Property Value Type Description DynamicTreeNode <T>[] Root Declaration public int Root { get; } Property Value Type Description Int32 Methods AddProxy(Aabb, T) Create a proxy in the tree as a leaf node. We return the index of the node instead of a pointer so that we can grow the node pool. /// Declaration public int AddProxy(in Aabb aabb, T userData) Parameters Type Name Description Aabb aabb The aabb. T userData The user data. Returns Type Description Int32 Index of the created proxy ComputeHeight() Compute the height of the binary tree in O(N) time. Should not be called often. Declaration public int ComputeHeight() Returns Type Description Int32 GetFatAABB(Int32) Get the fat AABB for a proxy. Declaration public Aabb GetFatAABB(int proxyId) Parameters Type Name Description Int32 proxyId The proxy id. Returns Type Description Aabb GetUserData(Int32) Get proxy user data. Declaration public T GetUserData(int proxyId) Parameters Type Name Description Int32 proxyId The proxy id. Returns Type Description T the proxy user data or 0 if the id is invalid. MoveProxy(Int32, Aabb) Declaration public bool MoveProxy(int proxyId, in Aabb aabb) Parameters Type Name Description Int32 proxyId Aabb aabb Returns Type Description Boolean MoveProxy(Int32, Aabb, float3) Move a proxy with a swepted AABB. If the proxy has moved outside of its fattened AABB, then the proxy is removed from the tree and re-inserted. Otherwise the function returns immediately. Declaration public bool MoveProxy(int proxyId, in Aabb aabb, float3 displacement) Parameters Type Name Description Int32 proxyId The proxy id. Aabb aabb The aabb. float3 displacement The displacement. Returns Type Description Boolean true if the proxy was re-inserted. Query(float3, float3, List<Int32>) Declaration public void Query(float3 p1, float3 p2, List<int> collisions) Parameters Type Name Description float3 p1 float3 p2 List < Int32 > collisions Query(List<Int32>, ref Aabb) Query an AABB for overlapping proxies. The callback class is called for each proxy that overlaps the supplied AABB. Declaration public void Query(List<int> my, ref Aabb aabb) Parameters Type Name Description List < Int32 > my Aabb aabb The aabb. Query(List<Int32>, List<Int32>, DynamicTree<T>) Declaration public void Query(List<int> other, List<int> my, DynamicTree<T> tree) Parameters Type Name Description List < Int32 > other List < Int32 > my DynamicTree <T> tree RemoveProxy(Int32) Destroy a proxy. This asserts if the id is invalid. Declaration public void RemoveProxy(int proxyId) Parameters Type Name Description Int32 proxyId The proxy id."
  },
  "api/Saro.Gameplay.Tag.GameplayTagDrawer.html": {
    "href": "api/Saro.Gameplay.Tag.GameplayTagDrawer.html",
    "title": "Class GameplayTagDrawer | MGF Gameplay | 0.1.0",
    "keywords": "Class GameplayTagDrawer Inheritance Object GameplayTagDrawer Namespace : Saro.Gameplay.Tag <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class GameplayTagDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Saro.Gameplay.Ability.IAoeEventScript.html": {
    "href": "api/Saro.Gameplay.Ability.IAoeEventScript.html",
    "title": "Interface IAoeEventScript | MGF Gameplay | 0.1.0",
    "keywords": "Interface IAoeEventScript Inherited Members IEventScript<EcsEntity>.EventMap IEventScript<EcsEntity>.Invoke(GameplayTag, EcsEntity, GameplayEventArgs) IEventScript<EcsEntity>.ContainsEvent(GameplayTag) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IAoeEventScript : IEventScript<EcsEntity>, IScript Properties CustomMovement Declaration CustomMovement CustomMovement { get; } Property Value Type Description CustomMovement"
  },
  "api/Saro.Gameplay.Common.IUnityView.html": {
    "href": "api/Saro.Gameplay.Common.IUnityView.html",
    "title": "Class IUnityView | MGF Gameplay | 0.1.0",
    "keywords": "Class IUnityView Inheritance Object IUnityView Namespace : Saro.Gameplay.Common <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class IUnityView : MonoBehaviour Properties Animator Declaration public virtual Animator Animator { get; protected set; } Property Value Type Description Animator Methods InitView(Int32, EcsWorld) Declaration public virtual void InitView(int entity, EcsWorld world) Parameters Type Name Description Int32 entity EcsWorld world UpdateView(Int32, EcsWorld) Declaration public abstract void UpdateView(int entity, EcsWorld world) Parameters Type Name Description Int32 entity EcsWorld world"
  },
  "api/Saro.Gameplay.Ability.AbilityLog.html": {
    "href": "api/Saro.Gameplay.Ability.AbilityLog.html",
    "title": "Class AbilityLog | MGF Gameplay | 0.1.0",
    "keywords": "Class AbilityLog Inheritance Object AbilityLog Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class AbilityLog Fields k_ABILITY_LOG Declaration public const string k_ABILITY_LOG = \"LOG_ABILITY\" Field Value Type Description String Methods ERROR(Exception) Declaration public static void ERROR(Exception e) Parameters Type Name Description Exception e ERROR(String) Declaration public static void ERROR(string msg) Parameters Type Name Description String msg INFO(String) Declaration [Conditional(\"LOG_ABILITY\")] public static void INFO(string msg) Parameters Type Name Description String msg"
  },
  "api/Saro.Gameplay.Ability.VarBool.html": {
    "href": "api/Saro.Gameplay.Ability.VarBool.html",
    "title": "Class VarBool | MGF Gameplay | 0.1.0",
    "keywords": "Class VarBool Inheritance Object Var Var < Boolean > VarBool Inherited Members Var<Boolean>.Ref Var<Boolean>.values Var<Boolean>.Item[Int32] Var<Boolean>.Count Var<Boolean>.GetRawValue(Int32) Var<Boolean>.GetValue(Int32) Var<Boolean>.Parse(IReadOnlyList<VarPair>) Var<Boolean>.ParseError() Var<Boolean>.ToString() Var.txt Var.raw Var.AutoParse(Object, IReadOnlyList<VarPair>) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class VarBool : Var<bool> Constructors VarBool() Declaration public VarBool() VarBool(String) Declaration public VarBool(string txt) Parameters Type Name Description String txt Methods ParseValues() Declaration protected override void ParseValues() Overrides Saro.Gameplay.Ability.Var<System.Boolean>.ParseValues()"
  },
  "api/Saro.Gameplay.Ability.Var.html": {
    "href": "api/Saro.Gameplay.Ability.Var.html",
    "title": "Class Var | MGF Gameplay | 0.1.0",
    "keywords": "Class Var Inheritance Object Var Var<T> Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public abstract class Var Fields raw Declaration public object raw Field Value Type Description Object txt Declaration public string txt Field Value Type Description String Methods AutoParse(Object, IReadOnlyList<VarPair>) Declaration public static void AutoParse(object instance, IReadOnlyList<VarPair> specials) Parameters Type Name Description Object instance IReadOnlyList < VarPair > specials GetRawValue(Int32) Declaration public abstract object GetRawValue(int index) Parameters Type Name Description Int32 index Returns Type Description Object Parse(IReadOnlyList<VarPair>) Declaration public abstract void Parse(IReadOnlyList<VarPair> specials) Parameters Type Name Description IReadOnlyList < VarPair > specials"
  },
  "api/Saro.Gameplay.Ability.IVarMagnitudeCalculation.html": {
    "href": "api/Saro.Gameplay.Ability.IVarMagnitudeCalculation.html",
    "title": "Interface IVarMagnitudeCalculation | MGF Gameplay | 0.1.0",
    "keywords": "Interface IVarMagnitudeCalculation Inherited Members IVarOwner.Parse(IReadOnlyList<VarPair>) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IVarMagnitudeCalculation : IVarOwner Methods CalculateMagnitude(EffectObj, Int32) Declaration float CalculateMagnitude(EffectObj effect, int level) Parameters Type Name Description EffectObj effect Int32 level Returns Type Description Single"
  },
  "api/Saro.SPhysics.ContactTesterReference.html": {
    "href": "api/Saro.SPhysics.ContactTesterReference.html",
    "title": "Class ContactTesterReference | MGF Gameplay | 0.1.0",
    "keywords": "Class ContactTesterReference Inheritance Object ContactTesterReference ContactTesterReference<ShapeA, ShapeB> Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class ContactTesterReference Methods AddTask(Int32, Int32, BodyMask, BodyMask) Declaration public abstract void AddTask(int bodyA, int bodyB, in BodyMask maskA, in BodyMask maskB) Parameters Type Name Description Int32 bodyA Int32 bodyB BodyMask maskA BodyMask maskB"
  },
  "api/Saro.Gameplay.Tag.GameplayTagCountContainer.html": {
    "href": "api/Saro.Gameplay.Tag.GameplayTagCountContainer.html",
    "title": "Class GameplayTagCountContainer | MGF Gameplay | 0.1.0",
    "keywords": "Class GameplayTagCountContainer Inheritance Object GameplayTagCountContainer Namespace : Saro.Gameplay.Tag <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class GameplayTagCountContainer Constructors GameplayTagCountContainer() Declaration public GameplayTagCountContainer() Properties ExplicitTags Simple accessor to the explicit gameplay tag list Declaration public GameplayTagContainer ExplicitTags { get; } Property Value Type Description GameplayTagContainer Methods Clear() Declaration public void Clear() FillParentTags() Declaration public void FillParentTags() GetDetailInfo() Declaration public string GetDetailInfo() Returns Type Description String GetTagCount(GameplayTag) return the count for a specified tag Declaration public int GetTagCount(GameplayTag tag) Parameters Type Name Description GameplayTag tag Tag to update Returns Type Description Int32 the count of the passed in tag Notify_StackCountChange(GameplayTag) Broadcasts the AnyChange event for this tag. This is called when the stack count of the backing gameplay effect change. It is up to the receiver of the broadcasted delegate to decide what to do with this. Declaration public void Notify_StackCountChange(GameplayTag tag) Parameters Type Name Description GameplayTag tag RegisterGameplayTagEvent(GameplayTag, ETagEventType, OnGameplayTagCountChanged) Return delegate that can be bound to for when the specific tag's count changes to or off of zero Declaration public void RegisterGameplayTagEvent(GameplayTag tag, ETagEventType eventType, OnGameplayTagCountChanged callback) Parameters Type Name Description GameplayTag tag ETagEventType eventType OnGameplayTagCountChanged callback RegisterGameplayTagEvent(String, ETagEventType, OnGameplayTagCountChanged) Return delegate that can be bound to for when the specific tag's count changes to or off of zero Declaration public void RegisterGameplayTagEvent(string tagName, ETagEventType eventType, OnGameplayTagCountChanged onTagCountChanged) Parameters Type Name Description String tagName ETagEventType eventType OnGameplayTagCountChanged onTagCountChanged RegisterGenericGameplayEvent(OnGameplayTagCountChanged) Return delegate that can be bound to for when the any tag's count changes to or off of zero Declaration public void RegisterGenericGameplayEvent(OnGameplayTagCountChanged callback) Parameters Type Name Description OnGameplayTagCountChanged callback SetTagCount(GameplayTag, Int32) Set the specified tag count to a specific value Declaration public bool SetTagCount(GameplayTag tag, int newCount) Parameters Type Name Description GameplayTag tag Tag to update Int32 newCount New count of the tag Returns Type Description Boolean True if tag was either added or removed. (E.g., we had the tag and now dont.or didnt have the tag and now we do. We didn't just change the count (1 count -> 2 count would return false). ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() UpdateTagCount(GameplayTag, Int32) Update the specified tag by the specified delta, potentially causing an additional or removal from the explicit tag list Declaration public bool UpdateTagCount(GameplayTag tag, int countDelta) Parameters Type Name Description GameplayTag tag Tag to update Int32 countDelta Delta of the tag count to apply Returns Type Description Boolean True if tag was either added or removed. (E.g., we had the tag and now dont.or didnt have the tag and now we do. We didn't just change the count (1 count -> 2 count would return false). UpdateTagCount(GameplayTagContainer, Int32) Update the specified container of tags by the specified delta, potentially causing an additional or removal from the explicit tag list Declaration public void UpdateTagCount(GameplayTagContainer container, int countDelta) Parameters Type Name Description GameplayTagContainer container Container of tags to update Int32 countDelta Delta of the tag count to apply UpdateTagCountWithUpdatedTagEvent(GameplayTagContainer, Int32) difference between UpdateTagCount(GameplayTagContainer, Int32) , only is raise UpdatedTag event Declaration public void UpdateTagCountWithUpdatedTagEvent(GameplayTagContainer container, int countDelta) Parameters Type Name Description GameplayTagContainer container Int32 countDelta"
  },
  "api/Saro.Gameplay.Ability.GameplyEventHandler-1.html": {
    "href": "api/Saro.Gameplay.Ability.GameplyEventHandler-1.html",
    "title": "Delegate GameplyEventHandler<TSender> | MGF Gameplay | 0.1.0",
    "keywords": "Delegate GameplyEventHandler<TSender> 游戏性事件委托 Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public delegate void GameplyEventHandler<TSender>(TSender sender, GameplayEventArgs args); Parameters Type Name Description TSender sender GameplayEventArgs args Type Parameters Name Description TSender"
  },
  "api/Saro.Gameplay.Ability.AoESender.html": {
    "href": "api/Saro.Gameplay.Ability.AoESender.html",
    "title": "Class AoESender | MGF Gameplay | 0.1.0",
    "keywords": "Class AoESender Inheritance Object GameplaySenderWrapper AoESender Inherited Members GameplaySenderWrapper.sender GameplaySenderWrapper.CreateObj<T>(EcsEntity) GameplaySenderWrapper.ReleaseObj(GameplaySenderWrapper) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class AoESender : GameplaySenderWrapper, IGameplayEventSender Properties Caster Declaration public override EcsEntity Caster { get; } Property Value Type Description EcsEntity Overrides GameplaySenderWrapper.Caster Level Declaration public override int Level { get; } Property Value Type Description Int32 Overrides GameplaySenderWrapper.Level"
  },
  "api/Saro.Gameplay.Ability.AoEData.html": {
    "href": "api/Saro.Gameplay.Ability.AoEData.html",
    "title": "Struct AoEData | MGF Gameplay | 0.1.0",
    "keywords": "Struct AoEData Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct AoEData Fields duration Declaration public float duration Field Value Type Description Single eventContainer Declaration public EventContainer eventContainer Field Value Type Description EventContainer id Declaration public string id Field Value Type Description String period Declaration public float period Field Value Type Description Single prefab Declaration public string prefab Field Value Type Description String tags Declaration public GameplayTagContainer tags Field Value Type Description GameplayTagContainer"
  },
  "api/Saro.SPhysics.BroadPhase_SAP.html": {
    "href": "api/Saro.SPhysics.BroadPhase_SAP.html",
    "title": "Class BroadPhase_SAP | MGF Gameplay | 0.1.0",
    "keywords": "Class BroadPhase_SAP Inheritance Object BroadPhaseBase BroadPhase_SAP Inherited Members BroadPhaseBase.Enable BroadPhaseBase.m_PhysicsData BroadPhaseBase.m_Bodies BroadPhaseBase.m_World BroadPhaseBase.m_BodyMaskPool BroadPhaseBase.m_AabbPool BroadPhaseBase.m_ShapeSpherePool BroadPhaseBase.Init(EcsSystems) BroadPhaseBase.AddTestTask(Int32, Int32, BodyMask, BodyMask) BroadPhaseBase.AddToBroadPhase(Int32, Aabb) Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BroadPhase_SAP : BroadPhaseBase, IEcsRunSystem Methods FilterPossibleBodies(EcsSystems) Declaration protected override void FilterPossibleBodies(EcsSystems systems) Parameters Type Name Description EcsSystems systems Overrides BroadPhaseBase.FilterPossibleBodies(EcsSystems) OverlapBox(Vector3, Vector3, Quaternion, Int32, IList<Int32>) Declaration public int OverlapBox(in Vector3 center, in Vector3 halfExtents, in Quaternion quaternion, int layerMask, IList<int> entities) Parameters Type Name Description Vector3 center Vector3 halfExtents Quaternion quaternion Int32 layerMask IList < Int32 > entities Returns Type Description Int32 OverlapSphere(Vector3, Single, Int32, List<Int32>) Declaration public void OverlapSphere(in Vector3 position, float radius, int layerMask, List<int> entities) Parameters Type Name Description Vector3 position Single radius Int32 layerMask List < Int32 > entities Raycast(Vector3, Vector3, Int32, ref Hit) Declaration public override bool Raycast(in Vector3 start, in Vector3 end, int layerMask, ref Hit hit) Parameters Type Name Description Vector3 start Vector3 end Int32 layerMask Hit hit Returns Type Description Boolean Overrides BroadPhaseBase.Raycast(Vector3, Vector3, Int32, ref Hit)"
  },
  "api/Saro.Gameplay.Ability.ProjectileUtility.html": {
    "href": "api/Saro.Gameplay.Ability.ProjectileUtility.html",
    "title": "Class ProjectileUtility | MGF Gameplay | 0.1.0",
    "keywords": "Class ProjectileUtility Inheritance Object ProjectileUtility Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class ProjectileUtility Fields s_CustomMovement_Default Declaration public static CustomMovement s_CustomMovement_Default Field Value Type Description CustomMovement Methods Destroy(ref ProjectileObj, EcsEntity) Declaration public static void Destroy(this ref ProjectileObj cProjectile, EcsEntity eProjectile) Parameters Type Name Description ProjectileObj cProjectile EcsEntity eProjectile OnHit(ref ProjectileObj, EcsEntity, EcsEntity, Vector3) 子弹击中目标时，调用 Declaration public static void OnHit(this ref ProjectileObj cProjectile, EcsEntity eProjectile, EcsEntity eTarget, Vector3 hitPoint) Parameters Type Name Description ProjectileObj cProjectile EcsEntity eProjectile EcsEntity eTarget Vector3 hitPoint"
  },
  "api/Saro.Gameplay.Ability.NotifyStateObj.html": {
    "href": "api/Saro.Gameplay.Ability.NotifyStateObj.html",
    "title": "Class NotifyStateObj | MGF Gameplay | 0.1.0",
    "keywords": "Class NotifyStateObj Inheritance Object NotifyStateObj NSObj_GoTo_EffectIsAlive NSObj_RootMotion Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class NotifyStateObj : IReference Fields mute Declaration public bool mute Field Value Type Description Boolean range Declaration public FrameRange range Field Value Type Description FrameRange Methods IReferenceClear() Declaration protected virtual void IReferenceClear() NotifyBegin_Internal(EcsEntity, MotionState) Declaration protected virtual void NotifyBegin_Internal(EcsEntity source, MotionState motion) Parameters Type Name Description EcsEntity source MotionState motion NotifyEnd_Internal(EcsEntity, MotionState) Declaration protected virtual void NotifyEnd_Internal(EcsEntity source, MotionState motion) Parameters Type Name Description EcsEntity source MotionState motion NotifyTick_Internal(EcsEntity, MotionState) Declaration protected virtual void NotifyTick_Internal(EcsEntity source, MotionState motion) Parameters Type Name Description EcsEntity source MotionState motion"
  },
  "api/Saro.SPhysics.PhysicsDebugSystem.PhysicsDebugData.html": {
    "href": "api/Saro.SPhysics.PhysicsDebugSystem.PhysicsDebugData.html",
    "title": "Struct PhysicsDebugSystem.PhysicsDebugData | MGF Gameplay | 0.1.0",
    "keywords": "Struct PhysicsDebugSystem.PhysicsDebugData Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct PhysicsDebugData : IEcsComponentSingleton Fields boundingBoxColor Declaration public Color boundingBoxColor Field Value Type Description Color drawBoundingBox Declaration public bool drawBoundingBox Field Value Type Description Boolean drawMode Declaration public EGLDebug drawMode Field Value Type Description EGLDebug drawShape Declaration public bool drawShape Field Value Type Description Boolean drawTrigger Declaration public bool drawTrigger Field Value Type Description Boolean normalColor1 Declaration public Color normalColor1 Field Value Type Description Color normalColor2 Declaration public Color normalColor2 Field Value Type Description Color shapeColor Declaration public Color shapeColor Field Value Type Description Color triggerColor Declaration public Color triggerColor Field Value Type Description Color"
  },
  "api/Saro.SPhysics.html": {
    "href": "api/Saro.SPhysics.html",
    "title": "Namespace Saro.SPhysics | MGF Gameplay | 0.1.0",
    "keywords": "Namespace Saro.SPhysics Classes BroadPhase_Brute BroadPhase_DynamicTree BroadPhase_SAP BroadPhaseBase CollisionTester ContactTester_BoxBox ContactTester_SphereBox ContactTester_SphereSphere ContactTesterBase<ShapeA, ShapeB> ContactTesterReference ContactTesterReference<ShapeA, ShapeB> DelTriggerSystem DynamicTree<T> A dynamic tree arranges data in a binary tree to accelerate queries such as volume queries and ray casts. Leafs are proxies with an AABB. In the tree we expand the proxy AABB by Settings.b2_fatAABBFactor so that the proxy AABB is bigger than the client object. This allows the client object to move by small amounts without triggering a tree update. Nodes are pooled and relocatable, so we use node indices rather than pointers. LayerCollisionMatrix OverlapTester PhysicsData PhysicsDebugSystem PhysicsFeature 处理物理触发器 最好在逻辑帧首执行 PhysicsWorldNames QueryTester RaycastSphereTester RaycastTester<Shape> TriggerSystemBase 处理碰撞事件，需继承此脚本，需要放在 PhysicsFeature 后面执行 目前只能继承一次，并且只能在 Execute(ref Trigger) 里执行 UpdateBoundBox_Box UpdateBoundBox_Sphere UpdateBoundBoxBase<Shape> Structs Aabb Bounding Box BodyMask BoxShape DynamicTreeNode<T> A node in the dynamic tree. The client does not interact with this directly. Hit PhysicsDebugSystem.PhysicsDebugData PossibleContact<ShapeA, ShapeB> SphereShape Trigger Interfaces IShape"
  },
  "api/Saro.Gameplay.Ability.EStackExpirationPolicy.html": {
    "href": "api/Saro.Gameplay.Ability.EStackExpirationPolicy.html",
    "title": "Enum EStackExpirationPolicy | MGF Gameplay | 0.1.0",
    "keywords": "Enum EStackExpirationPolicy Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EStackExpirationPolicy : byte Fields Name Description ClearEntireStack RefreshDuration RemoveSingeStackAndRefreshDuration"
  },
  "api/Saro.Gameplay.Ability.AbilityCtx.html": {
    "href": "api/Saro.Gameplay.Ability.AbilityCtx.html",
    "title": "Struct AbilityCtx | MGF Gameplay | 0.1.0",
    "keywords": "Struct AbilityCtx Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct AbilityCtx : IEcsComponent, IEcsAutoReset<AbilityCtx> Fields AbilityObjs Declaration public List<AbilityObj> AbilityObjs Field Value Type Description List < AbilityObj > Methods AddToEntity(EcsEntity, List<String>) Declaration public static AbilityCtx AddToEntity(EcsEntity entity, List<string> startAbilities) Parameters Type Name Description EcsEntity entity List < String > startAbilities Returns Type Description AbilityCtx AutoReset(ref AbilityCtx) Declaration public void AutoReset(ref AbilityCtx c) Parameters Type Name Description AbilityCtx c Extension Methods AbilityCtxUtility.CastAbility(ref AbilityCtx, String) AbilityCtxUtility.LearnAbility(ref AbilityCtx, String, EcsEntity, Int32) AbilityCtxUtility.RemoveAbility(ref AbilityCtx, String)"
  },
  "api/Saro.SPhysics.PhysicsFeature.html": {
    "href": "api/Saro.SPhysics.PhysicsFeature.html",
    "title": "Class PhysicsFeature | MGF Gameplay | 0.1.0",
    "keywords": "Class PhysicsFeature 处理物理触发器 最好在逻辑帧首执行 Inheritance Object PhysicsFeature Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PhysicsFeature : EcsSystemFeature Constructors PhysicsFeature() Declaration public PhysicsFeature() Properties EventWorld Declaration public EcsWorld EventWorld { get; } Property Value Type Description EcsWorld Methods Create(EcsWorld, Boolean[]) Declaration public static EcsSystems Create(EcsWorld world, bool[] matrix) Parameters Type Name Description EcsWorld world Boolean [] matrix Returns Type Description EcsSystems Destroy(EcsSystems) Declaration public override void Destroy(EcsSystems systems) Parameters Type Name Description EcsSystems systems LoadMatrixAsync() Declaration public static UniTask<bool[]> LoadMatrixAsync() Returns Type Description UniTask < Boolean []> OverlapSphere(Vector3, Single, Int32, List<Int32>) Declaration public static void OverlapSphere(in Vector3 position, float radius, int layerMask, List<int> entities) Parameters Type Name Description Vector3 position Single radius Int32 layerMask List < Int32 > entities Raycast(Vector3, Vector3, ref Hit) Declaration public static bool Raycast(in Vector3 start, in Vector3 end, ref Hit hit) Parameters Type Name Description Vector3 start Vector3 end Hit hit Returns Type Description Boolean"
  },
  "api/Saro.SPhysics.PhysicsDebugSystem.html": {
    "href": "api/Saro.SPhysics.PhysicsDebugSystem.html",
    "title": "Class PhysicsDebugSystem | MGF Gameplay | 0.1.0",
    "keywords": "Class PhysicsDebugSystem Inheritance Object PhysicsDebugSystem Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PhysicsDebugSystem : IEcsInitSystem, IEcsRunSystem Properties Enable Declaration public bool Enable { get; set; } Property Value Type Description Boolean"
  },
  "api/Saro.Gameplay.Waypoint.Editor.BezierPathEditor.html": {
    "href": "api/Saro.Gameplay.Waypoint.Editor.BezierPathEditor.html",
    "title": "Class BezierPathEditor | MGF Gameplay | 0.1.0",
    "keywords": "Class BezierPathEditor Inheritance Object BezierPathEditor Namespace : Saro.Gameplay.Waypoint.Editor <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BezierPathEditor : BaseEditor<BezierPath> Properties PreferTangentSelection Declaration public static bool PreferTangentSelection { get; set; } Property Value Type Description Boolean Methods DrawPathGizmo(BezierPath, Color) Declaration public static void DrawPathGizmo(BezierPath path, Color pathColor) Parameters Type Name Description BezierPath path Color pathColor GetExcludedPropertiesInInspector(List<String>) Declaration protected override void GetExcludedPropertiesInInspector(List<string> excluded) Parameters Type Name Description List < String > excluded OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Saro.Gameplay.Tag.ParseGameplayTagException.html": {
    "href": "api/Saro.Gameplay.Tag.ParseGameplayTagException.html",
    "title": "Class ParseGameplayTagException | MGF Gameplay | 0.1.0",
    "keywords": "Class ParseGameplayTagException Inheritance Object Exception ParseGameplayTagException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Namespace : Saro.Gameplay.Tag <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class ParseGameplayTagException : Exception, ISerializable, _Exception Constructors ParseGameplayTagException(String) Declaration public ParseGameplayTagException(string message) Parameters Type Name Description String message"
  },
  "api/Saro.Gameplay.Interact.GameplayCounter.html": {
    "href": "api/Saro.Gameplay.Interact.GameplayCounter.html",
    "title": "Class GameplayCounter | MGF Gameplay | 0.1.0",
    "keywords": "Class GameplayCounter Inheritance Object GameCommandHandler GameplayCounter Inherited Members GameCommandHandler.oneShot GameCommandHandler.coolDown GameCommandHandler.startDelay GameCommandHandler.m_IsTriggered GameCommandHandler.OnInteraction() GameCommandHandler.Awake() Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class GameplayCounter : GameCommandHandler Fields currentCount Declaration public int currentCount Field Value Type Description Int32 onIncreamentPerformAction Declaration public GameCommandHandler onIncreamentPerformAction Field Value Type Description GameCommandHandler onIncreamentSendCommand Declaration public GameCommandSender onIncreamentSendCommand Field Value Type Description GameCommandSender onTargetReachedPerformAction Declaration public GameCommandHandler onTargetReachedPerformAction Field Value Type Description GameCommandHandler onTargetReachedSendCommand Declaration public GameCommandSender onTargetReachedSendCommand Field Value Type Description GameCommandSender targetCount Declaration public int targetCount Field Value Type Description Int32 Methods PerformInteraction() Declaration public override void PerformInteraction() Overrides GameCommandHandler.PerformInteraction()"
  },
  "api/Saro.Gameplay.Common.ScriptSystem.html": {
    "href": "api/Saro.Gameplay.Common.ScriptSystem.html",
    "title": "Class ScriptSystem | MGF Gameplay | 0.1.0",
    "keywords": "Class ScriptSystem Inheritance Object ScriptSystem Namespace : Saro.Gameplay.Common <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class ScriptSystem : IEcsRunSystem, IEcsInitSystem, IEcsDestroySystem Properties Enable Declaration public bool Enable { get; set; } Property Value Type Description Boolean World Declaration public EcsWorld World { get; } Property Value Type Description EcsWorld Methods CreateScript(Int32, IScriptAsset) Declaration public void CreateScript(int scriptEntity, IScriptAsset scriptAsset) Parameters Type Name Description Int32 scriptEntity IScriptAsset scriptAsset DestroyScript(Int32, IScriptInstance) Declaration public void DestroyScript(int scriptEntity, IScriptInstance scriptInstance) Parameters Type Name Description Int32 scriptEntity IScriptInstance scriptInstance"
  },
  "api/Saro.Gameplay.Ability.SpecialConfig.html": {
    "href": "api/Saro.Gameplay.Ability.SpecialConfig.html",
    "title": "Class SpecialConfig | MGF Gameplay | 0.1.0",
    "keywords": "Class SpecialConfig Inheritance Object SpecialConfig AbilityCastCondition AbilityCooldown AbilityCost GAction TargetType Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public abstract class SpecialConfig : IVarOwner Properties IsParse Declaration public bool IsParse { get; } Property Value Type Description Boolean Methods Parse(IReadOnlyList<VarPair>) Declaration public void Parse(IReadOnlyList<VarPair> special) Parameters Type Name Description IReadOnlyList < VarPair > special Implements IVarOwner.Parse(IReadOnlyList<VarPair>) ParseInternal(IReadOnlyList<VarPair>) Declaration protected virtual void ParseInternal(IReadOnlyList<VarPair> special) Parameters Type Name Description IReadOnlyList < VarPair > special"
  },
  "api/Saro.Gameplay.Ability.AbilityContext.html": {
    "href": "api/Saro.Gameplay.Ability.AbilityContext.html",
    "title": "Class AbilityContext | MGF Gameplay | 0.1.0",
    "keywords": "Class AbilityContext Inheritance Object AbilityContext Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class AbilityContext Properties EffectSystem Declaration public static EffectSystem EffectSystem { get; } Property Value Type Description EffectSystem"
  },
  "api/Saro.SPhysics.OverlapTester.html": {
    "href": "api/Saro.SPhysics.OverlapTester.html",
    "title": "Class OverlapTester | MGF Gameplay | 0.1.0",
    "keywords": "Class OverlapTester Inheritance Object OverlapTester Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class OverlapTester : MonoBehaviour Fields layerMask Declaration public int layerMask Field Value Type Description Int32 radius Declaration public float radius Field Value Type Description Single"
  },
  "api/Saro.SPhysics.BroadPhase_DynamicTree.html": {
    "href": "api/Saro.SPhysics.BroadPhase_DynamicTree.html",
    "title": "Class BroadPhase_DynamicTree | MGF Gameplay | 0.1.0",
    "keywords": "Class BroadPhase_DynamicTree Inheritance Object BroadPhaseBase BroadPhase_DynamicTree Inherited Members BroadPhaseBase.Enable BroadPhaseBase.m_PhysicsData BroadPhaseBase.m_Bodies BroadPhaseBase.m_World BroadPhaseBase.m_BodyMaskPool BroadPhaseBase.m_AabbPool BroadPhaseBase.m_ShapeSpherePool BroadPhaseBase.Init(EcsSystems) BroadPhaseBase.AddTestTask(Int32, Int32, BodyMask, BodyMask) BroadPhaseBase.Raycast(Vector3, Vector3, Int32, Hit) Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BroadPhase_DynamicTree : BroadPhaseBase, IEcsRunSystem Methods AddToBroadPhase(Int32, Aabb) Declaration public override void AddToBroadPhase(int entity, in Aabb aabb) Parameters Type Name Description Int32 entity Aabb aabb Overrides BroadPhaseBase.AddToBroadPhase(Int32, Aabb) FilterPossibleBodies(EcsSystems) Declaration protected override void FilterPossibleBodies(EcsSystems systems) Parameters Type Name Description EcsSystems systems Overrides BroadPhaseBase.FilterPossibleBodies(EcsSystems)"
  },
  "api/Saro.Gameplay.Interact.TriggerCommand.html": {
    "href": "api/Saro.Gameplay.Interact.TriggerCommand.html",
    "title": "Class TriggerCommand | MGF Gameplay | 0.1.0",
    "keywords": "Class TriggerCommand Inheritance Object GameCommandSender TriggerCommand SendOnPressButton SendOnTriggerEnter SendOnTriggerExit SendOnTriggerStay Inherited Members GameCommandSender.interactiveObjects GameCommandSender.oneShot GameCommandSender.coolDown GameCommandSender.Temperature GameCommandSender.IsTriggered GameCommandSender.Send() Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class TriggerCommand : GameCommandSender Fields layers Declaration public LayerMask layers Field Value Type Description LayerMask Methods Reset() Declaration protected override void Reset() Overrides GameCommandSender.Reset()"
  },
  "api/Saro.Gameplay.Interact.SimpleTranslatorEditor.html": {
    "href": "api/Saro.Gameplay.Interact.SimpleTranslatorEditor.html",
    "title": "Class SimpleTranslatorEditor | MGF Gameplay | 0.1.0",
    "keywords": "Class SimpleTranslatorEditor Inheritance Object SimpleTransformerEditor SimpleTranslatorEditor Inherited Members SimpleTransformerEditor.OnInspectorGUI() Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SimpleTranslatorEditor : SimpleTransformerEditor"
  },
  "api/Saro.Gameplay.CharacterController.MovementComponentDegug.html": {
    "href": "api/Saro.Gameplay.CharacterController.MovementComponentDegug.html",
    "title": "Class MovementComponentDegug | MGF Gameplay | 0.1.0",
    "keywords": "Class MovementComponentDegug Inheritance Object MovementComponentDegug Namespace : Saro.Gameplay.CharacterController <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class MovementComponentDegug : MonoBehaviour Fields _renderer Declaration public Renderer _renderer Field Value Type Description Renderer movementComponent Declaration public CharacterMotor movementComponent Field Value Type Description CharacterMotor"
  },
  "api/Saro.Gameplay.OrbitCamera.html": {
    "href": "api/Saro.Gameplay.OrbitCamera.html",
    "title": "Class OrbitCamera | MGF Gameplay | 0.1.0",
    "keywords": "Class OrbitCamera Inheritance Object OrbitCamera Namespace : Saro.Gameplay <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class OrbitCamera : MonoBehaviour Properties Focus Declaration public Transform Focus { get; set; } Property Value Type Description Transform Methods Initilize() Declaration public void Initilize() UpdateFocusPoint() Declaration public void UpdateFocusPoint()"
  },
  "api/Saro.Gameplay.CharacterController.html": {
    "href": "api/Saro.Gameplay.CharacterController.html",
    "title": "Namespace Saro.Gameplay.CharacterController | MGF Gameplay | 0.1.0",
    "keywords": "Namespace Saro.Gameplay.CharacterController Classes CharacterMotor MovementComponentDegug"
  },
  "api/Saro.Gameplay.Ability.Projectile.html": {
    "href": "api/Saro.Gameplay.Ability.Projectile.html",
    "title": "Class Projectile | MGF Gameplay | 0.1.0",
    "keywords": "Class Projectile Inheritance Object Projectile Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class Projectile : ISpecialTableOwner<ProjectileData> Fields eventContainer Declaration [SerializeReference] public EventContainer eventContainer Field Value Type Description EventContainer eventScript Declaration public string eventScript Field Value Type Description String hitTimes Declaration public VarInt hitTimes Field Value Type Description VarInt id Declaration public string id Field Value Type Description String prefab Declaration public string prefab Field Value Type Description String radius Declaration public VarFloat radius Field Value Type Description VarFloat sameTargetCd Declaration public VarFloat sameTargetCd Field Value Type Description VarFloat specialTable Declaration public string specialTable Field Value Type Description String Properties EventScript 脚本 Declaration public IProjectileEventScript EventScript { get; } Property Value Type Description IProjectileEventScript Specials 特殊参数 Declaration public IReadOnlyList<VarPair> Specials { get; } Property Value Type Description IReadOnlyList < VarPair > Implements ISpecialTableOwner<T>.Specials Methods Parse() Declaration public void Parse() Implements ISpecialTableOwner<T>.Parse() RefreshData(ref ProjectileData, Int32) Declaration public void RefreshData(ref ProjectileData data, int level) Parameters Type Name Description ProjectileData data Int32 level Implements ISpecialTableOwner<T>.RefreshData(ref T, Int32)"
  },
  "api/Saro.Gameplay.Ability.VarInt.html": {
    "href": "api/Saro.Gameplay.Ability.VarInt.html",
    "title": "Class VarInt | MGF Gameplay | 0.1.0",
    "keywords": "Class VarInt Inheritance Object Var Var < Int32 > VarInt Inherited Members Var<Int32>.Ref Var<Int32>.values Var<Int32>.Item[Int32] Var<Int32>.Count Var<Int32>.GetRawValue(Int32) Var<Int32>.GetValue(Int32) Var<Int32>.Parse(IReadOnlyList<VarPair>) Var<Int32>.ParseError() Var<Int32>.ToString() Var.txt Var.raw Var.AutoParse(Object, IReadOnlyList<VarPair>) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class VarInt : Var<int> Constructors VarInt() Declaration public VarInt() VarInt(String) Declaration public VarInt(string txt) Parameters Type Name Description String txt Methods ParseValues() Declaration protected override void ParseValues() Overrides Saro.Gameplay.Ability.Var<System.Int32>.ParseValues()"
  },
  "api/Saro.Gameplay.Ability.MotionSystem.html": {
    "href": "api/Saro.Gameplay.Ability.MotionSystem.html",
    "title": "Class MotionSystem | MGF Gameplay | 0.1.0",
    "keywords": "Class MotionSystem Inheritance Object MotionSystem Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class MotionSystem : IEcsRunSystem Properties Enable Declaration public bool Enable { get; set; } Property Value Type Description Boolean Methods Run(EcsSystems, Single) Declaration public void Run(EcsSystems systems, float deltaTime) Parameters Type Name Description EcsSystems systems Single deltaTime"
  },
  "api/Saro.Gameplay.Ability.MotionState.html": {
    "href": "api/Saro.Gameplay.Ability.MotionState.html",
    "title": "Class MotionState | MGF Gameplay | 0.1.0",
    "keywords": "Class MotionState Inheritance Object MotionState Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class MotionState : IReference, IHandledObject Fields s_ObjectID Declaration public static int s_ObjectID Field Value Type Description Int32 source 播放此motion的entity Declaration public EcsEntity source Field Value Type Description EcsEntity Properties CrossFade only for Animation blend Declaration public float CrossFade { get; set; } Property Value Type Description Single CurrentFrame Declaration public int CurrentFrame { get; set; } Property Value Type Description Int32 Data 引用，会修改到原数据，慎重修改 Declaration public MotionClip Data { get; set; } Property Value Type Description MotionClip FrameLength Declaration public int FrameLength { get; } Property Value Type Description Int32 FrameRate Declaration public int FrameRate { get; } Property Value Type Description Int32 Looped Declaration public bool Looped { get; set; } Property Value Type Description Boolean NormalizedTime Declaration public float NormalizedTime { get; } Property Value Type Description Single ObjectID Declaration public int ObjectID { get; } Property Value Type Description Int32 Paused Declaration public bool Paused { get; } Property Value Type Description Boolean PlaybackSpeed 播放速度。 * Saro.Gameplay.Ability.MotionState.m_PlaybackSpeed Declaration public float PlaybackSpeed { get; set; } Property Value Type Description Single Poolable Declaration public bool Poolable { get; } Property Value Type Description Boolean Stopped Declaration public bool Stopped { get; } Property Value Type Description Boolean TotalLength Declaration public float TotalLength { get; } Property Value Type Description Single UserData Declaration public object UserData { get; set; } Property Value Type Description Object Methods AddNotifyEvent(NotifyStateObj) Declaration public void AddNotifyEvent(NotifyStateObj obj) Parameters Type Name Description NotifyStateObj obj CreateObj(MotionClip, Boolean, IMotionListener) Declaration public static MotionState CreateObj(MotionClip motionClip, bool poolable, IMotionListener listener = null) Parameters Type Name Description MotionClip motionClip Boolean poolable IMotionListener listener Returns Type Description MotionState CreateObj(String, Boolean, IMotionListener) Declaration public static MotionState CreateObj(string motionId, bool poolable, IMotionListener listener = null) Parameters Type Name Description String motionId Boolean poolable IMotionListener listener Returns Type Description MotionState Load(List<MotionClip>) Declaration public static void Load(List<MotionClip> list) Parameters Type Name Description List < MotionClip > list Pause() Declaration public void Pause() ReleaseObj(MotionState) Declaration public static void ReleaseObj(MotionState motion) Parameters Type Name Description MotionState motion RemoveNotifyEvent(NotifyStateObj) Declaration public void RemoveNotifyEvent(NotifyStateObj obj) Parameters Type Name Description NotifyStateObj obj Stop() Declaration public void Stop() TryGetMotionClip(String, out MotionClip) Declaration public static bool TryGetMotionClip(string clipId, out MotionClip clip) Parameters Type Name Description String clipId MotionClip clip Returns Type Description Boolean"
  },
  "api/Saro.Gameplay.Interact.GameCommandSenderEditor.html": {
    "href": "api/Saro.Gameplay.Interact.GameCommandSenderEditor.html",
    "title": "Class GameCommandSenderEditor | MGF Gameplay | 0.1.0",
    "keywords": "Class GameCommandSenderEditor Inheritance Object GameCommandSenderEditor Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class GameCommandSenderEditor : Editor Methods DrawInteraction(GameCommandSender) Declaration public static void DrawInteraction(GameCommandSender c) Parameters Type Name Description GameCommandSender c"
  },
  "api/Saro.Gameplay.Ability.TargetType.html": {
    "href": "api/Saro.Gameplay.Ability.TargetType.html",
    "title": "Class TargetType | MGF Gameplay | 0.1.0",
    "keywords": "Class TargetType Inheritance Object SpecialConfig TargetType Inherited Members SpecialConfig.IsParse SpecialConfig.Parse(IReadOnlyList<VarPair>) SpecialConfig.ParseInternal(IReadOnlyList<VarPair>) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public abstract class TargetType : SpecialConfig, IVarOwner Methods CreateObj(Int32) Declaration public abstract TargetTypeObj CreateObj(int level) Parameters Type Name Description Int32 level Returns Type Description TargetTypeObj"
  },
  "api/Saro.Gameplay.CharacterController.CharacterMotor.html": {
    "href": "api/Saro.Gameplay.CharacterController.CharacterMotor.html",
    "title": "Class CharacterMotor | MGF Gameplay | 0.1.0",
    "keywords": "Class CharacterMotor Inheritance Object CharacterMotor Namespace : Saro.Gameplay.CharacterController <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class CharacterMotor : MonoBehaviour Fields lockMovement Declaration public bool lockMovement Field Value Type Description Boolean lockRotate Declaration public bool lockRotate Field Value Type Description Boolean m_Input Declaration protected Vector2 m_Input Field Value Type Description Vector2 m_PlayerInputSpace Declaration protected Transform m_PlayerInputSpace Field Value Type Description Transform m_RigidBody Declaration protected Rigidbody m_RigidBody Field Value Type Description Rigidbody Properties GroundContactCount Declaration public int GroundContactCount { get; } Property Value Type Description Int32 NormalizedXVelocity Declaration public float NormalizedXVelocity { get; } Property Value Type Description Single NormalizedXZVelocity Declaration public float NormalizedXZVelocity { get; } Property Value Type Description Single NormalizedZVelocity Declaration public float NormalizedZVelocity { get; } Property Value Type Description Single OnGround Declaration protected bool OnGround { get; } Property Value Type Description Boolean Velocity Declaration public Vector3 Velocity { get; } Property Value Type Description Vector3 Methods AdjustRotation() Declaration protected virtual void AdjustRotation() Awake() Declaration protected virtual void Awake() FixedUpdate() Declaration public void FixedUpdate() GetInputs() override this for custom user input or ai m_DesiredJump m_DesiredVelocity Declaration protected virtual void GetInputs() OnValidate() Declaration protected virtual void OnValidate() Update() Declaration public virtual void Update()"
  },
  "api/Saro.Gameplay.Ability.SerializeReference.html": {
    "href": "api/Saro.Gameplay.Ability.SerializeReference.html",
    "title": "Class SerializeReference | MGF Gameplay | 0.1.0",
    "keywords": "Class SerializeReference Inheritance Object Attribute SerializeReference Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Module | AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Constructor | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Interface | AttributeTargets.Parameter | AttributeTargets.Delegate | AttributeTargets.ReturnValue | AttributeTargets.GenericParameter | AttributeTargets.All, Inherited = false, AllowMultiple = true)] public sealed class SerializeReference : Attribute, _Attribute Constructors SerializeReference() Declaration public SerializeReference()"
  },
  "api/Saro.Gameplay.Ability.AbilityCooldown.html": {
    "href": "api/Saro.Gameplay.Ability.AbilityCooldown.html",
    "title": "Class AbilityCooldown | MGF Gameplay | 0.1.0",
    "keywords": "Class AbilityCooldown Inheritance Object SpecialConfig AbilityCooldown Inherited Members SpecialConfig.IsParse SpecialConfig.Parse(IReadOnlyList<VarPair>) SpecialConfig.ParseInternal(IReadOnlyList<VarPair>) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public abstract class AbilityCooldown : SpecialConfig, IVarOwner Methods ApplyCooldown(AbilityObj) Declaration public abstract bool ApplyCooldown(AbilityObj obj) Parameters Type Name Description AbilityObj obj Returns Type Description Boolean IsCooldown(AbilityObj) Declaration public abstract bool IsCooldown(AbilityObj obj) Parameters Type Name Description AbilityObj obj Returns Type Description Boolean"
  },
  "api/Saro.Gameplay.Ability.ITargetTypeObj_DataDriven.html": {
    "href": "api/Saro.Gameplay.Ability.ITargetTypeObj_DataDriven.html",
    "title": "Interface ITargetTypeObj_DataDriven | MGF Gameplay | 0.1.0",
    "keywords": "Interface ITargetTypeObj_DataDriven Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface ITargetTypeObj_DataDriven : IReference Methods GetTargets(IGameplayEventSender, GameplayEventArgs, List<EcsEntity>) Declaration void GetTargets(IGameplayEventSender sender, GameplayEventArgs args, List<EcsEntity> targets) Parameters Type Name Description IGameplayEventSender sender GameplayEventArgs args List < EcsEntity > targets"
  },
  "api/Saro.SPhysics.UpdateBoundBox_Sphere.html": {
    "href": "api/Saro.SPhysics.UpdateBoundBox_Sphere.html",
    "title": "Class UpdateBoundBox_Sphere | MGF Gameplay | 0.1.0",
    "keywords": "Class UpdateBoundBox_Sphere Inheritance Object UpdateBoundBoxBase < SphereShape > UpdateBoundBox_Sphere Inherited Members UpdateBoundBoxBase<SphereShape>.Enable UpdateBoundBoxBase<SphereShape>.m_World UpdateBoundBoxBase<SphereShape>.m_AabbPool UpdateBoundBoxBase<SphereShape>.Init(EcsSystems) UpdateBoundBoxBase<SphereShape>.Run(EcsSystems, Single) Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class UpdateBoundBox_Sphere : UpdateBoundBoxBase<SphereShape>, IEcsRunSystem Methods RunTask(Int32, SphereShape, ref Aabb) Declaration protected override void RunTask(int bodyEntity, in SphereShape shape, ref Aabb aabb) Parameters Type Name Description Int32 bodyEntity SphereShape shape Aabb aabb Overrides Saro.SPhysics.UpdateBoundBoxBase<Saro.SPhysics.SphereShape>.RunTask(System.Int32, Saro.SPhysics.SphereShape, Saro.SPhysics.Aabb)"
  },
  "api/Saro.Gameplay.Common.IScriptInstance-1.html": {
    "href": "api/Saro.Gameplay.Common.IScriptInstance-1.html",
    "title": "Class IScriptInstance<T> | MGF Gameplay | 0.1.0",
    "keywords": "Class IScriptInstance<T> Inheritance Object IScriptInstance IScriptInstance<T> Inherited Members IScriptInstance.ScriptAsset IScriptInstance.ScriptSystem IScriptInstance.Target IScriptInstance.Destroy() IScriptInstance.AwakeInternal() IScriptInstance.TickInternal() IScriptInstance.OnDestroyInternal() IScriptInstance.IReferenceClearInternal() Namespace : Saro.Gameplay.Common <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class IScriptInstance<T> : IScriptInstance where T : IScriptAsset Type Parameters Name Description T Properties Asset Declaration public T Asset { get; } Property Value Type Description T"
  },
  "api/Saro.Gameplay.Ability.ProjectileSystem.html": {
    "href": "api/Saro.Gameplay.Ability.ProjectileSystem.html",
    "title": "Class ProjectileSystem | MGF Gameplay | 0.1.0",
    "keywords": "Class ProjectileSystem Inheritance Object ProjectileSystem Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ProjectileSystem : IEcsRunSystem, IEcsInitSystem Properties Enable Declaration public bool Enable { get; set; } Property Value Type Description Boolean"
  },
  "api/Saro.Gameplay.Ability.MotionUtility.html": {
    "href": "api/Saro.Gameplay.Ability.MotionUtility.html",
    "title": "Class MotionUtility | MGF Gameplay | 0.1.0",
    "keywords": "Class MotionUtility Inheritance Object MotionUtility Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class MotionUtility Methods FrameToTime(Single, Single) Declaration public static float FrameToTime(float frame, float frameRate) Parameters Type Name Description Single frame Single frameRate Returns Type Description Single GetFrameLength(AnimationClip) Declaration public static int GetFrameLength(this AnimationClip clip) Parameters Type Name Description AnimationClip clip Returns Type Description Int32 TimeToFrame(Single, Single) Declaration public static float TimeToFrame(float time, float frameRate) Parameters Type Name Description Single time Single frameRate Returns Type Description Single TimeToIntFrame(Single, Single) Declaration public static int TimeToIntFrame(float time, float frameRate) Parameters Type Name Description Single time Single frameRate Returns Type Description Int32"
  },
  "api/Saro.Gameplay.Ability.ITargetFilter.html": {
    "href": "api/Saro.Gameplay.Ability.ITargetFilter.html",
    "title": "Interface ITargetFilter | MGF Gameplay | 0.1.0",
    "keywords": "Interface ITargetFilter Inherited Members IVarOwner.Parse(IReadOnlyList<VarPair>) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface ITargetFilter : IVarOwner Methods IsMet(EcsEntity, EcsEntity) Declaration bool IsMet(EcsEntity caster, EcsEntity toCheck) Parameters Type Name Description EcsEntity caster EcsEntity toCheck Returns Type Description Boolean"
  },
  "api/Saro.Gameplay.Interact.GameCommandHandler.html": {
    "href": "api/Saro.Gameplay.Interact.GameCommandHandler.html",
    "title": "Class GameCommandHandler | MGF Gameplay | 0.1.0",
    "keywords": "Class GameCommandHandler Inheritance Object GameCommandHandler GameplayCounter SimpleTransformer Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class GameCommandHandler : MonoBehaviour Fields coolDown Declaration public float coolDown Field Value Type Description Single m_IsTriggered Declaration protected bool m_IsTriggered Field Value Type Description Boolean oneShot Declaration public bool oneShot Field Value Type Description Boolean startDelay Declaration public float startDelay Field Value Type Description Single Methods Awake() Declaration protected virtual void Awake() OnInteraction() Declaration public virtual void OnInteraction() PerformInteraction() Declaration public abstract void PerformInteraction()"
  },
  "api/Saro.Gameplay.Ability.VarByte.html": {
    "href": "api/Saro.Gameplay.Ability.VarByte.html",
    "title": "Class VarByte | MGF Gameplay | 0.1.0",
    "keywords": "Class VarByte Inheritance Object Var Var < Byte > VarByte Inherited Members Var<Byte>.Ref Var<Byte>.values Var<Byte>.Item[Int32] Var<Byte>.Count Var<Byte>.GetRawValue(Int32) Var<Byte>.GetValue(Int32) Var<Byte>.Parse(IReadOnlyList<VarPair>) Var<Byte>.ParseError() Var<Byte>.ToString() Var.txt Var.raw Var.AutoParse(Object, IReadOnlyList<VarPair>) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class VarByte : Var<byte> Constructors VarByte() Declaration public VarByte() VarByte(String) Declaration public VarByte(string txt) Parameters Type Name Description String txt Methods ParseValues() Declaration protected override void ParseValues() Overrides Saro.Gameplay.Ability.Var<System.Byte>.ParseValues()"
  },
  "api/Saro.SPhysics.LayerCollisionMatrix.html": {
    "href": "api/Saro.SPhysics.LayerCollisionMatrix.html",
    "title": "Class LayerCollisionMatrix | MGF Gameplay | 0.1.0",
    "keywords": "Class LayerCollisionMatrix Inheritance Object LayerCollisionMatrix Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class LayerCollisionMatrix : ScriptableObject Fields k_AssetPath Declaration public static string k_AssetPath Field Value Type Description String physicsIgnoreMatrix Declaration public bool[] physicsIgnoreMatrix Field Value Type Description Boolean []"
  },
  "api/Saro.Gameplay.Interact.html": {
    "href": "api/Saro.Gameplay.Interact.html",
    "title": "Namespace Saro.Gameplay.Interact | MGF Gameplay | 0.1.0",
    "keywords": "Namespace Saro.Gameplay.Interact Classes GameCommandHandler GameCommandReceiver GameCommandReceiverEditor GameCommandSender GameCommandSenderEditor GameplayCounter MovingPlatform SendOnPressButton SendOnTriggerEnter SendOnTriggerExit SendOnTriggerStay SimpleRotator SimpleTransformer SimpleTransformerEditor SimpleTranslator SimpleTranslatorEditor TriggerCommand Enums SimpleTransformer.ELoopType"
  },
  "api/Saro.Gameplay.Interact.GameCommandSender.html": {
    "href": "api/Saro.Gameplay.Interact.GameCommandSender.html",
    "title": "Class GameCommandSender | MGF Gameplay | 0.1.0",
    "keywords": "Class GameCommandSender Inheritance Object GameCommandSender TriggerCommand Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class GameCommandSender : MonoBehaviour Fields coolDown Declaration public float coolDown Field Value Type Description Single interactiveObjects Declaration public GameCommandReceiver[] interactiveObjects Field Value Type Description GameCommandReceiver [] oneShot Declaration public bool oneShot Field Value Type Description Boolean Properties IsTriggered Declaration public bool IsTriggered { get; } Property Value Type Description Boolean Temperature Declaration public float Temperature { get; } Property Value Type Description Single Methods Reset() Declaration protected virtual void Reset() Send() Declaration public void Send()"
  },
  "api/Saro.Gameplay.Common.IScriptAsset.html": {
    "href": "api/Saro.Gameplay.Common.IScriptAsset.html",
    "title": "Class IScriptAsset | MGF Gameplay | 0.1.0",
    "keywords": "Class IScriptAsset Inheritance Object IScriptAsset IScriptAsset<T> Namespace : Saro.Gameplay.Common <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class IScriptAsset Methods CreateInstance(EcsEntity) Declaration public abstract IScriptInstance CreateInstance(EcsEntity target) Parameters Type Name Description EcsEntity target Returns Type Description IScriptInstance"
  },
  "api/Saro.Gameplay.Ability.IGameplayTagGen.html": {
    "href": "api/Saro.Gameplay.Ability.IGameplayTagGen.html",
    "title": "Interface IGameplayTagGen | MGF Gameplay | 0.1.0",
    "keywords": "Interface IGameplayTagGen Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IGameplayTagGen"
  },
  "api/Saro.Gameplay.Ability.GameplayAttributeBase.html": {
    "href": "api/Saro.Gameplay.Ability.GameplayAttributeBase.html",
    "title": "Class GameplayAttributeBase | MGF Gameplay | 0.1.0",
    "keywords": "Class GameplayAttributeBase Inheritance Object GameplayAttribute GameplayAttributeBase Inherited Members GameplayAttribute.m_BaseValue GameplayAttribute.m_CurrentValue GameplayAttribute.OnBaseValueChanged GameplayAttribute.OnCurrentValueChanged GameplayAttribute.Set GameplayAttribute.BaseValue GameplayAttribute.Modifiers GameplayAttribute.m_Modifiers GameplayAttribute.m_Dirty GameplayAttribute.RemoveModifiers(IModifierSource) GameplayAttribute.RaiseOnBaseValueChangedEvent(Single, Single) GameplayAttribute.RaiseOnCurrentValueChangedEvent(Single, Single) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class GameplayAttributeBase : GameplayAttribute Properties CurrValue Declaration public override float CurrValue { get; set; } Property Value Type Description Single Overrides GameplayAttribute.CurrValue Methods AddModifier(ModifierObj) Declaration public override void AddModifier(ModifierObj modifier) Parameters Type Name Description ModifierObj modifier Overrides GameplayAttribute.AddModifier(ModifierObj) CalcCurrentValue() Declaration protected override float CalcCurrentValue() Returns Type Description Single Overrides GameplayAttribute.CalcCurrentValue() ToString() Declaration public override string ToString() Returns Type Description String Overrides GameplayAttribute.ToString()"
  },
  "api/Saro.Gameplay.Tag.GameplayTagRequirements.html": {
    "href": "api/Saro.Gameplay.Tag.GameplayTagRequirements.html",
    "title": "Class GameplayTagRequirements | MGF Gameplay | 0.1.0",
    "keywords": "Class GameplayTagRequirements Inheritance Object GameplayTagRequirements Namespace : Saro.Gameplay.Tag <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class GameplayTagRequirements Fields ignoreTags Declaration public GameplayTagContainer ignoreTags Field Value Type Description GameplayTagContainer requireTags Declaration public GameplayTagContainer requireTags Field Value Type Description GameplayTagContainer Methods IsEmpty() Declaration public bool IsEmpty() Returns Type Description Boolean IsRequirementsMet(GameplayTagContainer) Declaration public bool IsRequirementsMet(GameplayTagContainer container) Parameters Type Name Description GameplayTagContainer container Returns Type Description Boolean ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Saro.Gameplay.Tag.GameplayTagNode.html": {
    "href": "api/Saro.Gameplay.Tag.GameplayTagNode.html",
    "title": "Class GameplayTagNode | MGF Gameplay | 0.1.0",
    "keywords": "Class GameplayTagNode Inheritance Object GameplayTagNode Namespace : Saro.Gameplay.Tag <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class GameplayTagNode Constructors GameplayTagNode(String, GameplayTagNode) Declaration public GameplayTagNode(string tagName, GameplayTagNode parent) Parameters Type Name Description String tagName GameplayTagNode parent Fields k_RootNode Declaration public const int k_RootNode = 1 Field Value Type Description Int32 s_InvalidTagNode Declaration public static readonly GameplayTagNode s_InvalidTagNode Field Value Type Description GameplayTagNode tag Declaration public int tag Field Value Type Description Int32 tagName Declaration public string tagName Field Value Type Description String Properties Children Declaration public List<GameplayTagNode> Children { get; } Property Value Type Description List < GameplayTagNode > CompleteTagWithParents This complete tag is at GameplayTags[0], with parents in ParentTags[] Declaration public GameplayTagContainer CompleteTagWithParents { get; } Property Value Type Description GameplayTagContainer Parent Declaration public GameplayTagNode Parent { get; } Property Value Type Description GameplayTagNode Methods CreateRootNode() Declaration public static GameplayTagNode CreateRootNode() Returns Type Description GameplayTagNode GetCompleteTag() Declaration public GameplayTag GetCompleteTag() Returns Type Description GameplayTag GetSingleTagContainer() Declaration public GameplayTagContainer GetSingleTagContainer() Returns Type Description GameplayTagContainer GetTagName() Declaration public string GetTagName() Returns Type Description String IsValid() Declaration public bool IsValid() Returns Type Description Boolean ResetNode() Declaration public void ResetNode() ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Operators Implicit(GameplayTagNode to GameplayTag) Declaration public static implicit operator GameplayTag(GameplayTagNode tagNode) Parameters Type Name Description GameplayTagNode tagNode Returns Type Description GameplayTag Implicit(GameplayTagNode to Int32) Declaration public static implicit operator int (GameplayTagNode tagNode) Parameters Type Name Description GameplayTagNode tagNode Returns Type Description Int32"
  },
  "api/Saro.Gameplay.Ability.IEventScript-1.html": {
    "href": "api/Saro.Gameplay.Ability.IEventScript-1.html",
    "title": "Interface IEventScript<TSender> | MGF Gameplay | 0.1.0",
    "keywords": "Interface IEventScript<TSender> Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IEventScript<TSender> : IScript Type Parameters Name Description TSender Properties EventMap Declaration Dictionary<GameplayTag, GameplyEventHandler<TSender>> EventMap { get; } Property Value Type Description Dictionary < GameplayTag , GameplyEventHandler <TSender>> Methods ContainsEvent(GameplayTag) Declaration bool ContainsEvent(GameplayTag eventTag) Parameters Type Name Description GameplayTag eventTag Returns Type Description Boolean Invoke(GameplayTag, TSender, GameplayEventArgs) Declaration void Invoke(GameplayTag eventTag, TSender sender, GameplayEventArgs args) Parameters Type Name Description GameplayTag eventTag TSender sender GameplayEventArgs args"
  },
  "api/Saro.Gameplay.Interact.SendOnPressButton.html": {
    "href": "api/Saro.Gameplay.Interact.SendOnPressButton.html",
    "title": "Class SendOnPressButton | MGF Gameplay | 0.1.0",
    "keywords": "Class SendOnPressButton Inheritance Object GameCommandSender TriggerCommand SendOnPressButton Inherited Members TriggerCommand.layers TriggerCommand.Reset() GameCommandSender.interactiveObjects GameCommandSender.oneShot GameCommandSender.coolDown GameCommandSender.Temperature GameCommandSender.IsTriggered GameCommandSender.Send() Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SendOnPressButton : TriggerCommand Fields key Declaration public KeyCode key Field Value Type Description KeyCode"
  },
  "api/Saro.Gameplay.Interact.MovingPlatform.html": {
    "href": "api/Saro.Gameplay.Interact.MovingPlatform.html",
    "title": "Class MovingPlatform | MGF Gameplay | 0.1.0",
    "keywords": "Class MovingPlatform Inheritance Object MovingPlatform Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class MovingPlatform : MonoBehaviour"
  },
  "api/Saro.Gameplay.Ability.JsonDataProvider-1.html": {
    "href": "api/Saro.Gameplay.Ability.JsonDataProvider-1.html",
    "title": "Class JsonDataProvider<T> | MGF Gameplay | 0.1.0",
    "keywords": "Class JsonDataProvider<T> Inheritance Object JsonDataProvider<T> Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class JsonDataProvider<T> : IDataProvider<T> Type Parameters Name Description T Methods Load() Declaration public List<T> Load() Returns Type Description List <T> Implements IDataProvider<T>.Load() LoadAsync() Declaration public UniTask<List<T>> LoadAsync() Returns Type Description UniTask < List <T>> Implements IDataProvider<T>.LoadAsync() Save() Declaration public void Save() Implements IDataProvider<T>.Save()"
  },
  "api/Saro.Gameplay.Ability.IModifierSource.html": {
    "href": "api/Saro.Gameplay.Ability.IModifierSource.html",
    "title": "Interface IModifierSource | MGF Gameplay | 0.1.0",
    "keywords": "Interface IModifierSource 实现此接口的对象，才能作为属性修改源 Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IModifierSource Properties ModifiedAttributes 记录此Modifier修改源，修改了的属性ID。see GameplayAttributeSet Declaration HashSet<int> ModifiedAttributes { get; } Property Value Type Description HashSet < Int32 >"
  },
  "api/Saro.Gameplay.Ability.Events.html": {
    "href": "api/Saro.Gameplay.Ability.Events.html",
    "title": "Class Events | MGF Gameplay | 0.1.0",
    "keywords": "Class Events Inheritance Object Events Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class Events : IGameplayTagGen Fields AoE_OnCreated Declaration public static GameplayTag AoE_OnCreated Field Value Type Description GameplayTag AoE_OnDestroy Declaration public static GameplayTag AoE_OnDestroy Field Value Type Description GameplayTag AoE_OnEntityEnter Declaration public static GameplayTag AoE_OnEntityEnter Field Value Type Description GameplayTag AoE_OnEntityExit Declaration public static GameplayTag AoE_OnEntityExit Field Value Type Description GameplayTag AoE_OnPeriod Declaration public static GameplayTag AoE_OnPeriod Field Value Type Description GameplayTag Effect_OnAbilityCast Declaration public static readonly GameplayTag Effect_OnAbilityCast Field Value Type Description GameplayTag Effect_OnAbilityUpgrade Declaration public static readonly GameplayTag Effect_OnAbilityUpgrade Field Value Type Description GameplayTag Effect_OnAfterDealDamage Declaration public static readonly GameplayTag Effect_OnAfterDealDamage Field Value Type Description GameplayTag Effect_OnAfterReceiveDamage Declaration public static readonly GameplayTag Effect_OnAfterReceiveDamage Field Value Type Description GameplayTag Effect_OnAfterReceiveHeal Declaration public static readonly GameplayTag Effect_OnAfterReceiveHeal Field Value Type Description GameplayTag Effect_OnBeforeDealDamage Declaration public static readonly GameplayTag Effect_OnBeforeDealDamage Field Value Type Description GameplayTag Effect_OnBeforeReceiveDamage Declaration public static readonly GameplayTag Effect_OnBeforeReceiveDamage Field Value Type Description GameplayTag Effect_OnBeforeReceiveHeal Declaration public static readonly GameplayTag Effect_OnBeforeReceiveHeal Field Value Type Description GameplayTag Effect_OnCreated Declaration public static readonly GameplayTag Effect_OnCreated Field Value Type Description GameplayTag Effect_OnDeath Declaration public static readonly GameplayTag Effect_OnDeath Field Value Type Description GameplayTag Effect_OnDestroy Declaration public static readonly GameplayTag Effect_OnDestroy Field Value Type Description GameplayTag Effect_OnDurationRefresh Declaration public static readonly GameplayTag Effect_OnDurationRefresh Field Value Type Description GameplayTag Effect_OnPeriod Declaration public static readonly GameplayTag Effect_OnPeriod Field Value Type Description GameplayTag Effect_OnStackCountChanged Declaration public static readonly GameplayTag Effect_OnStackCountChanged Field Value Type Description GameplayTag Effect_OnStackOverflow Declaration public static readonly GameplayTag Effect_OnStackOverflow Field Value Type Description GameplayTag Projectile_OnCreated Declaration public static GameplayTag Projectile_OnCreated Field Value Type Description GameplayTag Projectile_OnDestroy Declaration public static GameplayTag Projectile_OnDestroy Field Value Type Description GameplayTag Projectile_OnHit Declaration public static GameplayTag Projectile_OnHit Field Value Type Description GameplayTag"
  },
  "api/Saro.Gameplay.Ability.EStackDurationRefreshPolicy.html": {
    "href": "api/Saro.Gameplay.Ability.EStackDurationRefreshPolicy.html",
    "title": "Enum EStackDurationRefreshPolicy | MGF Gameplay | 0.1.0",
    "keywords": "Enum EStackDurationRefreshPolicy Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EStackDurationRefreshPolicy : byte Fields Name Description NeverRefresh RefreshOnSuccessfullApplication"
  },
  "api/Saro.Gameplay.Interact.SendOnTriggerEnter.html": {
    "href": "api/Saro.Gameplay.Interact.SendOnTriggerEnter.html",
    "title": "Class SendOnTriggerEnter | MGF Gameplay | 0.1.0",
    "keywords": "Class SendOnTriggerEnter Inheritance Object GameCommandSender TriggerCommand SendOnTriggerEnter Inherited Members TriggerCommand.layers TriggerCommand.Reset() GameCommandSender.interactiveObjects GameCommandSender.oneShot GameCommandSender.coolDown GameCommandSender.Temperature GameCommandSender.IsTriggered GameCommandSender.Send() Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SendOnTriggerEnter : TriggerCommand"
  },
  "api/Saro.Gameplay.Ability.ScriptCache-1.html": {
    "href": "api/Saro.Gameplay.Ability.ScriptCache-1.html",
    "title": "Class ScriptCache<T> | MGF Gameplay | 0.1.0",
    "keywords": "Class ScriptCache<T> Inheritance Object ScriptCache<T> Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class ScriptCache<T> where T : class, IScript Type Parameters Name Description T"
  },
  "api/Saro.Gameplay.Common.UnityViewSystem.html": {
    "href": "api/Saro.Gameplay.Common.UnityViewSystem.html",
    "title": "Class UnityViewSystem | MGF Gameplay | 0.1.0",
    "keywords": "Class UnityViewSystem Inheritance Object UnityViewSystem Namespace : Saro.Gameplay.Common <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class UnityViewSystem : IEcsRunSystem Properties Enable Declaration public bool Enable { get; set; } Property Value Type Description Boolean Methods Run(EcsSystems, Single) Declaration public void Run(EcsSystems systems, float deltaTime) Parameters Type Name Description EcsSystems systems Single deltaTime"
  },
  "api/Saro.SPhysics.UpdateBoundBox_Box.html": {
    "href": "api/Saro.SPhysics.UpdateBoundBox_Box.html",
    "title": "Class UpdateBoundBox_Box | MGF Gameplay | 0.1.0",
    "keywords": "Class UpdateBoundBox_Box Inheritance Object UpdateBoundBoxBase < BoxShape > UpdateBoundBox_Box Inherited Members UpdateBoundBoxBase<BoxShape>.Enable UpdateBoundBoxBase<BoxShape>.m_World UpdateBoundBoxBase<BoxShape>.m_AabbPool UpdateBoundBoxBase<BoxShape>.Init(EcsSystems) UpdateBoundBoxBase<BoxShape>.Run(EcsSystems, Single) Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class UpdateBoundBox_Box : UpdateBoundBoxBase<BoxShape>, IEcsRunSystem Methods RunTask(Int32, BoxShape, ref Aabb) Declaration protected override void RunTask(int bodyEntity, in BoxShape shape, ref Aabb aabb) Parameters Type Name Description Int32 bodyEntity BoxShape shape Aabb aabb Overrides Saro.SPhysics.UpdateBoundBoxBase<Saro.SPhysics.BoxShape>.RunTask(System.Int32, Saro.SPhysics.BoxShape, Saro.SPhysics.Aabb)"
  },
  "api/Saro.SPhysics.UpdateBoundBoxBase-1.html": {
    "href": "api/Saro.SPhysics.UpdateBoundBoxBase-1.html",
    "title": "Class UpdateBoundBoxBase<Shape> | MGF Gameplay | 0.1.0",
    "keywords": "Class UpdateBoundBoxBase<Shape> Inheritance Object UpdateBoundBoxBase<Shape> UpdateBoundBox_Box UpdateBoundBox_Sphere Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class UpdateBoundBoxBase<Shape> : IEcsInitSystem, IEcsRunSystem where Shape : struct, IShape Type Parameters Name Description Shape Fields m_AabbPool Declaration protected EcsPool<Aabb> m_AabbPool Field Value Type Description EcsPool < Aabb > m_World Declaration protected EcsWorld m_World Field Value Type Description EcsWorld Properties Enable Declaration public bool Enable { get; set; } Property Value Type Description Boolean Methods Init(EcsSystems) Declaration public virtual void Init(EcsSystems systems) Parameters Type Name Description EcsSystems systems Run(EcsSystems, Single) Declaration public void Run(EcsSystems systems, float deltaTime) Parameters Type Name Description EcsSystems systems Single deltaTime RunTask(Int32, Shape, ref Aabb) Declaration protected abstract void RunTask(int bodyEntity, in Shape shape, ref Aabb aabb) Parameters Type Name Description Int32 bodyEntity Shape shape Aabb aabb"
  },
  "api/Saro.SPhysics.BoxShape.html": {
    "href": "api/Saro.SPhysics.BoxShape.html",
    "title": "Struct BoxShape | MGF Gameplay | 0.1.0",
    "keywords": "Struct BoxShape Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct BoxShape : IShape, IEcsComponent Fields center Declaration public float3 center Field Value Type Description float3 ID Declaration public const int ID = 0 Field Value Type Description Int32 size Declaration public float3 size Field Value Type Description float3 Properties Center Declaration public float3 Center { get; } Property Value Type Description float3 Extends size 的 一半，同unity api的定义 Declaration public float3 Extends { get; } Property Value Type Description float3 Methods ScaleExtends(Int32, EcsWorld) Declaration public float3 ScaleExtends(int entity, EcsWorld world) Parameters Type Name Description Int32 entity EcsWorld world Returns Type Description float3 TypeId() Declaration public int TypeId() Returns Type Description Int32 Implements IShape.TypeId()"
  },
  "api/Saro.Gameplay.Ability.CustomMovementType.html": {
    "href": "api/Saro.Gameplay.Ability.CustomMovementType.html",
    "title": "Struct CustomMovementType | MGF Gameplay | 0.1.0",
    "keywords": "Struct CustomMovementType Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct CustomMovementType : IEcsComponent, IEcsAutoReset<CustomMovementType> Fields customMovement Declaration public CustomMovement customMovement Field Value Type Description CustomMovement Methods AutoReset(ref CustomMovementType) Declaration public void AutoReset(ref CustomMovementType c) Parameters Type Name Description CustomMovementType c"
  },
  "api/Saro.Gameplay.Waypoint.UnityVectorExtension.html": {
    "href": "api/Saro.Gameplay.Waypoint.UnityVectorExtension.html",
    "title": "Class UnityVectorExtension | MGF Gameplay | 0.1.0",
    "keywords": "Class UnityVectorExtension Inheritance Object UnityVectorExtension Namespace : Saro.Gameplay.Waypoint <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class UnityVectorExtension Fields k_Epsion Declaration public const float k_Epsion = 0.0001F Field Value Type Description Single Methods AlmostZero(Vector3) Declaration public static bool AlmostZero(this Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description Boolean"
  },
  "api/Saro.Gameplay.Interact.SimpleTranslator.html": {
    "href": "api/Saro.Gameplay.Interact.SimpleTranslator.html",
    "title": "Class SimpleTranslator | MGF Gameplay | 0.1.0",
    "keywords": "Class SimpleTranslator Inheritance Object GameCommandHandler SimpleTransformer SimpleTranslator Inherited Members SimpleTransformer.loopType SimpleTransformer.duration SimpleTransformer.accelCurve SimpleTransformer.activate SimpleTransformer.OnStartCommand SimpleTransformer.OnStopCommand SimpleTransformer.previewPercent SimpleTransformer.PerformInteraction() GameCommandHandler.oneShot GameCommandHandler.coolDown GameCommandHandler.startDelay GameCommandHandler.m_IsTriggered GameCommandHandler.OnInteraction() GameCommandHandler.Awake() Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SimpleTranslator : SimpleTransformer Fields end Declaration public Vector3 end Field Value Type Description Vector3 movable Declaration public Transform movable Field Value Type Description Transform start Declaration public Vector3 start Field Value Type Description Vector3 Methods PerformTransform(Single) Declaration public override void PerformTransform(float percent) Parameters Type Name Description Single percent Overrides SimpleTransformer.PerformTransform(Single)"
  },
  "api/Saro.Gameplay.Ability.ProjectileObj.html": {
    "href": "api/Saro.Gameplay.Ability.ProjectileObj.html",
    "title": "Struct ProjectileObj | MGF Gameplay | 0.1.0",
    "keywords": "Struct ProjectileObj Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct ProjectileObj : IEcsComponent, IEcsAutoReset<ProjectileObj> Fields caster Declaration public EcsEntity caster Field Value Type Description EcsEntity data Declaration public ProjectileData data Field Value Type Description ProjectileData eventScript Declaration public IProjectileEventScript eventScript Field Value Type Description IProjectileEventScript level Declaration public int level Field Value Type Description Int32 speed Declaration public float speed Field Value Type Description Single speical Declaration public IReadOnlyList<VarPair> speical Field Value Type Description IReadOnlyList < VarPair > Methods AutoReset(ref ProjectileObj) Declaration public void AutoReset(ref ProjectileObj c) Parameters Type Name Description ProjectileObj c CreateObj(EcsWorld, Projectile, Single, Single, Single, Int32, EcsEntity, Int32) Declaration public static EcsEntity CreateObj(EcsWorld world, Projectile projectile, float speed, float lifeSpan, float canHitAfterCreated, int collisionLayer, EcsEntity caster = null, int level = 0) Parameters Type Name Description EcsWorld world Projectile projectile Single speed Single lifeSpan Single canHitAfterCreated Int32 collisionLayer EcsEntity caster Int32 level Returns Type Description EcsEntity CreateObj(EcsWorld, String, Single, Single, Single, Int32, EcsEntity, Int32) Declaration public static EcsEntity CreateObj(EcsWorld world, string projectileId, float speed, float lifeSpan, float canHitAfterCreated, int collisionLayer, EcsEntity caster = null, int level = 0) Parameters Type Name Description EcsWorld world String projectileId Single speed Single lifeSpan Single canHitAfterCreated Int32 collisionLayer EcsEntity caster Int32 level Returns Type Description EcsEntity Extension Methods ProjectileUtility.OnHit(ref ProjectileObj, EcsEntity, EcsEntity, Vector3) ProjectileUtility.Destroy(ref ProjectileObj, EcsEntity)"
  },
  "api/Saro.Gameplay.Ability.ModifierObj.html": {
    "href": "api/Saro.Gameplay.Ability.ModifierObj.html",
    "title": "Class ModifierObj | MGF Gameplay | 0.1.0",
    "keywords": "Class ModifierObj 属性修改器 需要自定义的运算优先级，重写 CalcCurrentValue() Inheritance Object ModifierObj Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class ModifierObj : IReference Properties ModifierOp 修改器的计算方式 Declaration public EModifierOp ModifierOp { get; } Property Value Type Description EModifierOp Poolable 是对象池生成的 Declaration public bool Poolable { get; } Property Value Type Description Boolean Source 修改器的来源对象，用于跟踪 改成 接口形式，接口需要保存 ModifierConfig，此对象生命周期终结时，可以直接移除所有modifier Declaration public IModifierSource Source { get; } Property Value Type Description IModifierSource Value 修改器的值 Declaration public float Value { get; } Property Value Type Description Single Methods Create(Int32, Single, EModifierOp, IModifierSource, Boolean) Declaration public static ModifierObj Create(int attribute, float value, EModifierOp op, IModifierSource source, bool poolable = true) Parameters Type Name Description Int32 attribute Single value EModifierOp op IModifierSource source Boolean poolable Returns Type Description ModifierObj Create(Int32, Single, Int32, IModifierSource, Boolean) Declaration public static ModifierObj Create(int attribute, float value, int op, IModifierSource source, bool poolable = true) Parameters Type Name Description Int32 attribute Single value Int32 op IModifierSource source Boolean poolable Returns Type Description ModifierObj Release(ModifierObj) Declaration public static void Release(ModifierObj modifier) Parameters Type Name Description ModifierObj modifier ToString() Declaration public override string ToString() Returns Type Description String"
  },
  "api/Saro.Gameplay.Ability.EventArgs_ProjectileHit.html": {
    "href": "api/Saro.Gameplay.Ability.EventArgs_ProjectileHit.html",
    "title": "Class EventArgs_ProjectileHit | MGF Gameplay | 0.1.0",
    "keywords": "Class EventArgs_ProjectileHit Inheritance Object GameplayEventArgs EventArgs_ProjectileHit Inherited Members GameplayEventArgs.Release(GameplayEventArgs) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class EventArgs_ProjectileHit : GameplayEventArgs, ICloneable Fields hitPoint Declaration public Vector3 hitPoint Field Value Type Description Vector3 projectile Declaration public EcsEntity projectile Field Value Type Description EcsEntity target Declaration public EcsEntity target Field Value Type Description EcsEntity Methods Clone() Declaration public override object Clone() Returns Type Description Object Overrides GameplayEventArgs.Clone() Create(EcsEntity, EcsEntity, Vector3) Declaration public static EventArgs_ProjectileHit Create(EcsEntity projectile, EcsEntity target, Vector3 hitPoint) Parameters Type Name Description EcsEntity projectile EcsEntity target Vector3 hitPoint Returns Type Description EventArgs_ProjectileHit IReferenceClear() Declaration public override void IReferenceClear() Overrides GameplayEventArgs.IReferenceClear() ToString() Declaration public override string ToString() Returns Type Description String"
  },
  "api/Saro.Gameplay.Ability.MotionCtxUtility.html": {
    "href": "api/Saro.Gameplay.Ability.MotionCtxUtility.html",
    "title": "Class MotionCtxUtility | MGF Gameplay | 0.1.0",
    "keywords": "Class MotionCtxUtility Inheritance Object MotionCtxUtility Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class MotionCtxUtility Methods ClearReference(ref MotionCtx) Declaration public static void ClearReference(this ref MotionCtx ctx) Parameters Type Name Description MotionCtx ctx HasClip(String) Declaration public static bool HasClip(string clipId) Parameters Type Name Description String clipId Returns Type Description Boolean Pause(ref MotionCtx) Declaration public static void Pause(this ref MotionCtx ctx) Parameters Type Name Description MotionCtx ctx PlayBackground(ref MotionCtx, MotionClip, Single) Declaration public static ObjectHandle<MotionState> PlayBackground(this ref MotionCtx ctx, MotionClip motionClip, float crossFade = 0F) Parameters Type Name Description MotionCtx ctx MotionClip motionClip Single crossFade Returns Type Description ObjectHandle < MotionState > PlayBackground(ref MotionCtx, MotionState, Single) Declaration public static ObjectHandle<MotionState> PlayBackground(this ref MotionCtx ctx, MotionState motion, float crossFade = 0F) Parameters Type Name Description MotionCtx ctx MotionState motion Single crossFade Returns Type Description ObjectHandle < MotionState > PlayBackground(ref MotionCtx, String, Single) Declaration public static ObjectHandle<MotionState> PlayBackground(this ref MotionCtx ctx, string motionId, float crossFade = 0F) Parameters Type Name Description MotionCtx ctx String motionId Single crossFade Returns Type Description ObjectHandle < MotionState > SetDefaultMotion(ref MotionCtx, MotionClip) Declaration public static void SetDefaultMotion(this ref MotionCtx ctx, MotionClip motionClip) Parameters Type Name Description MotionCtx ctx MotionClip motionClip SetState(ref MotionCtx, MotionClip, Single) Declaration public static ObjectHandle<MotionState> SetState(this ref MotionCtx ctx, MotionClip clip, float crossFade = 0F) Parameters Type Name Description MotionCtx ctx MotionClip clip Single crossFade Returns Type Description ObjectHandle < MotionState > SetState(ref MotionCtx, MotionState, Single) Declaration public static ObjectHandle<MotionState> SetState(this ref MotionCtx ctx, MotionState obj, float crossFade = 0F) Parameters Type Name Description MotionCtx ctx MotionState obj Single crossFade Returns Type Description ObjectHandle < MotionState > SetState(ref MotionCtx, String, Single) Declaration public static ObjectHandle<MotionState> SetState(this ref MotionCtx ctx, string motionId, float crossFade = 0F) Parameters Type Name Description MotionCtx ctx String motionId Single crossFade Returns Type Description ObjectHandle < MotionState > StopAll(ref MotionCtx) Declaration public static void StopAll(this ref MotionCtx ctx) Parameters Type Name Description MotionCtx ctx"
  },
  "api/Saro.Gameplay.Ability.AoESystem.html": {
    "href": "api/Saro.Gameplay.Ability.AoESystem.html",
    "title": "Class AoESystem | MGF Gameplay | 0.1.0",
    "keywords": "Class AoESystem Inheritance Object AoESystem Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class AoESystem : IEcsRunSystem Properties Enable Declaration public bool Enable { get; set; } Property Value Type Description Boolean Methods Run(EcsSystems, Single) Declaration public void Run(EcsSystems systems, float deltaTime) Parameters Type Name Description EcsSystems systems Single deltaTime"
  },
  "api/Saro.SPhysics.ContactTester_SphereSphere.html": {
    "href": "api/Saro.SPhysics.ContactTester_SphereSphere.html",
    "title": "Class ContactTester_SphereSphere | MGF Gameplay | 0.1.0",
    "keywords": "Class ContactTester_SphereSphere Inheritance Object ContactTesterBase < SphereShape , SphereShape > ContactTester_SphereSphere Inherited Members ContactTesterBase<SphereShape, SphereShape>.Enable ContactTesterBase<SphereShape, SphereShape>.m_PossibleContactPool ContactTesterBase<SphereShape, SphereShape>.m_World ContactTesterBase<SphereShape, SphereShape>.m_TriggerPool ContactTesterBase<SphereShape, SphereShape>.TestPair(PossibleContact<SphereShape, SphereShape>) ContactTesterBase<SphereShape, SphereShape>.PostInit(EcsSystems) ContactTesterBase<SphereShape, SphereShape>.AddContact(PossibleContact<SphereShape, SphereShape>, Single, Vector3, Vector3) Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class ContactTester_SphereSphere : ContactTesterBase<SphereShape, SphereShape>, IEcsRunSystem Methods PostInit(EcsSystems) Declaration protected override void PostInit(EcsSystems systems) Parameters Type Name Description EcsSystems systems Overrides Saro.SPhysics.ContactTesterBase<Saro.SPhysics.SphereShape, Saro.SPhysics.SphereShape>.PostInit(EcsSystems) TestPair(PossibleContact<SphereShape, SphereShape>) Declaration protected override void TestPair(in PossibleContact<SphereShape, SphereShape> possibleContact) Parameters Type Name Description PossibleContact < SphereShape , SphereShape > possibleContact Overrides Saro.SPhysics.ContactTesterBase<Saro.SPhysics.SphereShape, Saro.SPhysics.SphereShape>.TestPair(Saro.SPhysics.PossibleContact<Saro.SPhysics.SphereShape, Saro.SPhysics.SphereShape>)"
  },
  "api/Saro.Gameplay.Ability.ProjectileData.html": {
    "href": "api/Saro.Gameplay.Ability.ProjectileData.html",
    "title": "Struct ProjectileData | MGF Gameplay | 0.1.0",
    "keywords": "Struct ProjectileData Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct ProjectileData Fields eventContainer Declaration public EventContainer eventContainer Field Value Type Description EventContainer hitTimes Declaration public int hitTimes Field Value Type Description Int32 id Declaration public string id Field Value Type Description String prefab Declaration public string prefab Field Value Type Description String radius Declaration public float radius Field Value Type Description Single sameTargetCd Declaration public float sameTargetCd Field Value Type Description Single"
  },
  "api/Saro.Gameplay.Ability.AbilityCtxUtility.html": {
    "href": "api/Saro.Gameplay.Ability.AbilityCtxUtility.html",
    "title": "Class AbilityCtxUtility | MGF Gameplay | 0.1.0",
    "keywords": "Class AbilityCtxUtility Inheritance Object AbilityCtxUtility Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class AbilityCtxUtility Methods CastAbility(ref AbilityCtx, String) Declaration public static ObjectHandle<MotionState> CastAbility(this ref AbilityCtx ctx, string abilityId) Parameters Type Name Description AbilityCtx ctx String abilityId Returns Type Description ObjectHandle < MotionState > LearnAbility(ref AbilityCtx, String, EcsEntity, Int32) Declaration public static void LearnAbility(this ref AbilityCtx ctx, string abilityId, EcsEntity caster, int level = 0) Parameters Type Name Description AbilityCtx ctx String abilityId EcsEntity caster Int32 level RemoveAbility(ref AbilityCtx, String) Declaration public static void RemoveAbility(this ref AbilityCtx ctx, string abilityId) Parameters Type Name Description AbilityCtx ctx String abilityId"
  },
  "api/Saro.SPhysics.SphereShape.html": {
    "href": "api/Saro.SPhysics.SphereShape.html",
    "title": "Struct SphereShape | MGF Gameplay | 0.1.0",
    "keywords": "Struct SphereShape Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct SphereShape : IShape, IEcsComponent Fields center Declaration public float3 center Field Value Type Description float3 ID Declaration public const int ID = 1 Field Value Type Description Int32 radius Declaration public float radius Field Value Type Description Single Methods ScaleRadius(Int32, EcsWorld) Declaration public float ScaleRadius(int entity, EcsWorld world) Parameters Type Name Description Int32 entity EcsWorld world Returns Type Description Single TypeId() Declaration public int TypeId() Returns Type Description Int32 Implements IShape.TypeId()"
  },
  "api/Saro.SPhysics.RaycastTester-1.html": {
    "href": "api/Saro.SPhysics.RaycastTester-1.html",
    "title": "Class RaycastTester<Shape> | MGF Gameplay | 0.1.0",
    "keywords": "Class RaycastTester<Shape> Inheritance Object QueryTester RaycastTester<Shape> RaycastSphereTester Inherited Members QueryTester.m_World QueryTester.CreateTesters(EcsWorld) Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class RaycastTester<Shape> : QueryTester where Shape : struct, IShape Type Parameters Name Description Shape Constructors RaycastTester(EcsWorld) Declaration protected RaycastTester(EcsWorld world) Parameters Type Name Description EcsWorld world Methods Raycast(float3, float3, Int32, Shape, ref Hit) Declaration protected abstract bool Raycast(in float3 start, in float3 end, int body, in Shape shape, ref Hit hit) Parameters Type Name Description float3 start float3 end Int32 body Shape shape Hit hit Returns Type Description Boolean Raycast(float3, float3, Int32, ref Hit) Declaration public override sealed bool Raycast(in float3 start, in float3 end, int body, ref Hit hit) Parameters Type Name Description float3 start float3 end Int32 body Hit hit Returns Type Description Boolean Overrides QueryTester.Raycast(float3, float3, Int32, ref Hit)"
  },
  "api/Saro.Gameplay.Waypoint.html": {
    "href": "api/Saro.Gameplay.Waypoint.html",
    "title": "Namespace Saro.Gameplay.Waypoint | MGF Gameplay | 0.1.0",
    "keywords": "Namespace Saro.Gameplay.Waypoint Classes BezierPath Cart PathBase UnityVectorExtension Structs BezierPath.Waypoint Enums PathBase.EPositionUnits"
  },
  "api/Saro.Gameplay.Common.Script.html": {
    "href": "api/Saro.Gameplay.Common.Script.html",
    "title": "Struct Script | MGF Gameplay | 0.1.0",
    "keywords": "Struct Script Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Gameplay.Common <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct Script : IEcsComponent, IEcsAutoReset<Script> Fields assets Declaration public List<IScriptAsset> assets Field Value Type Description List < IScriptAsset > instances Declaration public List<IScriptInstance> instances Field Value Type Description List < IScriptInstance > toCreate Declaration public List<IScriptAsset> toCreate Field Value Type Description List < IScriptAsset > toDestroy Declaration public List<IScriptInstance> toDestroy Field Value Type Description List < IScriptInstance > Methods AutoReset(ref Script) Declaration public void AutoReset(ref Script c) Parameters Type Name Description Script c Destroy(ref Script) Declaration public static void Destroy(ref Script c) Parameters Type Name Description Script c"
  },
  "api/Saro.Gameplay.Ability.SnapshotAttribute.html": {
    "href": "api/Saro.Gameplay.Ability.SnapshotAttribute.html",
    "title": "Class SnapshotAttribute | MGF Gameplay | 0.1.0",
    "keywords": "Class SnapshotAttribute Inheritance Object SnapshotAttribute Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class SnapshotAttribute Properties CurrValue Declaration public float CurrValue { get; } Property Value Type Description Single"
  },
  "api/Saro.Gameplay.Ability.TargetTypeObj.html": {
    "href": "api/Saro.Gameplay.Ability.TargetTypeObj.html",
    "title": "Class TargetTypeObj | MGF Gameplay | 0.1.0",
    "keywords": "Class TargetTypeObj Inheritance Object TargetTypeObj Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class TargetTypeObj : IReference Methods CreateObj(TargetType, Int32) Declaration public static TargetTypeObj CreateObj(TargetType config, int level = 0) Parameters Type Name Description TargetType config Int32 level Returns Type Description TargetTypeObj IReferenceClear() Declaration protected virtual void IReferenceClear() ReleaseObj(IReference) Declaration public static void ReleaseObj(IReference obj) Parameters Type Name Description IReference obj"
  },
  "api/Saro.Gameplay.Ability.NS_RootMotion.html": {
    "href": "api/Saro.Gameplay.Ability.NS_RootMotion.html",
    "title": "Class NS_RootMotion | MGF Gameplay | 0.1.0",
    "keywords": "Class NS_RootMotion Inheritance Object NotifyState NS_RootMotion Inherited Members NotifyState.range NotifyState.mute NotifyState.MakeObj<T>() Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class NS_RootMotion : NotifyState Fields rootT_x Declaration public FAnimationCurve rootT_x Field Value Type Description FAnimationCurve rootT_y Declaration public FAnimationCurve rootT_y Field Value Type Description FAnimationCurve rootT_z Declaration public FAnimationCurve rootT_z Field Value Type Description FAnimationCurve useRootT_x Declaration public bool useRootT_x Field Value Type Description Boolean useRootT_y Declaration public bool useRootT_y Field Value Type Description Boolean useRootT_z Declaration public bool useRootT_z Field Value Type Description Boolean Methods CreateObj() Declaration public override NotifyStateObj CreateObj() Returns Type Description NotifyStateObj Overrides NotifyState.CreateObj()"
  },
  "api/Saro.SPhysics.BroadPhase_Brute.html": {
    "href": "api/Saro.SPhysics.BroadPhase_Brute.html",
    "title": "Class BroadPhase_Brute | MGF Gameplay | 0.1.0",
    "keywords": "Class BroadPhase_Brute Inheritance Object BroadPhaseBase BroadPhase_Brute Inherited Members BroadPhaseBase.Enable BroadPhaseBase.m_PhysicsData BroadPhaseBase.m_Bodies BroadPhaseBase.m_World BroadPhaseBase.m_BodyMaskPool BroadPhaseBase.m_AabbPool BroadPhaseBase.m_ShapeSpherePool BroadPhaseBase.Init(EcsSystems) BroadPhaseBase.AddTestTask(Int32, Int32, BodyMask, BodyMask) BroadPhaseBase.Raycast(Vector3, Vector3, Int32, Hit) BroadPhaseBase.AddToBroadPhase(Int32, Aabb) Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class BroadPhase_Brute : BroadPhaseBase, IEcsRunSystem Methods FilterPossibleBodies(EcsSystems) Declaration protected override void FilterPossibleBodies(EcsSystems systems) Parameters Type Name Description EcsSystems systems Overrides BroadPhaseBase.FilterPossibleBodies(EcsSystems)"
  },
  "api/Saro.SPhysics.BroadPhaseBase.html": {
    "href": "api/Saro.SPhysics.BroadPhaseBase.html",
    "title": "Class BroadPhaseBase | MGF Gameplay | 0.1.0",
    "keywords": "Class BroadPhaseBase Inheritance Object BroadPhaseBase BroadPhase_Brute BroadPhase_DynamicTree BroadPhase_SAP Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class BroadPhaseBase : IEcsInitSystem, IEcsRunSystem Fields m_AabbPool Declaration protected EcsPool<Aabb> m_AabbPool Field Value Type Description EcsPool < Aabb > m_Bodies Declaration protected EcsFilter m_Bodies Field Value Type Description EcsFilter m_BodyMaskPool Declaration protected EcsPool<BodyMask> m_BodyMaskPool Field Value Type Description EcsPool < BodyMask > m_PhysicsData Declaration protected PhysicsData m_PhysicsData Field Value Type Description PhysicsData m_ShapeSpherePool Declaration protected EcsPool<SphereShape> m_ShapeSpherePool Field Value Type Description EcsPool < SphereShape > m_World Declaration protected EcsWorld m_World Field Value Type Description EcsWorld Properties Enable Declaration public bool Enable { get; set; } Property Value Type Description Boolean Methods AddTestTask(Int32, Int32, BodyMask, BodyMask) Declaration protected void AddTestTask(int bodyA, int bodyB, in BodyMask maskA, in BodyMask maskB) Parameters Type Name Description Int32 bodyA Int32 bodyB BodyMask maskA BodyMask maskB AddToBroadPhase(Int32, Aabb) Declaration public virtual void AddToBroadPhase(int entity, in Aabb aabb) Parameters Type Name Description Int32 entity Aabb aabb FilterPossibleBodies(EcsSystems) Declaration protected abstract void FilterPossibleBodies(EcsSystems systems) Parameters Type Name Description EcsSystems systems Init(EcsSystems) Declaration public void Init(EcsSystems systems) Parameters Type Name Description EcsSystems systems Raycast(Vector3, Vector3, Int32, ref Hit) Declaration public virtual bool Raycast(in Vector3 start, in Vector3 end, int layerMask, ref Hit hit) Parameters Type Name Description Vector3 start Vector3 end Int32 layerMask Hit hit Returns Type Description Boolean"
  },
  "api/Saro.SPhysics.PhysicsData.html": {
    "href": "api/Saro.SPhysics.PhysicsData.html",
    "title": "Class PhysicsData | MGF Gameplay | 0.1.0",
    "keywords": "Class PhysicsData Inheritance Object PhysicsData Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class PhysicsData Constructors PhysicsData(EcsWorld, Int32, Boolean[]) Declaration public PhysicsData(EcsWorld world, int shapeTypesAmount, bool[] physicsIgnoreMatrix) Parameters Type Name Description EcsWorld world Int32 shapeTypesAmount Boolean [] physicsIgnoreMatrix Fields contactTestersMatrix Declaration public ContactTesterReference[][] contactTestersMatrix Field Value Type Description ContactTesterReference [][] layerCollisionMatrix Declaration public bool[][] layerCollisionMatrix Field Value Type Description Boolean [][] Methods GetLayerCollision(Int32, Int32) Declaration public bool GetLayerCollision(int layerA, int layerB) Parameters Type Name Description Int32 layerA Int32 layerB Returns Type Description Boolean"
  },
  "api/Saro.Gameplay.Quest.IQuestReward.html": {
    "href": "api/Saro.Gameplay.Quest.IQuestReward.html",
    "title": "Interface IQuestReward | MGF Gameplay | 0.1.0",
    "keywords": "Interface IQuestReward Namespace : Saro.Gameplay.Quest <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IQuestReward"
  },
  "api/Saro.Gameplay.Quest.TestQuestDataProvider.html": {
    "href": "api/Saro.Gameplay.Quest.TestQuestDataProvider.html",
    "title": "Class TestQuestDataProvider | MGF Gameplay | 0.1.0",
    "keywords": "Class TestQuestDataProvider Inheritance Object TestQuestDataProvider Namespace : Saro.Gameplay.Quest <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class TestQuestDataProvider : IQuestDataProvider Explicit Interface Implementations IQuestDataProvider.Load(Dictionary<Int32, Quest>) Declaration void IQuestDataProvider.Load(Dictionary<int, Quest> questMap) Parameters Type Name Description Dictionary < Int32 , Quest > questMap Implements IQuestDataProvider.Load(Dictionary<Int32, Quest>)"
  },
  "api/Saro.Gameplay.Ability.SnapshotDefs.html": {
    "href": "api/Saro.Gameplay.Ability.SnapshotDefs.html",
    "title": "Class SnapshotDefs | MGF Gameplay | 0.1.0",
    "keywords": "Class SnapshotDefs Inheritance Object SnapshotDefs Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class SnapshotDefs Fields snapshotAttributes Declaration public List<int> snapshotAttributes Field Value Type Description List < Int32 >"
  },
  "api/Saro.Gameplay.Ability.NSObj_RootMotion.html": {
    "href": "api/Saro.Gameplay.Ability.NSObj_RootMotion.html",
    "title": "Class NSObj_RootMotion | MGF Gameplay | 0.1.0",
    "keywords": "Class NSObj_RootMotion Inheritance Object NotifyStateObj NSObj_RootMotion Inherited Members NotifyStateObj.mute NotifyStateObj.range NotifyStateObj.NotifyEnd_Internal(EcsEntity, MotionState) NotifyStateObj.IReferenceClear() Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class NSObj_RootMotion : NotifyStateObj Fields rootT_x Declaration public FAnimationCurve rootT_x Field Value Type Description FAnimationCurve rootT_y Declaration public FAnimationCurve rootT_y Field Value Type Description FAnimationCurve rootT_z Declaration public FAnimationCurve rootT_z Field Value Type Description FAnimationCurve useRootT_x Declaration public bool useRootT_x Field Value Type Description Boolean useRootT_y Declaration public bool useRootT_y Field Value Type Description Boolean useRootT_z Declaration public bool useRootT_z Field Value Type Description Boolean Methods NotifyBegin_Internal(EcsEntity, MotionState) Declaration protected override void NotifyBegin_Internal(EcsEntity source, MotionState motion) Parameters Type Name Description EcsEntity source MotionState motion Overrides NotifyStateObj.NotifyBegin_Internal(EcsEntity, MotionState) NotifyTick_Internal(EcsEntity, MotionState) Declaration protected override void NotifyTick_Internal(EcsEntity source, MotionState motion) Parameters Type Name Description EcsEntity source MotionState motion Overrides NotifyStateObj.NotifyTick_Internal(EcsEntity, MotionState)"
  },
  "api/Saro.Gameplay.Ability.AbilityFeature.html": {
    "href": "api/Saro.Gameplay.Ability.AbilityFeature.html",
    "title": "Class AbilityFeature | MGF Gameplay | 0.1.0",
    "keywords": "Class AbilityFeature Inheritance Object AbilityFeature Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class AbilityFeature : EcsSystemFeature Constructors AbilityFeature() Declaration public AbilityFeature()"
  },
  "api/Saro.Gameplay.Tag.OnGameplayTagCountChanged.html": {
    "href": "api/Saro.Gameplay.Tag.OnGameplayTagCountChanged.html",
    "title": "Delegate OnGameplayTagCountChanged | MGF Gameplay | 0.1.0",
    "keywords": "Delegate OnGameplayTagCountChanged Namespace : Saro.Gameplay.Tag <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public delegate void OnGameplayTagCountChanged(GameplayTag tag, int tagCount); Parameters Type Name Description GameplayTag tag Int32 tagCount"
  },
  "api/Saro.Gameplay.Ability.DefaultAttributeSetExtension.html": {
    "href": "api/Saro.Gameplay.Ability.DefaultAttributeSetExtension.html",
    "title": "Class DefaultAttributeSetExtension | MGF Gameplay | 0.1.0",
    "keywords": "Class DefaultAttributeSetExtension Inheritance Object DefaultAttributeSetExtension Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class DefaultAttributeSetExtension Methods InitAttrituteFromAsset(DefaultAttributeSet) TODO 配表 Declaration public static void InitAttrituteFromAsset(this DefaultAttributeSet self) Parameters Type Name Description DefaultAttributeSet self IsAlive(GameplayAttributeSet) Declaration public static bool IsAlive(this GameplayAttributeSet self) Parameters Type Name Description GameplayAttributeSet self Returns Type Description Boolean"
  },
  "api/Saro.Gameplay.Interact.SendOnTriggerExit.html": {
    "href": "api/Saro.Gameplay.Interact.SendOnTriggerExit.html",
    "title": "Class SendOnTriggerExit | MGF Gameplay | 0.1.0",
    "keywords": "Class SendOnTriggerExit Inheritance Object GameCommandSender TriggerCommand SendOnTriggerExit Inherited Members TriggerCommand.layers TriggerCommand.Reset() GameCommandSender.interactiveObjects GameCommandSender.oneShot GameCommandSender.coolDown GameCommandSender.Temperature GameCommandSender.IsTriggered GameCommandSender.Send() Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SendOnTriggerExit : TriggerCommand"
  },
  "api/Saro.Gameplay.Tag.GameplayTagContainer.Enumerator.html": {
    "href": "api/Saro.Gameplay.Tag.GameplayTagContainer.Enumerator.html",
    "title": "Struct GameplayTagContainer.Enumerator | MGF Gameplay | 0.1.0",
    "keywords": "Struct GameplayTagContainer.Enumerator Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Gameplay.Tag <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct Enumerator : IEnumerator<GameplayTag>, IDisposable, IEnumerator Constructors Enumerator(IList<GameplayTag>) Declaration public Enumerator(IList<GameplayTag> gameplayTags) Parameters Type Name Description IList < GameplayTag > gameplayTags Properties Current Declaration public GameplayTag Current { get; } Property Value Type Description GameplayTag Implements IEnumerator<T>.Current Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() MoveNext() Declaration public bool MoveNext() Returns Type Description Boolean Implements IEnumerator.MoveNext() Reset() Declaration public void Reset() Implements IEnumerator.Reset() Explicit Interface Implementations IEnumerator.Current Declaration object IEnumerator.Current { get; } Returns Type Description Object Implements IEnumerator.Current"
  },
  "api/Saro.Gameplay.Ability.ITargetType_DataDriven.html": {
    "href": "api/Saro.Gameplay.Ability.ITargetType_DataDriven.html",
    "title": "Interface ITargetType_DataDriven | MGF Gameplay | 0.1.0",
    "keywords": "Interface ITargetType_DataDriven Inherited Members IVarOwner.Parse(IReadOnlyList<VarPair>) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface ITargetType_DataDriven : IVarOwner"
  },
  "api/Saro.Gameplay.Tag.GameplayTagAssetNode.html": {
    "href": "api/Saro.Gameplay.Tag.GameplayTagAssetNode.html",
    "title": "Class GameplayTagAssetNode | MGF Gameplay | 0.1.0",
    "keywords": "Class GameplayTagAssetNode Inheritance Object GameplayTagAssetNode Namespace : Saro.Gameplay.Tag <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class GameplayTagAssetNode Constructors GameplayTagAssetNode() Declaration public GameplayTagAssetNode() GameplayTagAssetNode(String, String) Declaration public GameplayTagAssetNode(string tagName, string tagDevComment = null) Parameters Type Name Description String tagName String tagDevComment Fields TagName Declaration public string TagName Field Value Type Description String"
  },
  "api/Saro.Gameplay.Interact.SimpleTransformer.html": {
    "href": "api/Saro.Gameplay.Interact.SimpleTransformer.html",
    "title": "Class SimpleTransformer | MGF Gameplay | 0.1.0",
    "keywords": "Class SimpleTransformer Inheritance Object GameCommandHandler SimpleTransformer SimpleRotator SimpleTranslator Inherited Members GameCommandHandler.oneShot GameCommandHandler.coolDown GameCommandHandler.startDelay GameCommandHandler.m_IsTriggered GameCommandHandler.OnInteraction() GameCommandHandler.Awake() Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class SimpleTransformer : GameCommandHandler Fields accelCurve Declaration public AnimationCurve accelCurve Field Value Type Description AnimationCurve activate Declaration public bool activate Field Value Type Description Boolean duration Declaration public float duration Field Value Type Description Single loopType Declaration public SimpleTransformer.ELoopType loopType Field Value Type Description SimpleTransformer.ELoopType OnStartCommand Declaration public GameCommandSender OnStartCommand Field Value Type Description GameCommandSender OnStopCommand Declaration public GameCommandSender OnStopCommand Field Value Type Description GameCommandSender previewPercent Declaration public float previewPercent Field Value Type Description Single Methods PerformInteraction() Declaration public override void PerformInteraction() Overrides GameCommandHandler.PerformInteraction() PerformTransform(Single) Declaration public virtual void PerformTransform(float percent) Parameters Type Name Description Single percent"
  },
  "api/Saro.Gameplay.Ability.ITargetType_AoE.html": {
    "href": "api/Saro.Gameplay.Ability.ITargetType_AoE.html",
    "title": "Interface ITargetType_AoE | MGF Gameplay | 0.1.0",
    "keywords": "Interface ITargetType_AoE Inherited Members IVarOwner.Parse(IReadOnlyList<VarPair>) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface ITargetType_AoE : IVarOwner"
  },
  "api/Saro.Gameplay.Ability.IDataProvider-1.html": {
    "href": "api/Saro.Gameplay.Ability.IDataProvider-1.html",
    "title": "Interface IDataProvider<T> | MGF Gameplay | 0.1.0",
    "keywords": "Interface IDataProvider<T> Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IDataProvider<T> Type Parameters Name Description T Methods Load() Declaration List<T> Load() Returns Type Description List <T> LoadAsync() Declaration UniTask<List<T>> LoadAsync() Returns Type Description UniTask < List <T>> Save() Declaration void Save()"
  },
  "api/Saro.Gameplay.Quest.QuestSystem.html": {
    "href": "api/Saro.Gameplay.Quest.QuestSystem.html",
    "title": "Class QuestSystem | MGF Gameplay | 0.1.0",
    "keywords": "Class QuestSystem Inheritance Object QuestSystem Namespace : Saro.Gameplay.Quest <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class QuestSystem Constructors QuestSystem() Declaration public QuestSystem() QuestSystem(IQuestDataProvider) Declaration public QuestSystem(IQuestDataProvider provider) Parameters Type Name Description IQuestDataProvider provider Properties QuestMap Declaration public IReadOnlyDictionary<int, Quest> QuestMap { get; } Property Value Type Description IReadOnlyDictionary < Int32 , Quest >"
  },
  "api/Saro.SPhysics.ContactTesterBase-2.html": {
    "href": "api/Saro.SPhysics.ContactTesterBase-2.html",
    "title": "Class ContactTesterBase<ShapeA, ShapeB> | MGF Gameplay | 0.1.0",
    "keywords": "Class ContactTesterBase<ShapeA, ShapeB> Inheritance Object ContactTesterBase<ShapeA, ShapeB> ContactTester_BoxBox ContactTester_SphereBox ContactTester_SphereSphere Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class ContactTesterBase<ShapeA, ShapeB> : IEcsInitSystem, IEcsRunSystem where ShapeA : struct, IShape where ShapeB : struct, IShape Type Parameters Name Description ShapeA ShapeB Fields m_PossibleContactPool Declaration protected EcsPool<PossibleContact<ShapeA, ShapeB>> m_PossibleContactPool Field Value Type Description EcsPool < PossibleContact <ShapeA, ShapeB>> m_TriggerPool Declaration protected EcsPool<Trigger> m_TriggerPool Field Value Type Description EcsPool < Trigger > m_World Declaration protected EcsWorld m_World Field Value Type Description EcsWorld Properties Enable Declaration public bool Enable { get; set; } Property Value Type Description Boolean Methods AddContact(PossibleContact<ShapeA, ShapeB>, Single, Vector3, Vector3) Declaration protected void AddContact(in PossibleContact<ShapeA, ShapeB> possibleContact, float penetration, in Vector3 normal, in Vector3 point) Parameters Type Name Description PossibleContact <ShapeA, ShapeB> possibleContact Single penetration Vector3 normal Vector3 point PostInit(EcsSystems) Declaration protected virtual void PostInit(EcsSystems systems) Parameters Type Name Description EcsSystems systems TestPair(PossibleContact<ShapeA, ShapeB>) Declaration protected abstract void TestPair(in PossibleContact<ShapeA, ShapeB> possibleContact) Parameters Type Name Description PossibleContact <ShapeA, ShapeB> possibleContact"
  },
  "api/Saro.Gameplay.Quest.html": {
    "href": "api/Saro.Gameplay.Quest.html",
    "title": "Namespace Saro.Gameplay.Quest | MGF Gameplay | 0.1.0",
    "keywords": "Namespace Saro.Gameplay.Quest Classes Quest QuestSystem TestQuestDataProvider Interfaces IQuestAccepter 任务接受者 IQuestCondition IQuestDataProvider IQuestGiver 任务派发者 IQuestReward Enums EQuestStatus"
  },
  "api/Saro.Gameplay.Ability.GameplayAttribute.html": {
    "href": "api/Saro.Gameplay.Ability.GameplayAttribute.html",
    "title": "Class GameplayAttribute | MGF Gameplay | 0.1.0",
    "keywords": "Class GameplayAttribute Inheritance Object GameplayAttribute GameplayAttributeBase Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class GameplayAttribute Fields m_BaseValue Declaration protected float m_BaseValue Field Value Type Description Single m_CurrentValue Declaration protected float m_CurrentValue Field Value Type Description Single m_Dirty Declaration protected bool m_Dirty Field Value Type Description Boolean m_Modifiers Declaration protected readonly List<ModifierObj> m_Modifiers Field Value Type Description List < ModifierObj > Properties BaseValue Declaration public virtual float BaseValue { get; set; } Property Value Type Description Single CurrValue Declaration public virtual float CurrValue { get; set; } Property Value Type Description Single Modifiers Declaration public IReadOnlyCollection<ModifierObj> Modifiers { get; } Property Value Type Description IReadOnlyCollection < ModifierObj > Set Declaration public GameplayAttributeSet Set { get; set; } Property Value Type Description GameplayAttributeSet Methods AddModifier(ModifierObj) Declaration public virtual void AddModifier(ModifierObj modifier) Parameters Type Name Description ModifierObj modifier CalcCurrentValue() Declaration protected virtual float CalcCurrentValue() Returns Type Description Single RaiseOnBaseValueChangedEvent(Single, Single) Declaration protected void RaiseOnBaseValueChangedEvent(float oldValue, float newValue) Parameters Type Name Description Single oldValue Single newValue RaiseOnCurrentValueChangedEvent(Single, Single) Declaration protected void RaiseOnCurrentValueChangedEvent(float oldValue, float newValue) Parameters Type Name Description Single oldValue Single newValue RemoveModifiers(IModifierSource) Declaration public void RemoveModifiers(IModifierSource source) Parameters Type Name Description IModifierSource source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Events OnBaseValueChanged Declaration public event AttributeChanged OnBaseValueChanged Event Type Type Description AttributeChanged OnCurrentValueChanged Declaration public event AttributeChanged OnCurrentValueChanged Event Type Type Description AttributeChanged"
  },
  "api/Saro.Gameplay.Ability.EventArgs_AoeEnterExit.html": {
    "href": "api/Saro.Gameplay.Ability.EventArgs_AoeEnterExit.html",
    "title": "Class EventArgs_AoeEnterExit | MGF Gameplay | 0.1.0",
    "keywords": "Class EventArgs_AoeEnterExit Inheritance Object GameplayEventArgs EventArgs_AoeEnterExit Inherited Members GameplayEventArgs.Release(GameplayEventArgs) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class EventArgs_AoeEnterExit : GameplayEventArgs, ICloneable Fields entityList Declaration public List<EcsEntity> entityList Field Value Type Description List < EcsEntity > Methods Clone() Declaration public override object Clone() Returns Type Description Object Overrides GameplayEventArgs.Clone() Create(List<EcsEntity>) Declaration public static EventArgs_AoeEnterExit Create(List<EcsEntity> entityList) Parameters Type Name Description List < EcsEntity > entityList Returns Type Description EventArgs_AoeEnterExit IReferenceClear() Declaration public override void IReferenceClear() Overrides GameplayEventArgs.IReferenceClear() ToString() Declaration public override string ToString() Returns Type Description String"
  },
  "api/Saro.Gameplay.Ability.Effect.html": {
    "href": "api/Saro.Gameplay.Ability.Effect.html",
    "title": "Class Effect | MGF Gameplay | 0.1.0",
    "keywords": "Class Effect 游戏性效果。管理属性，触发游戏里的各种效果！ Inheritance Object Effect Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public sealed class Effect Fields applicationTagRequirements Declaration [SerializeReference] public GameplayTagRequirements applicationTagRequirements Field Value Type Description GameplayTagRequirements autoApplyModifier 是否自动应用属性修改器，触发时机 Effect_OnCreated ，应用规则，modifierVal * stackCount 如需自己管理叠加属性，设置 为false，然后在 Effect_OnCreated 、 Effect_OnStackCountChanged 事件里，自己处理属性叠加 Declaration public bool autoApplyModifier Field Value Type Description Boolean chanceToApply 应用buff的几率（0-1） 1：100% 0：0% Declaration public VarFloat chanceToApply Field Value Type Description VarFloat cleanStackOnOverflow OnOverflow后 立即清空堆栈（也会让buff失效） Declaration public bool cleanStackOnOverflow Field Value Type Description Boolean description 描述 Declaration public string description Field Value Type Description String displayIcon 显示图标 Declaration public byte displayIcon Field Value Type Description Byte displayName 名称 Declaration public string displayName Field Value Type Description String duration 持续时间 -1：永续 0：瞬时 0:持续 Declaration [SerializeReference] public IVarMagnitudeCalculation duration Field Value Type Description IVarMagnitudeCalculation eventContainer Declaration [SerializeReference] public EventContainer eventContainer Field Value Type Description EventContainer eventScript Declaration public string eventScript Field Value Type Description String executePeriodOnApplication buff应用成功后 立即让OnPeriod生效一次 Declaration public bool executePeriodOnApplication Field Value Type Description Boolean grantedTags Declaration [SerializeReference] public GameplayTagContainer grantedTags Field Value Type Description GameplayTagContainer id Declaration public string id Field Value Type Description String maxStackCount 最大堆叠数 Declaration public VarInt maxStackCount Field Value Type Description VarInt modifiers 修改器数组 Declaration public ModifierDef[] modifiers Field Value Type Description ModifierDef [] onGoingTagRequirements Declaration [SerializeReference] public GameplayTagRequirements onGoingTagRequirements Field Value Type Description GameplayTagRequirements period 间隔生效 周期 Declaration [SerializeReference] public IVarMagnitudeCalculation period Field Value Type Description IVarMagnitudeCalculation priority 优先级 优先级值越小，越先执行 Declaration public int priority Field Value Type Description Int32 removalTagRequirements Declaration [SerializeReference] public GameplayTagRequirements removalTagRequirements Field Value Type Description GameplayTagRequirements removeEffectsWithTags Declaration [SerializeReference] public GameplayTagContainer removeEffectsWithTags Field Value Type Description GameplayTagContainer specialTable Declaration public string specialTable Field Value Type Description String stackDurationRefreshPolicy 堆叠时，Duration的刷新策略 Declaration public EStackDurationRefreshPolicy stackDurationRefreshPolicy Field Value Type Description EStackDurationRefreshPolicy stackExpirationPolicy Duration结束策略 ClearEntireStack = 0 RemoveSingeStackAndRefreshDuration = 1 RefreshDuration = 3 Declaration public EStackExpirationPolicy stackExpirationPolicy Field Value Type Description EStackExpirationPolicy stackingPeriodResetPolicy 堆叠时，Peroid的刷新策略 Declaration public EStackingPeriodResetPolicy stackingPeriodResetPolicy Field Value Type Description EStackingPeriodResetPolicy tags Declaration [SerializeReference] public GameplayTagContainer tags Field Value Type Description GameplayTagContainer vfxName 特效名字，buff创建时生成特效，buff结束时，移除特效 Declaration public string vfxName Field Value Type Description String Properties EventScript 脚本 Declaration public IEffectEventScript EventScript { get; } Property Value Type Description IEffectEventScript Special 特殊参数 Declaration public IReadOnlyList<VarPair> Special { get; } Property Value Type Description IReadOnlyList < VarPair > Methods Parse() Declaration public void Parse()"
  },
  "api/Saro.Gameplay.Ability.Attributes.CreateDelegate.html": {
    "href": "api/Saro.Gameplay.Ability.Attributes.CreateDelegate.html",
    "title": "Delegate Attributes.CreateDelegate | MGF Gameplay | 0.1.0",
    "keywords": "Delegate Attributes.CreateDelegate Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public delegate GameplayAttributeSet CreateDelegate(ref Attributes attributes); Parameters Type Name Description Attributes attributes Returns Type Description GameplayAttributeSet"
  },
  "api/Saro.SPhysics.DelTriggerSystem.html": {
    "href": "api/Saro.SPhysics.DelTriggerSystem.html",
    "title": "Class DelTriggerSystem | MGF Gameplay | 0.1.0",
    "keywords": "Class DelTriggerSystem Inheritance Object DelTriggerSystem Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class DelTriggerSystem : IEcsInitSystem, IEcsRunSystem Properties Enable Declaration public bool Enable { get; set; } Property Value Type Description Boolean"
  },
  "api/Saro.Gameplay.Ability.EffectCtxExtensions.html": {
    "href": "api/Saro.Gameplay.Ability.EffectCtxExtensions.html",
    "title": "Class EffectCtxExtensions | MGF Gameplay | 0.1.0",
    "keywords": "Class EffectCtxExtensions Inheritance Object EffectCtxExtensions Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class EffectCtxExtensions Methods GetTagCount(ref EffectCtx, GameplayTag) Declaration public static void GetTagCount(this ref EffectCtx ctx, GameplayTag tag) Parameters Type Name Description EffectCtx ctx GameplayTag tag RegisterGameplayEvent(ref EffectCtx, GameplayTag, ETagEventType, OnGameplayTagCountChanged) 指定 eventTag，OwnedTags 改变后的响应事件，ApplyEffect 后可能改变 OwnedTags Declaration public static void RegisterGameplayEvent(this ref EffectCtx ctx, GameplayTag eventTag, ETagEventType eventType, OnGameplayTagCountChanged callback) Parameters Type Name Description EffectCtx ctx GameplayTag eventTag ETagEventType eventType OnGameplayTagCountChanged callback RegisterGenericGameplayEvent(ref EffectCtx, OnGameplayTagCountChanged) OwnedTags 任何改变后的响应事件，ApplyEffect 后可能改变 OwnedTags Declaration public static void RegisterGenericGameplayEvent(this ref EffectCtx ctx, OnGameplayTagCountChanged callback) Parameters Type Name Description EffectCtx ctx OnGameplayTagCountChanged callback UpdateTagCount(ref EffectCtx, GameplayTag, Int32) Declaration public static void UpdateTagCount(this ref EffectCtx ctx, GameplayTag tag, int countDelta) Parameters Type Name Description EffectCtx ctx GameplayTag tag Int32 countDelta"
  },
  "api/Saro.Gameplay.Ability.AoEUtility.html": {
    "href": "api/Saro.Gameplay.Ability.AoEUtility.html",
    "title": "Class AoEUtility | MGF Gameplay | 0.1.0",
    "keywords": "Class AoEUtility Inheritance Object AoEUtility Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class AoEUtility Methods Destroy(ref AoEObj, EcsEntity) Declaration public static void Destroy(this ref AoEObj cAoe, EcsEntity eAoe) Parameters Type Name Description AoEObj cAoe EcsEntity eAoe OnEntityEnter(ref AoEObj, EcsEntity, List<EcsEntity>) Declaration public static void OnEntityEnter(this ref AoEObj cAoe, EcsEntity eAoe, List<EcsEntity> enterList) Parameters Type Name Description AoEObj cAoe EcsEntity eAoe List < EcsEntity > enterList OnEntityExit(ref AoEObj, EcsEntity, List<EcsEntity>) Declaration public static void OnEntityExit(this ref AoEObj cAoe, EcsEntity eAoe, List<EcsEntity> exitList) Parameters Type Name Description AoEObj cAoe EcsEntity eAoe List < EcsEntity > exitList"
  },
  "api/Saro.Gameplay.Ability.ITargetTypeObj_AoE.html": {
    "href": "api/Saro.Gameplay.Ability.ITargetTypeObj_AoE.html",
    "title": "Interface ITargetTypeObj_AoE | MGF Gameplay | 0.1.0",
    "keywords": "Interface ITargetTypeObj_AoE Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface ITargetTypeObj_AoE : IReference Methods OnCreate(EcsEntity) Declaration void OnCreate(EcsEntity eAoe) Parameters Type Name Description EcsEntity eAoe OnTick(EcsEntity, Single) Declaration void OnTick(EcsEntity eAoe, float deltaTime) Parameters Type Name Description EcsEntity eAoe Single deltaTime"
  },
  "api/Saro.Gameplay.Common.IScriptAsset-1.html": {
    "href": "api/Saro.Gameplay.Common.IScriptAsset-1.html",
    "title": "Class IScriptAsset<T> | MGF Gameplay | 0.1.0",
    "keywords": "Class IScriptAsset<T> Inheritance Object IScriptAsset IScriptAsset<T> Namespace : Saro.Gameplay.Common <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class IScriptAsset<T> : IScriptAsset where T : IScriptInstance, new() Type Parameters Name Description T Methods CreateInstance(EcsEntity) Declaration public override IScriptInstance CreateInstance(EcsEntity target) Parameters Type Name Description EcsEntity target Returns Type Description IScriptInstance Overrides IScriptAsset.CreateInstance(EcsEntity)"
  },
  "api/Saro.SPhysics.CollisionTester.html": {
    "href": "api/Saro.SPhysics.CollisionTester.html",
    "title": "Class CollisionTester | MGF Gameplay | 0.1.0",
    "keywords": "Class CollisionTester Inheritance Object CollisionTester Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class CollisionTester Methods AABBIntersectWithAABB(float3, float3, float3, float3) Declaration public static bool AABBIntersectWithAABB(in float3 min0, in float3 max0, in float3 min1, in float3 max1) Parameters Type Name Description float3 min0 float3 max0 float3 min1 float3 max1 Returns Type Description Boolean ClosestPointBoundingBox(float3, float3, float3) Declaration public static float3 ClosestPointBoundingBox(in float3 point, in float3 min, in float3 max) Parameters Type Name Description float3 point float3 min float3 max Returns Type Description float3 PointIntersectWithAABB(float3, float3, float3) Declaration public static bool PointIntersectWithAABB(in float3 point, in float3 min, in float3 max) Parameters Type Name Description float3 point float3 min float3 max Returns Type Description Boolean PointIntersectWithSphere(float3, float3, Single) Declaration public static bool PointIntersectWithSphere(in float3 point, in float3 center, float radius) Parameters Type Name Description float3 point float3 center Single radius Returns Type Description Boolean PointToSegmentDist(float3, float3, float3) Declaration public static float PointToSegmentDist(in float3 p1, in float3 p2, in float3 center) Parameters Type Name Description float3 p1 float3 p2 float3 center Returns Type Description Single PointToSegmentDistSqr(float3, float3, float3) Declaration public static float PointToSegmentDistSqr(in float3 p1, in float3 p2, in float3 center) Parameters Type Name Description float3 p1 float3 p2 float3 center Returns Type Description Single SegmentIntersectWithAABB(float3, float3, float3, float3) Declaration public static bool SegmentIntersectWithAABB(in float3 p1, in float3 p2, in float3 min, in float3 max) Parameters Type Name Description float3 p1 float3 p2 float3 min float3 max Returns Type Description Boolean SegmentIntersectWithShpere(float3, float3, float3, Single) Declaration public static bool SegmentIntersectWithShpere(in float3 p1, in float3 p2, in float3 center, float radius) Parameters Type Name Description float3 p1 float3 p2 float3 center Single radius Returns Type Description Boolean SphereIntersectWithAABB(float3, Single, float3, float3) Declaration public static bool SphereIntersectWithAABB(in float3 center, float radius, in float3 min, in float3 max) Parameters Type Name Description float3 center Single radius float3 min float3 max Returns Type Description Boolean SphereIntersectWithSphere(float3, Single, float3, Single) Declaration public static bool SphereIntersectWithSphere(in float3 c1, float r1, in float3 c2, float r2) Parameters Type Name Description float3 c1 Single r1 float3 c2 Single r2 Returns Type Description Boolean TestAABBAABB(float3, float3, float3, float3, ref Single, ref float3) Declaration public static bool TestAABBAABB(in float3 min0, in float3 max0, in float3 min1, in float3 max1, ref float penetration, ref float3 normal) Parameters Type Name Description float3 min0 float3 max0 float3 min1 float3 max1 Single penetration float3 normal Returns Type Description Boolean TestSegmentSphere(float3, float3, float3, Single, ref Single, ref float3, ref float3) Declaration public static bool TestSegmentSphere(in float3 p1, in float3 p2, in float3 center, float radius, ref float distance, ref float3 normal, ref float3 point) Parameters Type Name Description float3 p1 float3 p2 float3 center Single radius Single distance float3 normal float3 point Returns Type Description Boolean TestShpereShpere(float3, Single, float3, Single, ref Single, ref float3, ref float3) Declaration public static bool TestShpereShpere(in float3 c1, float r1, in float3 c2, float r2, ref float penetration, ref float3 normal, ref float3 point) Parameters Type Name Description float3 c1 Single r1 float3 c2 Single r2 Single penetration float3 normal float3 point Returns Type Description Boolean TestSphereAABB(float3, Single, float3, float3, ref Single, ref float3, ref float3) Declaration public static bool TestSphereAABB(in float3 center, float radius, in float3 min, in float3 max, ref float penetration, ref float3 normal, ref float3 point) Parameters Type Name Description float3 center Single radius float3 min float3 max Single penetration float3 normal float3 point Returns Type Description Boolean"
  },
  "api/Saro.Gameplay.Ability.AbilityDebugger.html": {
    "href": "api/Saro.Gameplay.Ability.AbilityDebugger.html",
    "title": "Class AbilityDebugger | MGF Gameplay | 0.1.0",
    "keywords": "Class AbilityDebugger Inheritance Object AbilityDebugger Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class AbilityDebugger : EditorWindow Properties SeletedEntity Declaration public EcsEntity SeletedEntity { get; } Property Value Type Description EcsEntity"
  },
  "api/Saro.SPhysics.RaycastSphereTester.html": {
    "href": "api/Saro.SPhysics.RaycastSphereTester.html",
    "title": "Class RaycastSphereTester | MGF Gameplay | 0.1.0",
    "keywords": "Class RaycastSphereTester Inheritance Object QueryTester RaycastTester < SphereShape > RaycastSphereTester Inherited Members RaycastTester<SphereShape>.Raycast(float3, float3, Int32, Hit) QueryTester.m_World QueryTester.CreateTesters(EcsWorld) Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class RaycastSphereTester : RaycastTester<SphereShape> Constructors RaycastSphereTester(EcsWorld) Declaration public RaycastSphereTester(EcsWorld world) Parameters Type Name Description EcsWorld world Methods Raycast(float3, float3, Int32, SphereShape, ref Hit) Declaration protected override bool Raycast(in float3 start, in float3 end, int body, in SphereShape shape, ref Hit hit) Parameters Type Name Description float3 start float3 end Int32 body SphereShape shape Hit hit Returns Type Description Boolean Overrides Saro.SPhysics.RaycastTester<Saro.SPhysics.SphereShape>.Raycast(float3, float3, System.Int32, Saro.SPhysics.SphereShape, Saro.SPhysics.Hit)"
  },
  "api/Saro.SPhysics.QueryTester.html": {
    "href": "api/Saro.SPhysics.QueryTester.html",
    "title": "Class QueryTester | MGF Gameplay | 0.1.0",
    "keywords": "Class QueryTester Inheritance Object QueryTester RaycastTester<Shape> Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class QueryTester Constructors QueryTester(EcsWorld) Declaration public QueryTester(EcsWorld world) Parameters Type Name Description EcsWorld world Fields m_World Declaration protected EcsWorld m_World Field Value Type Description EcsWorld Methods CreateTesters(EcsWorld) Declaration public static QueryTester[] CreateTesters(EcsWorld world) Parameters Type Name Description EcsWorld world Returns Type Description QueryTester [] Raycast(float3, float3, Int32, ref Hit) Declaration public abstract bool Raycast(in float3 start, in float3 end, int body, ref Hit info) Parameters Type Name Description float3 start float3 end Int32 body Hit info Returns Type Description Boolean"
  },
  "api/Saro.Gameplay.Waypoint.PathBase.EPositionUnits.html": {
    "href": "api/Saro.Gameplay.Waypoint.PathBase.EPositionUnits.html",
    "title": "Enum PathBase.EPositionUnits | MGF Gameplay | 0.1.0",
    "keywords": "Enum PathBase.EPositionUnits Namespace : Saro.Gameplay.Waypoint <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EPositionUnits : byte Fields Name Description Distance Normalized PathUnits"
  },
  "api/Saro.SPhysics.Hit.html": {
    "href": "api/Saro.SPhysics.Hit.html",
    "title": "Struct Hit | MGF Gameplay | 0.1.0",
    "keywords": "Struct Hit Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct Hit Fields distance Declaration public float distance Field Value Type Description Single entity Declaration public int entity Field Value Type Description Int32 normal Declaration public float3 normal Field Value Type Description float3 point Declaration public float3 point Field Value Type Description float3"
  },
  "api/Saro.Gameplay.Tag.html": {
    "href": "api/Saro.Gameplay.Tag.html",
    "title": "Namespace Saro.Gameplay.Tag | MGF Gameplay | 0.1.0",
    "keywords": "Namespace Saro.Gameplay.Tag Classes GameplayTagAssetNode GameplayTagContainer A Tag Container holds a collection of GameplayTags, tags are included explicitly by adding them, and implicitly from adding child tags GameplayTagCountContainer GameplayTagDrawer GameplayTagNode GameplayTagRequirements GameplayTagsManager ParseGameplayTagException Structs GameplayTag GameplayTagContainer.Enumerator Enums ETagEventType Delegates OnGameplayTagCountChanged"
  },
  "api/Saro.Gameplay.Ability.FrameRangeDrawer.html": {
    "href": "api/Saro.Gameplay.Ability.FrameRangeDrawer.html",
    "title": "Class FrameRangeDrawer | MGF Gameplay | 0.1.0",
    "keywords": "Class FrameRangeDrawer Inheritance Object FrameRangeDrawer Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class FrameRangeDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Saro.Gameplay.Ability.EffectSystem.html": {
    "href": "api/Saro.Gameplay.Ability.EffectSystem.html",
    "title": "Class EffectSystem | MGF Gameplay | 0.1.0",
    "keywords": "Class EffectSystem Inheritance Object EffectSystem Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class EffectSystem : IEcsRunSystem, IEcsInitSystem, IEcsDestroySystem Fields OnEffectApply Declaration public static Action<EffectObj> OnEffectApply Field Value Type Description Action < EffectObj > Properties Enable Declaration public bool Enable { get; set; } Property Value Type Description Boolean Methods ApplyEffect(ref EffectCtx, EffectObj) Declaration protected virtual ObjectHandle<EffectObj> ApplyEffect(ref EffectCtx ctx, EffectObj effectToApply) Parameters Type Name Description EffectCtx ctx EffectObj effectToApply Returns Type Description ObjectHandle < EffectObj > ApplyEffect(ref EffectCtx, String, EcsEntity, EcsEntity, Int32, Int32) Declaration public ObjectHandle<EffectObj> ApplyEffect(ref EffectCtx ctx, string effectId, EcsEntity caster, EcsEntity target, int level = 0, int stackCount = 1) Parameters Type Name Description EffectCtx ctx String effectId EcsEntity caster EcsEntity target Int32 level Int32 stackCount Returns Type Description ObjectHandle < EffectObj > ApplyEffectQueued(ref EffectCtx, String, EcsEntity, EcsEntity, Int32, Int32) Declaration public void ApplyEffectQueued(ref EffectCtx ctx, string effectId, EcsEntity caster, EcsEntity target, int level = 0, int stackCount = 1) Parameters Type Name Description EffectCtx ctx String effectId EcsEntity caster EcsEntity target Int32 level Int32 stackCount DestroyEffect(ObjectHandle<EffectObj>, Object) Declaration public void DestroyEffect(in ObjectHandle<EffectObj> handle, object destroyer) Parameters Type Name Description ObjectHandle < EffectObj > handle Object destroyer DestroyEffect(ref EffectCtx, GameplayTag, Object) Declaration public void DestroyEffect(ref EffectCtx ctx, GameplayTag tag, object destroyer) Parameters Type Name Description EffectCtx ctx GameplayTag tag Object destroyer DestroyEffect(ref EffectCtx, String, Object) Declaration public void DestroyEffect(ref EffectCtx ctx, string effectId, object destroyer) Parameters Type Name Description EffectCtx ctx String effectId Object destroyer DestroyEffect(EffectObj, Object) Declaration protected virtual void DestroyEffect(EffectObj obj, object destroyer) Parameters Type Name Description EffectObj obj Object destroyer GetActiveEffect(ref EffectCtx, String) Declaration public ObjectHandle<EffectObj> GetActiveEffect(ref EffectCtx ctx, string effectId) Parameters Type Name Description EffectCtx ctx String effectId Returns Type Description ObjectHandle < EffectObj > GetActiveEffects(ref EffectCtx, GameplayTag, ref List<EffectObj>) 根据tag获取生效的所有effect 模糊匹配 Declaration public void GetActiveEffects(ref EffectCtx ctx, GameplayTag tag, ref List<EffectObj> outEffects) Parameters Type Name Description EffectCtx ctx GameplayTag tag List < EffectObj > outEffects GetActiveEffects(ref EffectCtx, String, ref List<EffectObj>) Declaration public void GetActiveEffects(ref EffectCtx ctx, string effectId, ref List<EffectObj> outEffects) Parameters Type Name Description EffectCtx ctx String effectId List < EffectObj > outEffects HandleGameplayEvent(EcsEntity, GameplayTag, GameplayEventArgs) 处理Effect的游戏事件 Declaration public static void HandleGameplayEvent(EcsEntity target, GameplayTag eventTag, GameplayEventArgs args) Parameters Type Name Description EcsEntity target GameplayTag eventTag GameplayEventArgs args"
  },
  "api/Saro.Gameplay.Ability.Ability.html": {
    "href": "api/Saro.Gameplay.Ability.Ability.html",
    "title": "Class Ability | MGF Gameplay | 0.1.0",
    "keywords": "Class Ability Inheritance Object Ability Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public class Ability Fields backgroundMotion Declaration public bool backgroundMotion Field Value Type Description Boolean castCondition Declaration [SerializeReference] public AbilityCastCondition castCondition Field Value Type Description AbilityCastCondition cooldown Declaration [SerializeReference] public AbilityCooldown cooldown Field Value Type Description AbilityCooldown cost Declaration [SerializeReference] public AbilityCost cost Field Value Type Description AbilityCost eventContainer Declaration [SerializeReference] public EventContainer eventContainer Field Value Type Description EventContainer icon Declaration public string icon Field Value Type Description String id Declaration public string id Field Value Type Description String motionId Declaration public string motionId Field Value Type Description String passiveEffects Declaration [SerializeReference] public EffectDefContainer passiveEffects Field Value Type Description EffectDefContainer specialTable Declaration public string specialTable Field Value Type Description String tags Declaration public GameplayTagContainer tags Field Value Type Description GameplayTagContainer Properties Specials 特殊参数 Declaration public IReadOnlyList<VarPair> Specials { get; } Property Value Type Description IReadOnlyList < VarPair > Methods Parse() Declaration public void Parse()"
  },
  "api/Saro.Gameplay.Ability.NS_GoTo.GoToCondition.html": {
    "href": "api/Saro.Gameplay.Ability.NS_GoTo.GoToCondition.html",
    "title": "Class NS_GoTo.GoToCondition | MGF Gameplay | 0.1.0",
    "keywords": "Class NS_GoTo.GoToCondition Inheritance Object NS_GoTo.GoToCondition Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public abstract class GoToCondition Methods IsMet(EcsEntity) Declaration public abstract bool IsMet(EcsEntity source) Parameters Type Name Description EcsEntity source Returns Type Description Boolean"
  },
  "api/Saro.Gameplay.Waypoint.Cart.html": {
    "href": "api/Saro.Gameplay.Waypoint.Cart.html",
    "title": "Class Cart | MGF Gameplay | 0.1.0",
    "keywords": "Class Cart Inheritance Object Cart Namespace : Saro.Gameplay.Waypoint <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class Cart : MonoBehaviour Fields path Declaration public PathBase path Field Value Type Description PathBase position Declaration public float position Field Value Type Description Single positionUnits Declaration public PathBase.EPositionUnits positionUnits Field Value Type Description PathBase.EPositionUnits speed Declaration public float speed Field Value Type Description Single"
  },
  "api/Saro.Gameplay.Interact.SendOnTriggerStay.html": {
    "href": "api/Saro.Gameplay.Interact.SendOnTriggerStay.html",
    "title": "Class SendOnTriggerStay | MGF Gameplay | 0.1.0",
    "keywords": "Class SendOnTriggerStay Inheritance Object GameCommandSender TriggerCommand SendOnTriggerStay Inherited Members TriggerCommand.layers TriggerCommand.Reset() GameCommandSender.interactiveObjects GameCommandSender.oneShot GameCommandSender.coolDown GameCommandSender.Temperature GameCommandSender.IsTriggered GameCommandSender.Send() Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SendOnTriggerStay : TriggerCommand"
  },
  "api/Saro.Gameplay.Ability.DefaultAttributeSet.EAttribute.html": {
    "href": "api/Saro.Gameplay.Ability.DefaultAttributeSet.EAttribute.html",
    "title": "Enum DefaultAttributeSet.EAttribute | MGF Gameplay | 0.1.0",
    "keywords": "Enum DefaultAttributeSet.EAttribute Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EAttribute Fields Name Description Health MaxHealth"
  },
  "api/Saro.Gameplay.Ability.AttributeBasedFloat.EAttributeSource.html": {
    "href": "api/Saro.Gameplay.Ability.AttributeBasedFloat.EAttributeSource.html",
    "title": "Enum AttributeBasedFloat.EAttributeSource | MGF Gameplay | 0.1.0",
    "keywords": "Enum AttributeBasedFloat.EAttributeSource Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public enum EAttributeSource Fields Name Description Caster Target"
  },
  "api/Saro.Gameplay.Interact.SimpleTransformerEditor.html": {
    "href": "api/Saro.Gameplay.Interact.SimpleTransformerEditor.html",
    "title": "Class SimpleTransformerEditor | MGF Gameplay | 0.1.0",
    "keywords": "Class SimpleTransformerEditor Inheritance Object SimpleTransformerEditor SimpleTranslatorEditor Namespace : Saro.Gameplay.Interact <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class SimpleTransformerEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Saro.Gameplay.Ability.html": {
    "href": "api/Saro.Gameplay.Ability.html",
    "title": "Namespace Saro.Gameplay.Ability | MGF Gameplay | 0.1.0",
    "keywords": "Namespace Saro.Gameplay.Ability Classes Ability AbilityCastCondition AbilityContext AbilityCooldown AbilityCost AbilityCtxUtility AbilityDebugger AbilityFeature AbilityLog AbilityObj AbilityProfiler AoE AoEFactory AoESender AoESystem AoEUtility AttributeBasedFloat DataDrivenUtility DefaultAbilityLoader DefaultAttributeSet DefaultAttributeSetExtension Effect 游戏性效果。管理属性，触发游戏里的各种效果！ EffectCtxExtensions EffectDefContainer EffectObj 保存所有effect模板对象，模板不可修改！ EffectSystem EventArgs_AoeEnterExit EventArgs_EffectStackCountChanged EventArgs_OnAbilityCast EventArgs_ProjectileHit EventContainer Events FrameRangeDrawer GAction 设计上，为瞬时完成 GActionObj GameplayAttribute GameplayAttributeBase GameplayAttributeSet GameplayEventArgs GameplaySenderWrapper InspectorName JsonDataProvider<T> ModifierDef ModifierObj 属性修改器 需要自定义的运算优先级，重写 CalcCurrentValue() MotionClip MotionCtxUtility MotionState MotionSystem MotionUtility NotifyState NotifyStateObj NS_GoTo NS_GoTo.GoToCondition NS_RootMotion NSObj_GoTo_EffectIsAlive NSObj_RootMotion Projectile ProjectileFactory ProjectileSender ProjectileSystem ProjectileUtility ScriptCache<T> SerializeReference SnapshotAttribute SnapshotAttributeSet SnapshotDefs SpecialConfig SpecialTable TargetType TargetTypeObj Var Var<T> VarBool VarByte VarFloat VarInt VarPair VarString Structs AbilityCtx AoEData AoEObj Attributes CustomMovementType EffectCtx 技能系统 核心组件。处理buff效果、状态、各种事件 FrameRange HitRecord Projectile发射器 LifeSpan 挂上后，entity的生命周期，秒 只提供组件，不提供实际方法，需要自己实现 TODO 思考下，如何设计更容易理解、扩展一些 Modifier MotionCtx ProjectileData ProjectileObj Interfaces IAoeEventScript IDataProvider<T> IEffectEventScript Effect脚本 原则上，此脚本不储存上下文信息，上下文信息保存在effect里 TODO 看看这么设计是否合适? IEventScript<TSender> IGameplayEventSender 数据驱动使用 IGameplayTagGen IModifierSource 实现此接口的对象，才能作为属性修改源 IMotionListener IProjectileEventScript IScript ISpecialTableOwner<T> ITargetFilter ITargetType_AoE ITargetType_DataDriven ITargetTypeObj_AoE ITargetTypeObj_DataDriven IVarMagnitudeCalculation IVarOwner Enums AttributeBasedFloat.EAttributeCalculateType AttributeBasedFloat.EAttributeSource DefaultAttributeSet.EAttribute EModifierOp EStackDurationRefreshPolicy EStackExpirationPolicy EStackingPeriodResetPolicy Delegates AttributeChanged Attributes.CreateDelegate CustomMovement 自定义移动脚本 GameplyEventHandler<TSender> 游戏性事件委托"
  },
  "api/Saro.Gameplay.Ability.AbilityCost.html": {
    "href": "api/Saro.Gameplay.Ability.AbilityCost.html",
    "title": "Class AbilityCost | MGF Gameplay | 0.1.0",
    "keywords": "Class AbilityCost Inheritance Object SpecialConfig AbilityCost Inherited Members SpecialConfig.IsParse SpecialConfig.Parse(IReadOnlyList<VarPair>) SpecialConfig.ParseInternal(IReadOnlyList<VarPair>) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public abstract class AbilityCost : SpecialConfig, IVarOwner Methods ApplyCost(AbilityObj) Declaration public abstract void ApplyCost(AbilityObj obj) Parameters Type Name Description AbilityObj obj"
  },
  "api/Saro.Gameplay.Quest.IQuestCondition.html": {
    "href": "api/Saro.Gameplay.Quest.IQuestCondition.html",
    "title": "Interface IQuestCondition | MGF Gameplay | 0.1.0",
    "keywords": "Interface IQuestCondition Namespace : Saro.Gameplay.Quest <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IQuestCondition Methods IsMet(Quest) Declaration bool IsMet(Quest quest) Parameters Type Name Description Quest quest Returns Type Description Boolean RegisterEvent() Declaration void RegisterEvent() Save() Declaration void Save() UnregisterEvent() Declaration void UnregisterEvent()"
  },
  "api/Saro.Gameplay.Ability.InspectorName.html": {
    "href": "api/Saro.Gameplay.Ability.InspectorName.html",
    "title": "Class InspectorName | MGF Gameplay | 0.1.0",
    "keywords": "Class InspectorName Inheritance Object Attribute InspectorName Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Module | AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Constructor | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Interface | AttributeTargets.Parameter | AttributeTargets.Delegate | AttributeTargets.ReturnValue | AttributeTargets.GenericParameter | AttributeTargets.All, Inherited = false, AllowMultiple = true)] public sealed class InspectorName : Attribute, _Attribute Constructors InspectorName(String) Declaration public InspectorName(string value) Parameters Type Name Description String value"
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | MGF Gameplay | 0.1.0",
    "keywords": "Changelog All notable changes to this package will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning ."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| MGF Gameplay | 0.1.0",
    "keywords": "This is the documentation for the Scripting APIs of this package."
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| MGF Gameplay | 0.1.0",
    "keywords": "MIT License Copyright (c) 2020 Sarofc Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "游戏玩法 | MGF Gameplay | 0.1.0",
    "keywords": "游戏玩法"
  },
  "license/index.html": {
    "href": "license/index.html",
    "title": "| MGF Gameplay | 0.1.0",
    "keywords": "window.location.replace('LICENSE.html')"
  },
  "index.html": {
    "href": "index.html",
    "title": "Home Page. | MGF Gameplay | 0.1.0",
    "keywords": "Home Page. This is the home page for this package."
  },
  "api/Saro.Gameplay.Ability.LifeSpan.html": {
    "href": "api/Saro.Gameplay.Ability.LifeSpan.html",
    "title": "Struct LifeSpan | MGF Gameplay | 0.1.0",
    "keywords": "Struct LifeSpan 挂上后，entity的生命周期，秒 只提供组件，不提供实际方法，需要自己实现 TODO 思考下，如何设计更容易理解、扩展一些 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct LifeSpan : IEcsComponent Fields curValue 从0开始 Declaration public float curValue Field Value Type Description Single value Declaration public float value Field Value Type Description Single Properties NormalizedValue 生命周期的归一化时间，0=开始，1=结束 Declaration public float NormalizedValue { get; } Property Value Type Description Single"
  },
  "api/Saro.Gameplay.Ability.IProjectileEventScript.html": {
    "href": "api/Saro.Gameplay.Ability.IProjectileEventScript.html",
    "title": "Interface IProjectileEventScript | MGF Gameplay | 0.1.0",
    "keywords": "Interface IProjectileEventScript Inherited Members IEventScript<EcsEntity>.EventMap IEventScript<EcsEntity>.Invoke(GameplayTag, EcsEntity, GameplayEventArgs) IEventScript<EcsEntity>.ContainsEvent(GameplayTag) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IProjectileEventScript : IEventScript<EcsEntity>, IScript Properties CustomMovement Declaration CustomMovement CustomMovement { get; } Property Value Type Description CustomMovement"
  },
  "api/Saro.Gameplay.Ability.GameplayAttributeSet.html": {
    "href": "api/Saro.Gameplay.Ability.GameplayAttributeSet.html",
    "title": "Class GameplayAttributeSet | MGF Gameplay | 0.1.0",
    "keywords": "Class GameplayAttributeSet Inheritance Object GameplayAttributeSet DefaultAttributeSet Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class GameplayAttributeSet : IReference Fields m_AttributeArray Declaration protected GameplayAttribute[] m_AttributeArray Field Value Type Description GameplayAttribute [] OnPostAttributeBaseChangeDelegate Declaration public Action<GameplayAttribute> OnPostAttributeBaseChangeDelegate Field Value Type Description Action < GameplayAttribute > OnPostAttributeChangeDelegate Declaration public Action<GameplayAttribute> OnPostAttributeChangeDelegate Field Value Type Description Action < GameplayAttribute > Properties Capacity Declaration public int Capacity { get; } Property Value Type Description Int32 Item[Int32] Declaration public GameplayAttribute this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description GameplayAttribute Methods ApplyModifier(Modifier, IModifierSource) Declaration public void ApplyModifier(Modifier modifier, IModifierSource source) Parameters Type Name Description Modifier modifier IModifierSource source ApplyModifier(Int32, Single, EModifierOp, IModifierSource) Declaration public void ApplyModifier(int attribute, float value, EModifierOp op, IModifierSource source) Parameters Type Name Description Int32 attribute Single value EModifierOp op IModifierSource source ApplyModifier(Int32, Single, Int32, IModifierSource) Declaration public void ApplyModifier(int attribute, float value, int op, IModifierSource source) Parameters Type Name Description Int32 attribute Single value Int32 op IModifierSource source GetAttribute(Int32) Declaration public GameplayAttribute GetAttribute(int key) Parameters Type Name Description Int32 key Returns Type Description GameplayAttribute GetAttributeLabel(Int32) Declaration public virtual string GetAttributeLabel(int key) Parameters Type Name Description Int32 key Returns Type Description String IReferenceClearInternal() Declaration protected virtual void IReferenceClearInternal() PostAttributeBaseChange(GameplayAttribute) Declaration public virtual void PostAttributeBaseChange(GameplayAttribute attribute) Parameters Type Name Description GameplayAttribute attribute PostAttributeChange(GameplayAttribute) Declaration public virtual void PostAttributeChange(GameplayAttribute attribute) Parameters Type Name Description GameplayAttribute attribute PreAttributeBaseChange(GameplayAttribute, ref Single) Declaration public virtual void PreAttributeBaseChange(GameplayAttribute attribute, ref float newValue) Parameters Type Name Description GameplayAttribute attribute Single newValue PreAttributeChange(GameplayAttribute, ref Single) Declaration public virtual void PreAttributeChange(GameplayAttribute attribute, ref float newValue) Parameters Type Name Description GameplayAttribute attribute Single newValue RemoveModifiers(IModifierSource) Declaration public void RemoveModifiers(IModifierSource source) Parameters Type Name Description IModifierSource source SetAttribute(Int32, GameplayAttribute) Declaration public GameplayAttribute SetAttribute(int key, GameplayAttribute attribute) Parameters Type Name Description Int32 key GameplayAttribute attribute Returns Type Description GameplayAttribute Update(Single) Declaration public virtual void Update(float dt) Parameters Type Name Description Single dt Extension Methods DefaultAttributeSetExtension.IsAlive(GameplayAttributeSet)"
  },
  "api/Saro.Gameplay.Ability.EventArgs_EffectStackCountChanged.html": {
    "href": "api/Saro.Gameplay.Ability.EventArgs_EffectStackCountChanged.html",
    "title": "Class EventArgs_EffectStackCountChanged | MGF Gameplay | 0.1.0",
    "keywords": "Class EventArgs_EffectStackCountChanged Inheritance Object GameplayEventArgs EventArgs_EffectStackCountChanged Inherited Members GameplayEventArgs.Release(GameplayEventArgs) Namespace : Saro.Gameplay.Ability <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class EventArgs_EffectStackCountChanged : GameplayEventArgs, ICloneable Fields prevStackCount Declaration public int prevStackCount Field Value Type Description Int32 Methods Clone() Declaration public override object Clone() Returns Type Description Object Overrides GameplayEventArgs.Clone() Create(Int32) Declaration public static EventArgs_EffectStackCountChanged Create(int prevStackCount) Parameters Type Name Description Int32 prevStackCount Returns Type Description EventArgs_EffectStackCountChanged IReferenceClear() Declaration public override void IReferenceClear() Overrides GameplayEventArgs.IReferenceClear() Release(EventArgs_EffectStackCountChanged) Declaration public static void Release(EventArgs_EffectStackCountChanged instance) Parameters Type Name Description EventArgs_EffectStackCountChanged instance"
  },
  "api/Saro.SPhysics.TriggerSystemBase.html": {
    "href": "api/Saro.SPhysics.TriggerSystemBase.html",
    "title": "Class TriggerSystemBase | MGF Gameplay | 0.1.0",
    "keywords": "Class TriggerSystemBase 处理碰撞事件，需继承此脚本，需要放在 PhysicsFeature 后面执行 目前只能继承一次，并且只能在 Execute(ref Trigger) 里执行 Inheritance Object TriggerSystemBase Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public abstract class TriggerSystemBase : IEcsRunSystem, IEcsInitSystem Fields m_TriggerPool Declaration protected EcsPool<Trigger> m_TriggerPool Field Value Type Description EcsPool < Trigger > m_World Declaration protected EcsWorld m_World Field Value Type Description EcsWorld Properties Enable Declaration public bool Enable { get; set; } Property Value Type Description Boolean Methods Execute(ref Trigger) Declaration protected abstract void Execute(ref Trigger trigger) Parameters Type Name Description Trigger trigger Init(EcsSystems) Declaration public virtual void Init(EcsSystems systems) Parameters Type Name Description EcsSystems systems MatchPair<TEntityA, TEntityB>(ref Trigger, EcsPool<TEntityA>, EcsPool<TEntityB>) Declaration protected bool MatchPair<TEntityA, TEntityB>(ref Trigger trigger, EcsPool<TEntityA> poolA, EcsPool<TEntityB> poolB) where TEntityA : struct, IEcsComponent where TEntityB : struct, IEcsComponent Parameters Type Name Description Trigger trigger EcsPool <TEntityA> poolA EcsPool <TEntityB> poolB Returns Type Description Boolean Type Parameters Name Description TEntityA TEntityB"
  },
  "api/Saro.SPhysics.Trigger.html": {
    "href": "api/Saro.SPhysics.Trigger.html",
    "title": "Struct Trigger | MGF Gameplay | 0.1.0",
    "keywords": "Struct Trigger Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct Trigger : IEcsComponent Fields entityA Declaration public int entityA Field Value Type Description Int32 entityB Declaration public int entityB Field Value Type Description Int32 normal Declaration public Vector3 normal Field Value Type Description Vector3 penetration Declaration public float penetration Field Value Type Description Single point Declaration public Vector3 point Field Value Type Description Vector3"
  },
  "api/Saro.SPhysics.Aabb.html": {
    "href": "api/Saro.SPhysics.Aabb.html",
    "title": "Struct Aabb | MGF Gameplay | 0.1.0",
    "keywords": "Struct Aabb Bounding Box Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.SPhysics <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct Aabb : IEcsComponent Constructors Aabb(float3, float3) Declaration public Aabb(in float3 min, in float3 max) Parameters Type Name Description float3 min float3 max Fields max Declaration public float3 max Field Value Type Description float3 min Declaration public float3 min Field Value Type Description float3 Properties Center Declaration public float3 Center { get; } Property Value Type Description float3 Extends Declaration public float3 Extends { get; } Property Value Type Description float3 Methods ConstructBoundingBox(float3, float3, ref Aabb) Declaration public static void ConstructBoundingBox(in float3 p1, in float3 p2, ref Aabb aabb) Parameters Type Name Description float3 p1 float3 p2 Aabb aabb ConstructBoundingBox(float3, Single, ref Aabb) Declaration public static void ConstructBoundingBox(in float3 center, float radius, ref Aabb aabb) Parameters Type Name Description float3 center Single radius Aabb aabb ConstructBoundingBox(SphereShape, ref Aabb) Declaration public static void ConstructBoundingBox(in SphereShape sphere, ref Aabb aabb) Parameters Type Name Description SphereShape sphere Aabb aabb CreateMerged(ref Aabb, ref Aabb, ref Aabb) Declaration public static void CreateMerged(ref Aabb original, ref Aabb additional, ref Aabb result) Parameters Type Name Description Aabb original Aabb additional Aabb result Intersects(Aabb, Aabb) Declaration public static bool Intersects(in Aabb a, in Aabb b) Parameters Type Name Description Aabb a Aabb b Returns Type Description Boolean IntersectsPoint(float3, Aabb) Declaration public static bool IntersectsPoint(in float3 point, in Aabb bbox) Parameters Type Name Description float3 point Aabb bbox Returns Type Description Boolean IntersectsRay(float3, float3, Aabb) Declaration public static bool IntersectsRay(in float3 p1, in float3 p2, in Aabb bbox) Parameters Type Name Description float3 p1 float3 p2 Aabb bbox Returns Type Description Boolean"
  },
  "api/Saro.Gameplay.html": {
    "href": "api/Saro.Gameplay.html",
    "title": "Namespace Saro.Gameplay | MGF Gameplay | 0.1.0",
    "keywords": "Namespace Saro.Gameplay Classes OrbitCamera"
  }
}