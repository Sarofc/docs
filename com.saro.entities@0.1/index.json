{
  "api/Saro.Entities.IEcsInitSystem.html": {
    "href": "api/Saro.Entities.IEcsInitSystem.html",
    "title": "Interface IEcsInitSystem | EcsLite | 0.1.0",
    "keywords": "Interface IEcsInitSystem Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IEcsInitSystem : IEcsSystem Methods Init(EcsSystems) Declaration void Init(EcsSystems systems) Parameters Type Name Description EcsSystems systems"
  },
  "api/Saro.Entities.Transforms.EcsTransformExtensions.html": {
    "href": "api/Saro.Entities.Transforms.EcsTransformExtensions.html",
    "title": "Class EcsTransformExtensions | EcsLite | 0.1.0",
    "keywords": "Class EcsTransformExtensions Inheritance Object EcsTransformExtensions Namespace : Saro.Entities.Transforms <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class EcsTransformExtensions Fields EcsTransformExtensions Declaration public static readonly float3 Field Value Type Description float3 EcsTransformExtensions Declaration public static readonly float3 Field Value Type Description float3 _one Declaration public static readonly float3 _one Field Value Type Description float3 Methods FromToRotation(float3, float3) Declaration public static quaternion FromToRotation(in float3 from, in float3 to) Parameters Type Name Description float3 from float3 to Returns Type Description quaternion GetForward(EcsEntity) Declaration public static float3 GetForward(this EcsEntity entity) Parameters Type Name Description EcsEntity entity Returns Type Description float3 GetForward(Int32, EcsWorld) Declaration public static float3 GetForward(this int entity, EcsWorld world) Parameters Type Name Description Int32 entity EcsWorld world Returns Type Description float3 GetLocalPosition(EcsEntity) Declaration public static float3 GetLocalPosition(this EcsEntity entity) Parameters Type Name Description EcsEntity entity Returns Type Description float3 GetLocalPosition(Int32, EcsWorld) Declaration public static float3 GetLocalPosition(this int entity, EcsWorld world) Parameters Type Name Description Int32 entity EcsWorld world Returns Type Description float3 GetLocalRotation(EcsEntity) Declaration public static quaternion GetLocalRotation(this EcsEntity entity) Parameters Type Name Description EcsEntity entity Returns Type Description quaternion GetLocalRotation(Int32, EcsWorld) Declaration public static quaternion GetLocalRotation(this int entity, EcsWorld world) Parameters Type Name Description Int32 entity EcsWorld world Returns Type Description quaternion GetLocalScale(EcsEntity) Declaration public static float3 GetLocalScale(this EcsEntity entity) Parameters Type Name Description EcsEntity entity Returns Type Description float3 GetLocalScale(Int32, EcsWorld) Declaration public static float3 GetLocalScale(this int entity, EcsWorld world) Parameters Type Name Description Int32 entity EcsWorld world Returns Type Description float3 GetPosition(EcsEntity) Declaration public static float3 GetPosition(this EcsEntity entity) Parameters Type Name Description EcsEntity entity Returns Type Description float3 GetPosition(Int32, EcsWorld) Declaration public static float3 GetPosition(this int entity, EcsWorld world) Parameters Type Name Description Int32 entity EcsWorld world Returns Type Description float3 GetRight(EcsEntity) Declaration public static void GetRight(this EcsEntity entity) Parameters Type Name Description EcsEntity entity GetRight(Int32, EcsWorld) Declaration public static float3 GetRight(this int entity, EcsWorld world) Parameters Type Name Description Int32 entity EcsWorld world Returns Type Description float3 GetRotation(EcsEntity) Declaration public static quaternion GetRotation(this EcsEntity entity) Parameters Type Name Description EcsEntity entity Returns Type Description quaternion GetRotation(Int32, EcsWorld) Declaration public static quaternion GetRotation(this int entity, EcsWorld world) Parameters Type Name Description Int32 entity EcsWorld world Returns Type Description quaternion GetScale(EcsEntity) Declaration public static float3 GetScale(this EcsEntity entity) Parameters Type Name Description EcsEntity entity Returns Type Description float3 GetScale(Int32, EcsWorld) Declaration public static float3 GetScale(this int entity, EcsWorld world) Parameters Type Name Description Int32 entity EcsWorld world Returns Type Description float3 GetUp(EcsEntity) Declaration public static void GetUp(this EcsEntity entity) Parameters Type Name Description EcsEntity entity GetUp(Int32, EcsWorld) Declaration public static float3 GetUp(this int entity, EcsWorld world) Parameters Type Name Description Int32 entity EcsWorld world Returns Type Description float3 SetForward(EcsEntity, float3) Declaration public static void SetForward(this EcsEntity entity, float3 forward) Parameters Type Name Description EcsEntity entity float3 forward SetForward(Int32, float3, EcsWorld) Declaration public static void SetForward(this int entity, float3 forward, EcsWorld world) Parameters Type Name Description Int32 entity float3 forward EcsWorld world SetLocalPosition(EcsEntity, float3) Declaration public static void SetLocalPosition(this EcsEntity entity, in float3 position) Parameters Type Name Description EcsEntity entity float3 position SetLocalPosition(Int32, EcsWorld, float3) Declaration public static void SetLocalPosition(this int entity, EcsWorld world, in float3 position) Parameters Type Name Description Int32 entity EcsWorld world float3 position SetLocalRotation(EcsEntity, quaternion) Declaration public static void SetLocalRotation(this EcsEntity entity, in quaternion rotation) Parameters Type Name Description EcsEntity entity quaternion rotation SetLocalRotation(Int32, EcsWorld, quaternion) Declaration public static void SetLocalRotation(this int entity, EcsWorld world, in quaternion rotation) Parameters Type Name Description Int32 entity EcsWorld world quaternion rotation SetLocalScale(EcsEntity, float3) Declaration public static void SetLocalScale(this EcsEntity entity, in float3 scale) Parameters Type Name Description EcsEntity entity float3 scale SetLocalScale(Int32, EcsWorld, float3) Declaration public static void SetLocalScale(this int entity, EcsWorld world, in float3 scale) Parameters Type Name Description Int32 entity EcsWorld world float3 scale SetPosition(EcsEntity, float3) Declaration public static void SetPosition(this EcsEntity entity, in float3 position) Parameters Type Name Description EcsEntity entity float3 position SetPosition(Int32, EcsWorld, float3) Declaration public static void SetPosition(this int entity, EcsWorld world, in float3 position) Parameters Type Name Description Int32 entity EcsWorld world float3 position SetRight(EcsEntity, float3) Declaration public static void SetRight(this EcsEntity entity, float3 right) Parameters Type Name Description EcsEntity entity float3 right SetRight(Int32, float3, EcsWorld) Declaration public static void SetRight(this int entity, float3 right, EcsWorld world) Parameters Type Name Description Int32 entity float3 right EcsWorld world SetRotation(EcsEntity, quaternion) Declaration public static void SetRotation(this EcsEntity entity, in quaternion rotation) Parameters Type Name Description EcsEntity entity quaternion rotation SetRotation(Int32, EcsWorld, quaternion) Declaration public static void SetRotation(this int entity, EcsWorld world, in quaternion rotation) Parameters Type Name Description Int32 entity EcsWorld world quaternion rotation SetUp(EcsEntity, float3) Declaration public static void SetUp(this EcsEntity entity, float3 up) Parameters Type Name Description EcsEntity entity float3 up SetUp(Int32, float3, EcsWorld) Declaration public static void SetUp(this int entity, float3 up, EcsWorld world) Parameters Type Name Description Int32 entity float3 up EcsWorld world"
  },
  "api/Saro.Entities.Collections.IIntrusiveList.html": {
    "href": "api/Saro.Entities.Collections.IIntrusiveList.html",
    "title": "Interface IIntrusiveList | EcsLite | 0.1.0",
    "keywords": "Interface IIntrusiveList Namespace : Saro.Entities.Collections <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IIntrusiveList Properties Count Declaration int Count { get; } Property Value Type Description Int32 Methods Add(EcsEntity) Declaration void Add(EcsEntity entity) Parameters Type Name Description EcsEntity entity AddFirst(EcsEntity) Declaration void AddFirst(EcsEntity entity) Parameters Type Name Description EcsEntity entity Clear(Boolean) Declaration void Clear(bool destroyData = false) Parameters Type Name Description Boolean destroyData Contains(EcsEntity) Declaration bool Contains(EcsEntity entity) Parameters Type Name Description EcsEntity entity Returns Type Description Boolean GetFirst() Declaration EcsEntity GetFirst() Returns Type Description EcsEntity GetLast() Declaration EcsEntity GetLast() Returns Type Description EcsEntity GetRange(Int32, Int32) Declaration IEnumerator<EcsEntity> GetRange(int from, int to) Parameters Type Name Description Int32 from Int32 to Returns Type Description IEnumerator < EcsEntity > GetValue(Int32) Declaration EcsEntity GetValue(int index) Parameters Type Name Description Int32 index Returns Type Description EcsEntity Insert(EcsEntity, Int32) Declaration bool Insert(EcsEntity entity, int onIndex) Parameters Type Name Description EcsEntity entity Int32 onIndex Returns Type Description Boolean Remove(EcsEntity) Declaration bool Remove(EcsEntity entity) Parameters Type Name Description EcsEntity entity Returns Type Description Boolean RemoveAll(EcsEntity) Declaration int RemoveAll(EcsEntity entity) Parameters Type Name Description EcsEntity entity Returns Type Description Int32 RemoveAt(Int32, Boolean) Declaration bool RemoveAt(int index, bool destroyData = false) Parameters Type Name Description Int32 index Boolean destroyData Returns Type Description Boolean RemoveFirst(Boolean) Declaration bool RemoveFirst(bool destroyData = false) Parameters Type Name Description Boolean destroyData Returns Type Description Boolean RemoveLast(Boolean) Declaration bool RemoveLast(bool destroyData = false) Parameters Type Name Description Boolean destroyData Returns Type Description Boolean RemoveRange(Int32, Int32, Boolean) Declaration int RemoveRange(int from, int to, bool destroyData = false) Parameters Type Name Description Int32 from Int32 to Boolean destroyData Returns Type Description Int32 Replace(EcsEntity, Int32) Declaration bool Replace(EcsEntity entity, int index) Parameters Type Name Description EcsEntity entity Int32 index Returns Type Description Boolean ToArray() Declaration EcsEntity[] ToArray() Returns Type Description EcsEntity []"
  },
  "api/Saro.Entities.Name.html": {
    "href": "api/Saro.Entities.Name.html",
    "title": "Struct Name | EcsLite | 0.1.0",
    "keywords": "Struct Name Name component for entity Inherited Members ValueType.ToString() Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct Name : IEcsComponent, IEquatable<Name> Constructors Name(String) Declaration public Name(string name) Parameters Type Name Description String name Fields k_EntityNameFormat Declaration public const string k_EntityNameFormat = \"X8\" Field Value Type Description String name Declaration public string name Field Value Type Description String Methods Equals(Name) Declaration public bool Equals(Name other) Parameters Type Name Description Name other Returns Type Description Boolean Implements IEquatable<T>.Equals(T) Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetEntityDetial(Int32, EcsWorld, String) Declaration public static string GetEntityDetial(int entity, EcsWorld world, string entityNameFormat = \"X8\") Parameters Type Name Description Int32 entity EcsWorld world String entityNameFormat Returns Type Description String GetEntityInfo(EcsEntity, String) Declaration public static string GetEntityInfo(EcsEntity entity, string entityNameFormat = \"X8\") Parameters Type Name Description EcsEntity entity String entityNameFormat Returns Type Description String GetEntityInfo(Int32, EcsWorld, String) Declaration public static string GetEntityInfo(int entity, EcsWorld world, string entityNameFormat = \"X8\") Parameters Type Name Description Int32 entity EcsWorld world String entityNameFormat Returns Type Description String GetEntityName(EcsEntity, String) Declaration public static string GetEntityName(EcsEntity entity, string entityNameFormat = \"X8\") Parameters Type Name Description EcsEntity entity String entityNameFormat Returns Type Description String GetEntityName(Int32, EcsWorld, String) Declaration public static string GetEntityName(int entity, EcsWorld world, string entityNameFormat = \"X8\") Parameters Type Name Description Int32 entity EcsWorld world String entityNameFormat Returns Type Description String GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators Equality(Name, Name) Declaration public static bool operator ==(in Name x, in Name y) Parameters Type Name Description Name x Name y Returns Type Description Boolean Inequality(Name, Name) Declaration public static bool operator !=(in Name x, in Name y) Parameters Type Name Description Name x Name y Returns Type Description Boolean"
  },
  "api/Saro.Entities.Collections.IntrusiveList.html": {
    "href": "api/Saro.Entities.Collections.IntrusiveList.html",
    "title": "Struct IntrusiveList | EcsLite | 0.1.0",
    "keywords": "Struct IntrusiveList Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Entities.Collections <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct IntrusiveList : IIntrusiveList Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Implements IIntrusiveList.Count Methods Add(EcsEntity) Add new data at the end of the list. Declaration public void Add(EcsEntity entity) Parameters Type Name Description EcsEntity entity Implements IIntrusiveList.Add(EcsEntity) Add(EcsEntity, out EcsEntity) Declaration public void Add(EcsEntity entity, out EcsEntity node) Parameters Type Name Description EcsEntity entity EcsEntity node AddFirst(EcsEntity) Add new data at the end of the list. Declaration public void AddFirst(EcsEntity entity) Parameters Type Name Description EcsEntity entity Implements IIntrusiveList.AddFirst(EcsEntity) Clear(Boolean) Clear the list. Declaration public void Clear(bool destroyData = false) Parameters Type Name Description Boolean destroyData Implements IIntrusiveList.Clear(Boolean) Contains(EcsEntity) Find an element. Declaration public bool Contains(EcsEntity entity) Parameters Type Name Description EcsEntity entity Returns Type Description Boolean Returns TRUE if data was found Implements IIntrusiveList.Contains(EcsEntity) GetEnumerator() Declaration public IntrusiveList.Enumerator GetEnumerator() Returns Type Description IntrusiveList.Enumerator GetFirst() Returns first element. Declaration public EcsEntity GetFirst() Returns Type Description EcsEntity Returns instance, default if not found Implements IIntrusiveList.GetFirst() GetLast() Returns last element. Declaration public EcsEntity GetLast() Returns Type Description EcsEntity Returns instance, default if not found Implements IIntrusiveList.GetLast() GetRange(Int32, Int32) Returns enumeration of nodes in range [from..to) Declaration public IEnumerator<EcsEntity> GetRange(int from, int to) Parameters Type Name Description Int32 from Int32 to Returns Type Description IEnumerator < EcsEntity > Implements IIntrusiveList.GetRange(Int32, Int32) GetValue(Int32) Get value by index. Declaration public EcsEntity GetValue(int index) Parameters Type Name Description Int32 index Returns Type Description EcsEntity EcsEntity data. EcsEntity.k_Null if not found. Implements IIntrusiveList.GetValue(Int32) Insert(EcsEntity, Int32) Insert data at index onIndex. Declaration public bool Insert(EcsEntity entity, int index) Parameters Type Name Description EcsEntity entity Int32 index Returns Type Description Boolean Returns TRUE if successful Implements IIntrusiveList.Insert(EcsEntity, Int32) Remove(EcsEntity) Remove data from list. Declaration public bool Remove(EcsEntity entity) Parameters Type Name Description EcsEntity entity Returns Type Description Boolean Returns TRUE if data was found Implements IIntrusiveList.Remove(EcsEntity) RemoveAll(EcsEntity) Remove all nodes data from list. Declaration public int RemoveAll(EcsEntity entity) Parameters Type Name Description EcsEntity entity Returns Type Description Int32 Returns count of removed elements Implements IIntrusiveList.RemoveAll(EcsEntity) RemoveAt(Int32, Boolean) Remove node at index. Declaration public bool RemoveAt(int index, bool destroyData = false) Parameters Type Name Description Int32 index Boolean destroyData Destroy also EcsEntity data Returns Type Description Boolean Returns TRUE if data was found Implements IIntrusiveList.RemoveAt(Int32, Boolean) RemoveFirst(Boolean) Returns last element. Declaration public bool RemoveFirst(bool destroyData = false) Parameters Type Name Description Boolean destroyData Returns Type Description Boolean Returns TRUE on success Implements IIntrusiveList.RemoveFirst(Boolean) RemoveLast(Boolean) Returns last element. Declaration public bool RemoveLast(bool destroyData = false) Parameters Type Name Description Boolean destroyData Returns Type Description Boolean Returns TRUE on success Implements IIntrusiveList.RemoveLast(Boolean) RemoveRange(Int32, Int32, Boolean) Remove nodes in range [from..to) Declaration public int RemoveRange(int from, int to, bool destroyData = false) Parameters Type Name Description Int32 from Must be exists in list, could not be out of list range Int32 to May be out of list range, but greater than from Boolean destroyData Destroy also EcsEntity data Returns Type Description Int32 Returns count of removed elements Implements IIntrusiveList.RemoveRange(Int32, Int32, Boolean) Replace(EcsEntity, Int32) Replace data by index. Declaration public bool Replace(EcsEntity entity, int index) Parameters Type Name Description EcsEntity entity Int32 index Returns Type Description Boolean Returns TRUE if data was found Implements IIntrusiveList.Replace(EcsEntity, Int32) ToArray() Put EcsEntity data into array. Declaration public EcsEntity[] ToArray() Returns Type Description EcsEntity [] Buffer array from pool Implements IIntrusiveList.ToArray()"
  },
  "api/Saro.Entities.Transforms.Scale.html": {
    "href": "api/Saro.Entities.Transforms.Scale.html",
    "title": "Struct Scale | EcsLite | 0.1.0",
    "keywords": "Struct Scale Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Entities.Transforms <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct Scale : IEcsComponent Constructors Scale(float3) Declaration public Scale(float3 value) Parameters Type Name Description float3 value Fields value Declaration public float3 value Field Value Type Description float3"
  },
  "api/Saro.Entities.IEcsAutoReset-1.html": {
    "href": "api/Saro.Entities.IEcsAutoReset-1.html",
    "title": "Interface IEcsAutoReset<T> | EcsLite | 0.1.0",
    "keywords": "Interface IEcsAutoReset<T> 重置数据，取代 struct = default 操作 Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IEcsAutoReset<T> where T : struct Type Parameters Name Description T Methods AutoReset(ref T) Declaration void AutoReset(ref T c) Parameters Type Name Description T c"
  },
  "api/Saro.Entities.IEcsPool.html": {
    "href": "api/Saro.Entities.IEcsPool.html",
    "title": "Interface IEcsPool | EcsLite | 0.1.0",
    "keywords": "Interface IEcsPool Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IEcsPool Properties Singleton Declaration bool Singleton { get; } Property Value Type Description Boolean Methods AddRaw(Int32, Object) Declaration void AddRaw(int entity, object dataRaw) Parameters Type Name Description Int32 entity Object dataRaw Del(Int32) Declaration void Del(int entity) Parameters Type Name Description Int32 entity GetComponentType() Declaration Type GetComponentType() Returns Type Description Type GetId() Declaration int GetId() Returns Type Description Int32 GetRaw(Int32) Declaration object GetRaw(int entity) Parameters Type Name Description Int32 entity Returns Type Description Object Has(Int32) Declaration bool Has(int entity) Parameters Type Name Description Int32 entity Returns Type Description Boolean Resize(Int32) Declaration void Resize(int capacity) Parameters Type Name Description Int32 capacity SetRaw(Int32, Object) Declaration void SetRaw(int entity, object dataRaw) Parameters Type Name Description Int32 entity Object dataRaw"
  },
  "api/Saro.Entities.EcsEntityExtensions.html": {
    "href": "api/Saro.Entities.EcsEntityExtensions.html",
    "title": "Class EcsEntityExtensions | EcsLite | 0.1.0",
    "keywords": "Class EcsEntityExtensions Inheritance Object EcsEntityExtensions Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class EcsEntityExtensions Methods Add<T>(EcsEntity) Declaration [Obsolete(\"use 'GetOrAdd' instead\")] public static T Add<T>(this EcsEntity self) where T : struct, IEcsComponent Parameters Type Name Description EcsEntity self Returns Type Description T Type Parameters Name Description T Add<T>(Int32, EcsWorld) Declaration [Obsolete(\"use 'GetOrAdd' instead\")] public static T Add<T>(this int self, EcsWorld world) where T : struct, IEcsComponent Parameters Type Name Description Int32 self EcsWorld world Returns Type Description T Type Parameters Name Description T Del<T>(EcsEntity) Declaration public static void Del<T>(this in EcsEntity self) where T : struct, IEcsComponent Parameters Type Name Description EcsEntity self Type Parameters Name Description T Del<T>(Int32, EcsWorld) Declaration public static void Del<T>(this int self, EcsWorld world) where T : struct, IEcsComponent Parameters Type Name Description Int32 self EcsWorld world Type Parameters Name Description T Get<T>(EcsEntity) Declaration public static T Get<T>(this in EcsEntity self) where T : struct, IEcsComponent Parameters Type Name Description EcsEntity self Returns Type Description T Type Parameters Name Description T Get<T>(Int32, EcsWorld) Declaration public static T Get<T>(this int self, EcsWorld world) where T : struct, IEcsComponent Parameters Type Name Description Int32 self EcsWorld world Returns Type Description T Type Parameters Name Description T GetOrAdd<T>(EcsEntity) Declaration public static T GetOrAdd<T>(this EcsEntity self) where T : struct, IEcsComponent Parameters Type Name Description EcsEntity self Returns Type Description T Type Parameters Name Description T GetOrAdd<T>(Int32, EcsWorld) Declaration public static T GetOrAdd<T>(this int self, EcsWorld world) where T : struct, IEcsComponent Parameters Type Name Description Int32 self EcsWorld world Returns Type Description T Type Parameters Name Description T Has<T>(EcsEntity) Declaration public static bool Has<T>(this in EcsEntity ent) where T : struct, IEcsComponent Parameters Type Name Description EcsEntity ent Returns Type Description Boolean Type Parameters Name Description T Has<T>(Int32, EcsWorld) Declaration public static bool Has<T>(this int self, EcsWorld world) where T : struct, IEcsComponent Parameters Type Name Description Int32 self EcsWorld world Returns Type Description Boolean Type Parameters Name Description T NewEcsEntity(EcsWorld) Declaration public static EcsEntity NewEcsEntity(this EcsWorld world) Parameters Type Name Description EcsWorld world Returns Type Description EcsEntity NewEcsEntity(EcsWorld, String) Declaration public static EcsEntity NewEcsEntity(this EcsWorld world, string name) Parameters Type Name Description EcsWorld world String name Returns Type Description EcsEntity Pack(EcsWorld, Int32) Declaration public static EcsEntity Pack(this EcsWorld world, int entity) Parameters Type Name Description EcsWorld world Int32 entity Returns Type Description EcsEntity"
  },
  "api/Saro.Entities.EcsSystems.html": {
    "href": "api/Saro.Entities.EcsSystems.html",
    "title": "Class EcsSystems | EcsLite | 0.1.0",
    "keywords": "Class EcsSystems 每个 EcsSystems 之间不要有依赖关系 Inheritance Object EcsSystems Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class EcsSystems Constructors EcsSystems(EcsWorld, Object) Declaration public EcsSystems(EcsWorld defaultWorld, object shared = null) Parameters Type Name Description EcsWorld defaultWorld Object shared EcsSystems(String, EcsWorld, Object) Declaration public EcsSystems(string systemsName, EcsWorld defaultWorld, object shared = null) Parameters Type Name Description String systemsName EcsWorld defaultWorld Object shared Properties SystemsName Declaration public string SystemsName { get; } Property Value Type Description String Methods Add(IEcsSystem) Declaration public EcsSystems Add(IEcsSystem system) Parameters Type Name Description IEcsSystem system Returns Type Description EcsSystems AddWorld(EcsWorld, String) Declaration public EcsSystems AddWorld(EcsWorld world, string name) Parameters Type Name Description EcsWorld world String name Returns Type Description EcsSystems GetAllNamedWorlds() Declaration public Dictionary<string, EcsWorld> GetAllNamedWorlds() Returns Type Description Dictionary < String , EcsWorld > GetAllSystems(ref IEcsSystem[]) Declaration public int GetAllSystems(ref IEcsSystem[] list) Parameters Type Name Description IEcsSystem [] list Returns Type Description Int32 GetRunSystems(ref IEcsRunSystem[]) Declaration public int GetRunSystems(ref IEcsRunSystem[] list) Parameters Type Name Description IEcsRunSystem [] list Returns Type Description Int32 GetShared<T>() Declaration public T GetShared<T>() where T : class Returns Type Description T Type Parameters Name Description T GetSystem<T>() Declaration public T GetSystem<T>() where T : class Returns Type Description T Type Parameters Name Description T GetWorld(String) Declaration public EcsWorld GetWorld(string name = null) Parameters Type Name Description String name Returns Type Description EcsWorld Init() Declaration public void Init() Run(Single) Declaration public void Run(float deltaTime) Parameters Type Name Description Single deltaTime"
  },
  "api/Saro.Entities.Transforms.Position.html": {
    "href": "api/Saro.Entities.Transforms.Position.html",
    "title": "Struct Position | EcsLite | 0.1.0",
    "keywords": "Struct Position Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Entities.Transforms <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct Position : IEcsComponent Constructors Position(float3) Declaration public Position(float3 value) Parameters Type Name Description float3 value Fields value Declaration public float3 value Field Value Type Description float3"
  },
  "api/Saro.Entities.Transforms.html": {
    "href": "api/Saro.Entities.Transforms.html",
    "title": "Namespace Saro.Entities.Transforms | EcsLite | 0.1.0",
    "keywords": "Namespace Saro.Entities.Transforms Classes EcsTransformExtensions EcsTransformUtility Structs Position Rotation Scale"
  },
  "api/Saro.Entities.EcsWorld.EntityData.html": {
    "href": "api/Saro.Entities.EcsWorld.EntityData.html",
    "title": "Struct EcsWorld.EntityData | EcsLite | 0.1.0",
    "keywords": "Struct EcsWorld.EntityData Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct EntityData Fields compsCount Declaration public short compsCount Field Value Type Description Int16 gen Declaration public short gen Field Value Type Description Int16"
  },
  "api/Saro.Entities.EcsFilter.html": {
    "href": "api/Saro.Entities.EcsFilter.html",
    "title": "Class EcsFilter | EcsLite | 0.1.0",
    "keywords": "Class EcsFilter Inheritance Object EcsFilter Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class EcsFilter Properties EntitiesCount Declaration public int EntitiesCount { get; } Property Value Type Description Int32 Item[Int32] Declaration public int this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description Int32 Methods GetEntitiesCount() Declaration public int GetEntitiesCount() Returns Type Description Int32 GetEnumerator() Declaration public EcsFilter.Enumerator GetEnumerator() Returns Type Description EcsFilter.Enumerator GetRawEntities() Declaration public int[] GetRawEntities() Returns Type Description Int32 [] GetSparseIndex() Declaration public int[] GetSparseIndex() Returns Type Description Int32 [] GetWorld() Declaration public EcsWorld GetWorld() Returns Type Description EcsWorld ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Saro.Entities.IEcsComponent.html": {
    "href": "api/Saro.Entities.IEcsComponent.html",
    "title": "Interface IEcsComponent | EcsLite | 0.1.0",
    "keywords": "Interface IEcsComponent Ecs组件必须 继承 此接口 struct 持有 class引用，是浅拷贝，只拷贝引用 Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IEcsComponent"
  },
  "api/Saro.Entities.IEcsRunSystem.html": {
    "href": "api/Saro.Entities.IEcsRunSystem.html",
    "title": "Interface IEcsRunSystem | EcsLite | 0.1.0",
    "keywords": "Interface IEcsRunSystem Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IEcsRunSystem : IEcsSystem Properties Enable Declaration bool Enable { get; set; } Property Value Type Description Boolean Methods Run(EcsSystems, Single) Declaration void Run(EcsSystems systems, float deltaTime) Parameters Type Name Description EcsSystems systems Single deltaTime"
  },
  "api/Saro.Entities.IEcsPreInitSystem.html": {
    "href": "api/Saro.Entities.IEcsPreInitSystem.html",
    "title": "Interface IEcsPreInitSystem | EcsLite | 0.1.0",
    "keywords": "Interface IEcsPreInitSystem Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IEcsPreInitSystem : IEcsSystem Methods PreInit(EcsSystems) Declaration void PreInit(EcsSystems systems) Parameters Type Name Description EcsSystems systems"
  },
  "api/Saro.Entities.IEcsComponentSingleton.html": {
    "href": "api/Saro.Entities.IEcsComponentSingleton.html",
    "title": "Interface IEcsComponentSingleton | EcsLite | 0.1.0",
    "keywords": "Interface IEcsComponentSingleton 单例组件继承这个！ Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IEcsComponentSingleton : IEcsComponent"
  },
  "api/Saro.Entities.Transforms.Rotation.html": {
    "href": "api/Saro.Entities.Transforms.Rotation.html",
    "title": "Struct Rotation | EcsLite | 0.1.0",
    "keywords": "Struct Rotation Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Entities.Transforms <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax [Serializable] public struct Rotation : IEcsComponent Constructors Rotation(quaternion) Declaration public Rotation(quaternion value) Parameters Type Name Description quaternion value Fields value Declaration public quaternion value Field Value Type Description quaternion"
  },
  "api/Saro.Entities.Transforms.EcsTransformUtility.html": {
    "href": "api/Saro.Entities.Transforms.EcsTransformUtility.html",
    "title": "Class EcsTransformUtility | EcsLite | 0.1.0",
    "keywords": "Class EcsTransformUtility Inheritance Object EcsTransformUtility Namespace : Saro.Entities.Transforms <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public static class EcsTransformUtility Methods GetParent(EcsEntity) Declaration public static EcsEntity GetParent(this EcsEntity entity) Parameters Type Name Description EcsEntity entity Returns Type Description EcsEntity GetParent(Int32, EcsWorld) Declaration public static EcsEntity GetParent(this int entity, EcsWorld world) Parameters Type Name Description Int32 entity EcsWorld world Returns Type Description EcsEntity GetRoot(EcsEntity) Declaration public static EcsEntity GetRoot(this EcsEntity child) Parameters Type Name Description EcsEntity child Returns Type Description EcsEntity HasParent(EcsEntity) Declaration public static bool HasParent(this EcsEntity entity) Parameters Type Name Description EcsEntity entity Returns Type Description Boolean HasParent(Int32, EcsWorld) Declaration public static bool HasParent(this int entity, EcsWorld world) Parameters Type Name Description Int32 entity EcsWorld world Returns Type Description Boolean SetParent(EcsEntity, EcsEntity) Declaration public static void SetParent(this EcsEntity child, EcsEntity root) Parameters Type Name Description EcsEntity child EcsEntity root SetParent(EcsEntity, EcsEntity, Boolean) Declaration public static void SetParent(this EcsEntity child, EcsEntity root, bool worldPositionStays) Parameters Type Name Description EcsEntity child EcsEntity root Boolean worldPositionStays SetParent(Int32, Int32, EcsWorld) Declaration public static void SetParent(this int child, int root, EcsWorld world) Parameters Type Name Description Int32 child Int32 root EcsWorld world"
  },
  "api/Saro.Entities.Collections.html": {
    "href": "api/Saro.Entities.Collections.html",
    "title": "Namespace Saro.Entities.Collections | EcsLite | 0.1.0",
    "keywords": "Namespace Saro.Entities.Collections Structs IntrusiveList IntrusiveList.Enumerator IntrusiveListNode Interfaces IIntrusiveList"
  },
  "api/Saro.Entities.EcsException.html": {
    "href": "api/Saro.Entities.EcsException.html",
    "title": "Class EcsException | EcsLite | 0.1.0",
    "keywords": "Class EcsException Inheritance Object Exception EcsException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class EcsException : Exception, ISerializable, _Exception Constructors EcsException(String) Declaration public EcsException(string message) Parameters Type Name Description String message"
  },
  "api/Saro.Entities.html": {
    "href": "api/Saro.Entities.html",
    "title": "Namespace Saro.Entities | EcsLite | 0.1.0",
    "keywords": "Namespace Saro.Entities Classes EcsEntityExtensions EcsException EcsFilter EcsPool<T> EcsSystemFeature EcsSystems 每个 EcsSystems 之间不要有依赖关系 EcsWorld EcsWorld.Mask Structs EcsEntity EcsFilter.Enumerator EcsWorld.Config EcsWorld.EntityData Name Name component for entity Interfaces IEcsAutoReset<T> 重置数据，取代 struct = default 操作 IEcsComponent Ecs组件必须 继承 此接口 struct 持有 class引用，是浅拷贝，只拷贝引用 IEcsComponentSingleton 单例组件继承这个！ IEcsDestroySystem IEcsInitSystem IEcsPool IEcsPostDestroySystem IEcsPreInitSystem IEcsRunSystem IEcsSystem"
  },
  "api/Saro.Entities.EcsPool-1.html": {
    "href": "api/Saro.Entities.EcsPool-1.html",
    "title": "Class EcsPool<T> | EcsLite | 0.1.0",
    "keywords": "Class EcsPool<T> Inheritance Object EcsPool<T> Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class EcsPool<T> : IEcsPool where T : struct, IEcsComponent Type Parameters Name Description T Properties Singleton Declaration public bool Singleton { get; } Property Value Type Description Boolean Implements IEcsPool.Singleton Methods Add(Int32) Declaration [Obsolete(\"use 'GetOrAdd' instead\")] public T Add(int entity) Parameters Type Name Description Int32 entity Returns Type Description T Del(Int32) Declaration public void Del(int entity) Parameters Type Name Description Int32 entity Implements IEcsPool.Del(Int32) Get(Int32) Declaration public T Get(int entity) Parameters Type Name Description Int32 entity Returns Type Description T GetComponentType() Declaration public Type GetComponentType() Returns Type Description Type Implements IEcsPool.GetComponentType() GetId() Declaration public int GetId() Returns Type Description Int32 Implements IEcsPool.GetId() GetOrAdd(Int32) Declaration public T GetOrAdd(int entity) Parameters Type Name Description Int32 entity Returns Type Description T GetRawDenseItems() Declaration public T[] GetRawDenseItems() Returns Type Description T[] GetRawDenseItemsCount() Declaration public int GetRawDenseItemsCount() Returns Type Description Int32 GetRawRecycledItems() Declaration public int[] GetRawRecycledItems() Returns Type Description Int32 [] GetRawRecycledItemsCount() Declaration public int GetRawRecycledItemsCount() Returns Type Description Int32 GetRawSparseItems() Declaration public int[] GetRawSparseItems() Returns Type Description Int32 [] GetWorld() Declaration public EcsWorld GetWorld() Returns Type Description EcsWorld Has(Int32) Declaration public bool Has(int entity) Parameters Type Name Description Int32 entity Returns Type Description Boolean Implements IEcsPool.Has(Int32) ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Explicit Interface Implementations IEcsPool.AddRaw(Int32, Object) Declaration void IEcsPool.AddRaw(int entity, object dataRaw) Parameters Type Name Description Int32 entity Object dataRaw Implements IEcsPool.AddRaw(Int32, Object) IEcsPool.GetRaw(Int32) Declaration object IEcsPool.GetRaw(int entity) Parameters Type Name Description Int32 entity Returns Type Description Object Implements IEcsPool.GetRaw(Int32) IEcsPool.Resize(Int32) Declaration void IEcsPool.Resize(int capacity) Parameters Type Name Description Int32 capacity Implements IEcsPool.Resize(Int32) IEcsPool.SetRaw(Int32, Object) Declaration void IEcsPool.SetRaw(int entity, object dataRaw) Parameters Type Name Description Int32 entity Object dataRaw Implements IEcsPool.SetRaw(Int32, Object)"
  },
  "api/Saro.Entities.IEcsPostDestroySystem.html": {
    "href": "api/Saro.Entities.IEcsPostDestroySystem.html",
    "title": "Interface IEcsPostDestroySystem | EcsLite | 0.1.0",
    "keywords": "Interface IEcsPostDestroySystem Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IEcsPostDestroySystem : IEcsSystem Methods PostDestroy(EcsSystems) Declaration void PostDestroy(EcsSystems systems) Parameters Type Name Description EcsSystems systems"
  },
  "api/Saro.Entities.Collections.IntrusiveList.Enumerator.html": {
    "href": "api/Saro.Entities.Collections.IntrusiveList.Enumerator.html",
    "title": "Struct IntrusiveList.Enumerator | EcsLite | 0.1.0",
    "keywords": "Struct IntrusiveList.Enumerator Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Entities.Collections <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct Enumerator Constructors Enumerator(IntrusiveList) Declaration public Enumerator(IntrusiveList list) Parameters Type Name Description IntrusiveList list Properties Current Declaration public EcsEntity Current { get; } Property Value Type Description EcsEntity Methods MoveNext() Declaration public bool MoveNext() Returns Type Description Boolean"
  },
  "api/Saro.Entities.EcsFilter.Enumerator.html": {
    "href": "api/Saro.Entities.EcsFilter.Enumerator.html",
    "title": "Struct EcsFilter.Enumerator | EcsLite | 0.1.0",
    "keywords": "Struct EcsFilter.Enumerator Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct Enumerator : IDisposable Constructors Enumerator(EcsFilter) Declaration public Enumerator(EcsFilter filter) Parameters Type Name Description EcsFilter filter Properties Current Declaration public int Current { get; } Property Value Type Description Int32 Methods Dispose() Declaration public void Dispose() Implements IDisposable.Dispose() MoveNext() Declaration public bool MoveNext() Returns Type Description Boolean"
  },
  "api/Saro.Entities.EcsSystemFeature.html": {
    "href": "api/Saro.Entities.EcsSystemFeature.html",
    "title": "Class EcsSystemFeature | EcsLite | 0.1.0",
    "keywords": "Class EcsSystemFeature Inheritance Object EcsSystemFeature Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class EcsSystemFeature : IEcsPreInitSystem, IEcsInitSystem, IEcsRunSystem, IEcsDestroySystem, IEcsPostDestroySystem, IEcsSystem Constructors EcsSystemFeature() Declaration public EcsSystemFeature() Properties Enable Declaration public bool Enable { get; set; } Property Value Type Description Boolean Implements IEcsRunSystem.Enable Systems Declaration public IReadOnlyList<IEcsSystem> Systems { get; } Property Value Type Description IReadOnlyList < IEcsSystem > Methods AddSystem(IEcsSystem) Declaration public IEcsSystem AddSystem(IEcsSystem system) Parameters Type Name Description IEcsSystem system Returns Type Description IEcsSystem Destroy(EcsSystems) Declaration public virtual void Destroy(EcsSystems systems) Parameters Type Name Description EcsSystems systems Implements IEcsDestroySystem.Destroy(EcsSystems) Init(EcsSystems) Declaration public virtual void Init(EcsSystems systems) Parameters Type Name Description EcsSystems systems Implements IEcsInitSystem.Init(EcsSystems) PostDestroy(EcsSystems) Declaration public virtual void PostDestroy(EcsSystems systems) Parameters Type Name Description EcsSystems systems Implements IEcsPostDestroySystem.PostDestroy(EcsSystems) PreInit(EcsSystems) Declaration public virtual void PreInit(EcsSystems systems) Parameters Type Name Description EcsSystems systems Implements IEcsPreInitSystem.PreInit(EcsSystems) RemoveSystem(IEcsSystem) Declaration public void RemoveSystem(IEcsSystem system) Parameters Type Name Description IEcsSystem system Run(EcsSystems, Single) Declaration public virtual void Run(EcsSystems systems, float deltaTime) Parameters Type Name Description EcsSystems systems Single deltaTime Implements IEcsRunSystem.Run(EcsSystems, Single)"
  },
  "license/index.html": {
    "href": "license/index.html",
    "title": "| EcsLite | 0.1.0",
    "keywords": "window.location.replace('LICENSE.html')"
  },
  "api/Saro.Entities.EcsWorld.Mask.html": {
    "href": "api/Saro.Entities.EcsWorld.Mask.html",
    "title": "Class EcsWorld.Mask | EcsLite | 0.1.0",
    "keywords": "Class EcsWorld.Mask Inheritance Object EcsWorld.Mask Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public sealed class Mask Methods End(Int32) Declaration public EcsFilter End(int capacity = 512) Parameters Type Name Description Int32 capacity Returns Type Description EcsFilter Exc<T>() Declaration public EcsWorld.Mask Exc<T>() where T : struct, IEcsComponent Returns Type Description EcsWorld.Mask Type Parameters Name Description T Exc<T1, T2>() Declaration public EcsWorld.Mask Exc<T1, T2>() where T1 : struct, IEcsComponent where T2 : struct, IEcsComponent Returns Type Description EcsWorld.Mask Type Parameters Name Description T1 T2 Exc<T1, T2, T3>() Declaration public EcsWorld.Mask Exc<T1, T2, T3>() where T1 : struct, IEcsComponent where T2 : struct, IEcsComponent where T3 : struct, IEcsComponent Returns Type Description EcsWorld.Mask Type Parameters Name Description T1 T2 T3 Exc<T1, T2, T3, T4>() Declaration public EcsWorld.Mask Exc<T1, T2, T3, T4>() where T1 : struct, IEcsComponent where T2 : struct, IEcsComponent where T3 : struct, IEcsComponent where T4 : struct, IEcsComponent Returns Type Description EcsWorld.Mask Type Parameters Name Description T1 T2 T3 T4 Exc<T1, T2, T3, T4, T5>() Declaration public EcsWorld.Mask Exc<T1, T2, T3, T4, T5>() where T1 : struct, IEcsComponent where T2 : struct, IEcsComponent where T3 : struct, IEcsComponent where T4 : struct, IEcsComponent where T5 : struct, IEcsComponent Returns Type Description EcsWorld.Mask Type Parameters Name Description T1 T2 T3 T4 T5 Inc<T>() Declaration public EcsWorld.Mask Inc<T>() where T : struct, IEcsComponent Returns Type Description EcsWorld.Mask Type Parameters Name Description T Inc<T1, T2>() Declaration public EcsWorld.Mask Inc<T1, T2>() where T1 : struct, IEcsComponent where T2 : struct, IEcsComponent Returns Type Description EcsWorld.Mask Type Parameters Name Description T1 T2 Inc<T1, T2, T3>() Declaration public EcsWorld.Mask Inc<T1, T2, T3>() where T1 : struct, IEcsComponent where T2 : struct, IEcsComponent where T3 : struct, IEcsComponent Returns Type Description EcsWorld.Mask Type Parameters Name Description T1 T2 T3 Inc<T1, T2, T3, T4>() Declaration public EcsWorld.Mask Inc<T1, T2, T3, T4>() where T1 : struct, IEcsComponent where T2 : struct, IEcsComponent where T3 : struct, IEcsComponent where T4 : struct, IEcsComponent Returns Type Description EcsWorld.Mask Type Parameters Name Description T1 T2 T3 T4 Inc<T1, T2, T3, T4, T5>() Declaration public EcsWorld.Mask Inc<T1, T2, T3, T4, T5>() where T1 : struct, IEcsComponent where T2 : struct, IEcsComponent where T3 : struct, IEcsComponent where T4 : struct, IEcsComponent where T5 : struct, IEcsComponent Returns Type Description EcsWorld.Mask Type Parameters Name Description T1 T2 T3 T4 T5"
  },
  "api/Saro.Entities.EcsWorld.Config.html": {
    "href": "api/Saro.Entities.EcsWorld.Config.html",
    "title": "Struct EcsWorld.Config | EcsLite | 0.1.0",
    "keywords": "Struct EcsWorld.Config Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct Config Fields entities Declaration public int entities Field Value Type Description Int32 filters Declaration public int filters Field Value Type Description Int32 poolDenseSize Declaration public int poolDenseSize Field Value Type Description Int32 poolRecycledSize Declaration public int poolRecycledSize Field Value Type Description Int32 pools Declaration public int pools Field Value Type Description Int32 recycledEntities Declaration public int recycledEntities Field Value Type Description Int32"
  },
  "api/Saro.Entities.EcsWorld.html": {
    "href": "api/Saro.Entities.EcsWorld.html",
    "title": "Class EcsWorld | EcsLite | 0.1.0",
    "keywords": "Class EcsWorld Inheritance Object EcsWorld Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public class EcsWorld Constructors EcsWorld(String, EcsWorld.Config) Declaration public EcsWorld(string worldName, in EcsWorld.Config cfg = default(EcsWorld.Config)) Parameters Type Name Description String worldName EcsWorld.Config cfg Properties NamePool Declaration public EcsPool<Name> NamePool { get; } Property Value Type Description EcsPool < Name > Methods DelEntity(EcsEntity) Declaration public void DelEntity(EcsEntity entity) Parameters Type Name Description EcsEntity entity DelEntity(Int32) Declaration public void DelEntity(int entity) Parameters Type Name Description Int32 entity Destroy() Declaration public void Destroy() Filter() Declaration public EcsWorld.Mask Filter() Returns Type Description EcsWorld.Mask Filter<T>() Declaration [Obsolete(\"use Filter() instead\", true)] public EcsWorld.Mask Filter<T>() where T : struct, IEcsComponent Returns Type Description EcsWorld.Mask Type Parameters Name Description T GetAllEntities(ref Int32[]) Declaration public int GetAllEntities(ref int[] entities) Parameters Type Name Description Int32 [] entities Returns Type Description Int32 GetAllFilters(ref EcsFilter[]) Declaration public int GetAllFilters(ref EcsFilter[] filters) Parameters Type Name Description EcsFilter [] filters Returns Type Description Int32 GetAllocatedEntitiesCount() Declaration public int GetAllocatedEntitiesCount() Returns Type Description Int32 GetAllPools(ref IEcsPool[]) Declaration public int GetAllPools(ref IEcsPool[] pools) Parameters Type Name Description IEcsPool [] pools Returns Type Description Int32 GetComponents(Int32, ref List<Object>) Declaration public void GetComponents(int entity, ref List<object> list) Parameters Type Name Description Int32 entity List < Object > list GetComponents(Int32, ref Object[]) Declaration public int GetComponents(int entity, ref object[] array) Parameters Type Name Description Int32 entity Object [] array Returns Type Description Int32 GetComponentsCount(Int32) Declaration public int GetComponentsCount(int entity) Parameters Type Name Description Int32 entity Returns Type Description Int32 GetComponentTypes(Int32, ref Type[]) Declaration public int GetComponentTypes(int entity, ref Type[] array) Parameters Type Name Description Int32 entity Type [] array Returns Type Description Int32 GetEntitiesCount() Declaration public int GetEntitiesCount() Returns Type Description Int32 GetEntityGen(Int32) Declaration public short GetEntityGen(int entity) Parameters Type Name Description Int32 entity Returns Type Description Int16 GetFreeMaskCount() Declaration public int GetFreeMaskCount() Returns Type Description Int32 GetPool<T>() Declaration public EcsPool<T> GetPool<T>() where T : struct, IEcsComponent Returns Type Description EcsPool <T> Type Parameters Name Description T GetPoolById(Int32) Declaration public IEcsPool GetPoolById(int typeId) Parameters Type Name Description Int32 typeId Returns Type Description IEcsPool GetPoolByType(Type) Declaration public IEcsPool GetPoolByType(Type type) Parameters Type Name Description Type type Returns Type Description IEcsPool GetPoolsCount() Declaration public int GetPoolsCount() Returns Type Description Int32 GetRawEntities() Declaration public EcsWorld.EntityData[] GetRawEntities() Returns Type Description EcsWorld.EntityData [] GetSingleton<T>() Declaration public T GetSingleton<T>() where T : struct, IEcsComponentSingleton Returns Type Description T Type Parameters Name Description T GetSingletonEntity() Declaration public int GetSingletonEntity() Returns Type Description Int32 GetSystem<T>() Declaration public T GetSystem<T>() where T : class Returns Type Description T Type Parameters Name Description T GetWorld(Int32) Declaration public static EcsWorld GetWorld(int world) Parameters Type Name Description Int32 world Returns Type Description EcsWorld GetWorldSize() Declaration public int GetWorldSize() Returns Type Description Int32 IsAlive() Declaration public bool IsAlive() Returns Type Description Boolean IsEntityAlive(Int32) entity是否存活 Declaration public bool IsEntityAlive(int entity) Parameters Type Name Description Int32 entity Returns Type Description Boolean NewEntity() Declaration public int NewEntity() Returns Type Description Int32 NewEntity(String) Declaration public int NewEntity(string name) Parameters Type Name Description String name Returns Type Description Int32 ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Extension Methods EcsEntityExtensions.NewEcsEntity(EcsWorld) EcsEntityExtensions.NewEcsEntity(EcsWorld, String) EcsEntityExtensions.Pack(EcsWorld, Int32)"
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| EcsLite | 0.1.0",
    "keywords": "Copyright (c) 2012 - 2022 leopotam@yandex.ru Данное программное обеспечение и сопутствующая документация (далее - Продукт) выпускается на условиях двойного лицензирования - под собственнической/коммерческой и MIT-Red лицензиями. Условия использования под собственнической/коммерческой лицензии обсуждаются индивидуально, для подробностей следует писать на электронную почту. MIT-Red регулируется совокупностью следующих правил, если хотя бы одно из них невыполнимо - использование Продукта запрещено: Если вы за применение opensource программного обеспечения в военной сфере - вы не можете использовать этот Продукт. Если вы испытываете ненависть к русским или поддерживаете любые нападки на них - вы не можете использовать этот Продукт. Данная лицензия разрешает лицам, получившим копию данного Продукта, безвозмездно использовать Программное обеспечение без ограничений, включая неограниченное право на использование, копирование, изменение, слияние, публикацию и распространение копий Продукта. Указанное выше уведомление об авторском праве и данные условия должны быть включены во все копии или значимые части данного Продукта. ДАННЫЙ ПРОДУКТ ПРЕДОСТАВЛЯЕТСЯ «КАК ЕСТЬ», БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ, ЯВНО ВЫРАЖЕННЫХ ИЛИ ПОДРАЗУМЕВАЕМЫХ, ВКЛЮЧАЯ ГАРАНТИИ ТОВАРНОЙ ПРИГОДНОСТИ, СООТВЕТСТВИЯ ПО ЕГО КОНКРЕТНОМУ НАЗНАЧЕНИЮ И ОТСУТСТВИЯ НАРУШЕНИЙ, НО НЕ ОГРАНИЧИВАЯСЬ ИМИ. НИ В КАКОМ СЛУЧАЕ АВТОРЫ ИЛИ ПРАВООБЛАДАТЕЛИ НЕ НЕСУТ ОТВЕТСТВЕННОСТИ ПО КАКИМ-ЛИБО ИСКАМ, ЗА УЩЕРБ ИЛИ ПО ИНЫМ ТРЕБОВАНИЯМ, В ТОМ ЧИСЛЕ, ПРИ ДЕЙСТВИИ КОНТРАКТА, ДЕЛИКТЕ ИЛИ ИНОЙ СИТУАЦИИ, ВОЗНИКШИМ ИЗ-ЗА ИСПОЛЬЗОВАНИЯ ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ ИЛИ ИНЫХ ДЕЙСТВИЙ С ПРОДУКТОМ."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| EcsLite | 0.1.0",
    "keywords": "This is the documentation for the Scripting APIs of this package."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Ecs Lite | EcsLite | 0.1.0",
    "keywords": "Ecs Lite 这是一个轻量型的ecs框架"
  },
  "api/Saro.Entities.Collections.IntrusiveListNode.html": {
    "href": "api/Saro.Entities.Collections.IntrusiveListNode.html",
    "title": "Struct IntrusiveListNode | EcsLite | 0.1.0",
    "keywords": "Struct IntrusiveListNode Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Namespace : Saro.Entities.Collections <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct IntrusiveListNode : IEcsComponent Fields data Declaration public EcsEntity data Field Value Type Description EcsEntity next Declaration public EcsEntity next Field Value Type Description EcsEntity prev Declaration public EcsEntity prev Field Value Type Description EcsEntity"
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | EcsLite | 0.1.0",
    "keywords": "Changelog All notable changes to this package will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning ."
  },
  "index.html": {
    "href": "index.html",
    "title": "Home Page. | EcsLite | 0.1.0",
    "keywords": "Home Page. This is the home page for this package."
  },
  "api/Saro.Entities.IEcsDestroySystem.html": {
    "href": "api/Saro.Entities.IEcsDestroySystem.html",
    "title": "Interface IEcsDestroySystem | EcsLite | 0.1.0",
    "keywords": "Interface IEcsDestroySystem Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IEcsDestroySystem : IEcsSystem Methods Destroy(EcsSystems) Declaration void Destroy(EcsSystems systems) Parameters Type Name Description EcsSystems systems"
  },
  "api/Saro.Entities.IEcsSystem.html": {
    "href": "api/Saro.Entities.IEcsSystem.html",
    "title": "Interface IEcsSystem | EcsLite | 0.1.0",
    "keywords": "Interface IEcsSystem Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public interface IEcsSystem"
  },
  "api/Saro.Entities.EcsEntity.html": {
    "href": "api/Saro.Entities.EcsEntity.html",
    "title": "Struct EcsEntity | EcsLite | 0.1.0",
    "keywords": "Struct EcsEntity Inherited Members ValueType.ToString() Namespace : Saro.Entities <!--h6><strong>Assembly</strong>: solution.dll</h6--> Syntax public struct EcsEntity : IEquatable<EcsEntity> Fields id Declaration public readonly int id Field Value Type Description Int32 k_Null Declaration public static readonly EcsEntity k_Null Field Value Type Description EcsEntity Properties World Declaration public EcsWorld World { get; } Property Value Type Description EcsWorld Methods Destroy() Declaration public void Destroy() Equals(EcsEntity) Declaration public bool Equals(EcsEntity other) Parameters Type Name Description EcsEntity other Returns Type Description Boolean Implements IEquatable<T>.Equals(T) Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetComponents(ref Object[]) Declaration public int GetComponents(ref object[] array) Parameters Type Name Description Object [] array Returns Type Description Int32 GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() IsAlive() Declaration public bool IsAlive() Returns Type Description Boolean IsNull() Declaration public bool IsNull() Returns Type Description Boolean Operators Equality(EcsEntity, EcsEntity) Declaration public static bool operator ==(EcsEntity x, EcsEntity y) Parameters Type Name Description EcsEntity x EcsEntity y Returns Type Description Boolean Inequality(EcsEntity, EcsEntity) Declaration public static bool operator !=(EcsEntity x, EcsEntity y) Parameters Type Name Description EcsEntity x EcsEntity y Returns Type Description Boolean Extension Methods EcsEntityExtensions.Add<T>(EcsEntity) EcsEntityExtensions.GetOrAdd<T>(EcsEntity) EcsEntityExtensions.Has<T>(EcsEntity) EcsEntityExtensions.Get<T>(EcsEntity) EcsEntityExtensions.Del<T>(EcsEntity) EcsTransformExtensions.GetForward(EcsEntity) EcsTransformExtensions.SetForward(EcsEntity, float3) EcsTransformExtensions.GetRight(EcsEntity) EcsTransformExtensions.SetRight(EcsEntity, float3) EcsTransformExtensions.GetUp(EcsEntity) EcsTransformExtensions.SetUp(EcsEntity, float3) EcsTransformExtensions.SetLocalPosition(EcsEntity, float3) EcsTransformExtensions.SetLocalRotation(EcsEntity, quaternion) EcsTransformExtensions.SetLocalScale(EcsEntity, float3) EcsTransformExtensions.GetLocalPosition(EcsEntity) EcsTransformExtensions.GetLocalRotation(EcsEntity) EcsTransformExtensions.GetLocalScale(EcsEntity) EcsTransformExtensions.SetPosition(EcsEntity, float3) EcsTransformExtensions.SetRotation(EcsEntity, quaternion) EcsTransformExtensions.GetPosition(EcsEntity) EcsTransformExtensions.GetRotation(EcsEntity) EcsTransformExtensions.GetScale(EcsEntity) EcsTransformUtility.SetParent(EcsEntity, EcsEntity) EcsTransformUtility.SetParent(EcsEntity, EcsEntity, Boolean) EcsTransformUtility.GetRoot(EcsEntity) EcsTransformUtility.HasParent(EcsEntity) EcsTransformUtility.GetParent(EcsEntity)"
  }
}